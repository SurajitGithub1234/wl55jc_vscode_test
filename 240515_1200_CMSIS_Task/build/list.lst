ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vListInitialise,"ax",%progbits
  18              		.align	1
  19              		.global	vListInitialise
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	vListInitialise:
  25              	.LFB4:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  31:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  32:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  27              		.loc 1 38 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini lis
  43              		.loc 1 42 37
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 03F10802 		add	r2, r3, #8
  46              		.loc 1 42 18
  47 000e 7B68     		ldr	r3, [r7, #4]
  48 0010 5A60     		str	r2, [r3, #4]
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  49              		.loc 1 46 30
  50 0012 7B68     		ldr	r3, [r7, #4]
  51 0014 4FF0FF32 		mov	r2, #-1
  52 0018 9A60     		str	r2, [r3, #8]
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mi
  53              		.loc 1 50 45
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c 03F10802 		add	r2, r3, #8
  56              		.loc 1 50 26
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 DA60     		str	r2, [r3, #12]
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The
  59              		.loc 1 51 49
  60 0024 7B68     		ldr	r3, [r7, #4]
  61 0026 03F10802 		add	r2, r3, #8
  62              		.loc 1 51 30
  63 002a 7B68     		ldr	r3, [r7, #4]
  64 002c 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 3


  52:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  65              		.loc 1 53 26
  66 002e 7B68     		ldr	r3, [r7, #4]
  67 0030 0022     		movs	r2, #0
  68 0032 1A60     		str	r2, [r3]
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  69              		.loc 1 59 1
  70 0034 00BF     		nop
  71 0036 0C37     		adds	r7, r7, #12
  72              	.LCFI3:
  73              		.cfi_def_cfa_offset 4
  74 0038 BD46     		mov	sp, r7
  75              	.LCFI4:
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 003a 80BC     		pop	{r7}
  79              	.LCFI5:
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 003c 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE4:
  86              		.section	.text.vListInitialiseItem,"ax",%progbits
  87              		.align	1
  88              		.global	vListInitialiseItem
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  93              	vListInitialiseItem:
  94              	.LFB5:
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  95              		.loc 1 63 1
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 8
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100 0000 80B4     		push	{r7}
 101              	.LCFI6:
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 7, -4
 104 0002 83B0     		sub	sp, sp, #12
 105              	.LCFI7:
 106              		.cfi_def_cfa_offset 16
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI8:
 109              		.cfi_def_cfa_register 7
 110 0006 7860     		str	r0, [r7, #4]
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 4


  65:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pxContainer = NULL;
 111              		.loc 1 65 22
 112 0008 7B68     		ldr	r3, [r7, #4]
 113 000a 0022     		movs	r2, #0
 114 000c 1A61     		str	r2, [r3, #16]
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 115              		.loc 1 71 1
 116 000e 00BF     		nop
 117 0010 0C37     		adds	r7, r7, #12
 118              	.LCFI9:
 119              		.cfi_def_cfa_offset 4
 120 0012 BD46     		mov	sp, r7
 121              	.LCFI10:
 122              		.cfi_def_cfa_register 13
 123              		@ sp needed
 124 0014 80BC     		pop	{r7}
 125              	.LCFI11:
 126              		.cfi_restore 7
 127              		.cfi_def_cfa_offset 0
 128 0016 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE5:
 132              		.section	.text.vListInsertEnd,"ax",%progbits
 133              		.align	1
 134              		.global	vListInsertEnd
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	vListInsertEnd:
 140              	.LFB6:
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 141              		.loc 1 75 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 16
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI12:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 85B0     		sub	sp, sp, #20
 151              	.LCFI13:
 152              		.cfi_def_cfa_offset 24
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI14:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
 157 0008 3960     		str	r1, [r7]
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 5


 158              		.loc 1 76 20
 159 000a 7B68     		ldr	r3, [r7, #4]
 160 000c 5B68     		ldr	r3, [r3, #4]
 161 000e FB60     		str	r3, [r7, #12]
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 162              		.loc 1 87 24
 163 0010 3B68     		ldr	r3, [r7]
 164 0012 FA68     		ldr	r2, [r7, #12]
 165 0014 5A60     		str	r2, [r3, #4]
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 166              		.loc 1 88 37
 167 0016 FB68     		ldr	r3, [r7, #12]
 168 0018 9A68     		ldr	r2, [r3, #8]
 169              		.loc 1 88 28
 170 001a 3B68     		ldr	r3, [r7]
 171 001c 9A60     		str	r2, [r3, #8]
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 172              		.loc 1 93 9
 173 001e FB68     		ldr	r3, [r7, #12]
 174 0020 9B68     		ldr	r3, [r3, #8]
 175              		.loc 1 93 30
 176 0022 3A68     		ldr	r2, [r7]
 177 0024 5A60     		str	r2, [r3, #4]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 178              		.loc 1 94 22
 179 0026 FB68     		ldr	r3, [r7, #12]
 180 0028 3A68     		ldr	r2, [r7]
 181 002a 9A60     		str	r2, [r3, #8]
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 182              		.loc 1 97 29
 183 002c 3B68     		ldr	r3, [r7]
 184 002e 7A68     		ldr	r2, [r7, #4]
 185 0030 1A61     		str	r2, [r3, #16]
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 186              		.loc 1 99 10
 187 0032 7B68     		ldr	r3, [r7, #4]
 188 0034 1B68     		ldr	r3, [r3]
 189              		.loc 1 99 29
 190 0036 5A1C     		adds	r2, r3, #1
 191 0038 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 6


 192 003a 1A60     		str	r2, [r3]
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 193              		.loc 1 100 1
 194 003c 00BF     		nop
 195 003e 1437     		adds	r7, r7, #20
 196              	.LCFI15:
 197              		.cfi_def_cfa_offset 4
 198 0040 BD46     		mov	sp, r7
 199              	.LCFI16:
 200              		.cfi_def_cfa_register 13
 201              		@ sp needed
 202 0042 80BC     		pop	{r7}
 203              	.LCFI17:
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 0044 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE6:
 210              		.section	.text.vListInsert,"ax",%progbits
 211              		.align	1
 212              		.global	vListInsert
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	vListInsert:
 218              	.LFB7:
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 219              		.loc 1 104 1
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 16
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0000 80B4     		push	{r7}
 225              	.LCFI18:
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 85B0     		sub	sp, sp, #20
 229              	.LCFI19:
 230              		.cfi_def_cfa_offset 24
 231 0004 00AF     		add	r7, sp, #0
 232              	.LCFI20:
 233              		.cfi_def_cfa_register 7
 234 0006 7860     		str	r0, [r7, #4]
 235 0008 3960     		str	r1, [r7]
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 236              		.loc 1 106 18
 237 000a 3B68     		ldr	r3, [r7]
 238 000c 1B68     		ldr	r3, [r3]
 239 000e BB60     		str	r3, [r7, #8]
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 7


 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCBs which are
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 240              		.loc 1 122 4
 241 0010 BB68     		ldr	r3, [r7, #8]
 242 0012 B3F1FF3F 		cmp	r3, #-1
 243 0016 03D1     		bne	.L5
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 244              		.loc 1 124 14
 245 0018 7B68     		ldr	r3, [r7, #4]
 246 001a 1B69     		ldr	r3, [r3, #16]
 247 001c FB60     		str	r3, [r7, #12]
 248 001e 0CE0     		b	.L6
 249              	.L5:
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see https://www.freertos.org/FAQHelp.html for
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		https://www.freertos.org/a00110.html#configASSERT
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see https://www.freertos.org/Stacks-and-stack-overflow-checking.html
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   https://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   https://www.freertos.org/a00110.html
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 250              		.loc 1 150 19
 251 0020 7B68     		ldr	r3, [r7, #4]
 252 0022 0833     		adds	r3, r3, #8
 253 0024 FB60     		str	r3, [r7, #12]
 254              		.loc 1 150 3
 255 0026 02E0     		b	.L7
 256              	.L8:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 8


 257              		.loc 1 150 125 discriminator 3
 258 0028 FB68     		ldr	r3, [r7, #12]
 259 002a 5B68     		ldr	r3, [r3, #4]
 260 002c FB60     		str	r3, [r7, #12]
 261              	.L7:
 262              		.loc 1 150 71 discriminator 1
 263 002e FB68     		ldr	r3, [r7, #12]
 264 0030 5B68     		ldr	r3, [r3, #4]
 265              		.loc 1 150 79 discriminator 1
 266 0032 1B68     		ldr	r3, [r3]
 267              		.loc 1 150 3 discriminator 1
 268 0034 BA68     		ldr	r2, [r7, #8]
 269 0036 9A42     		cmp	r2, r3
 270 0038 F6D2     		bcs	.L8
 271              	.L6:
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 272              		.loc 1 157 36
 273 003a FB68     		ldr	r3, [r7, #12]
 274 003c 5A68     		ldr	r2, [r3, #4]
 275              		.loc 1 157 24
 276 003e 3B68     		ldr	r3, [r7]
 277 0040 5A60     		str	r2, [r3, #4]
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 278              		.loc 1 158 15
 279 0042 3B68     		ldr	r3, [r7]
 280 0044 5B68     		ldr	r3, [r3, #4]
 281              		.loc 1 158 36
 282 0046 3A68     		ldr	r2, [r7]
 283 0048 9A60     		str	r2, [r3, #8]
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 284              		.loc 1 159 28
 285 004a 3B68     		ldr	r3, [r7]
 286 004c FA68     		ldr	r2, [r7, #12]
 287 004e 9A60     		str	r2, [r3, #8]
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 288              		.loc 1 160 21
 289 0050 FB68     		ldr	r3, [r7, #12]
 290 0052 3A68     		ldr	r2, [r7]
 291 0054 5A60     		str	r2, [r3, #4]
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 292              		.loc 1 164 29
 293 0056 3B68     		ldr	r3, [r7]
 294 0058 7A68     		ldr	r2, [r7, #4]
 295 005a 1A61     		str	r2, [r3, #16]
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 296              		.loc 1 166 10
 297 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 9


 298 005e 1B68     		ldr	r3, [r3]
 299              		.loc 1 166 29
 300 0060 5A1C     		adds	r2, r3, #1
 301 0062 7B68     		ldr	r3, [r7, #4]
 302 0064 1A60     		str	r2, [r3]
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 303              		.loc 1 167 1
 304 0066 00BF     		nop
 305 0068 1437     		adds	r7, r7, #20
 306              	.LCFI21:
 307              		.cfi_def_cfa_offset 4
 308 006a BD46     		mov	sp, r7
 309              	.LCFI22:
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 006c 80BC     		pop	{r7}
 313              	.LCFI23:
 314              		.cfi_restore 7
 315              		.cfi_def_cfa_offset 0
 316 006e 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE7:
 320              		.section	.text.uxListRemove,"ax",%progbits
 321              		.align	1
 322              		.global	uxListRemove
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	uxListRemove:
 328              	.LFB8:
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 329              		.loc 1 171 1
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 16
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              	.LCFI24:
 336              		.cfi_def_cfa_offset 4
 337              		.cfi_offset 7, -4
 338 0002 85B0     		sub	sp, sp, #20
 339              	.LCFI25:
 340              		.cfi_def_cfa_offset 24
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI26:
 343              		.cfi_def_cfa_register 7
 344 0006 7860     		str	r0, [r7, #4]
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = pxItemToRemove->pxContainer;
 345              		.loc 1 174 16
 346 0008 7B68     		ldr	r3, [r7, #4]
 347 000a 1B69     		ldr	r3, [r3, #16]
 348 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 10


 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 349              		.loc 1 176 16
 350 000e 7B68     		ldr	r3, [r7, #4]
 351 0010 5B68     		ldr	r3, [r3, #4]
 352              		.loc 1 176 53
 353 0012 7A68     		ldr	r2, [r7, #4]
 354 0014 9268     		ldr	r2, [r2, #8]
 355              		.loc 1 176 37
 356 0016 9A60     		str	r2, [r3, #8]
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 357              		.loc 1 177 16
 358 0018 7B68     		ldr	r3, [r7, #4]
 359 001a 9B68     		ldr	r3, [r3, #8]
 360              		.loc 1 177 53
 361 001c 7A68     		ldr	r2, [r7, #4]
 362 001e 5268     		ldr	r2, [r2, #4]
 363              		.loc 1 177 37
 364 0020 5A60     		str	r2, [r3, #4]
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 365              		.loc 1 183 12
 366 0022 FB68     		ldr	r3, [r7, #12]
 367 0024 5B68     		ldr	r3, [r3, #4]
 368              		.loc 1 183 4
 369 0026 7A68     		ldr	r2, [r7, #4]
 370 0028 9A42     		cmp	r2, r3
 371 002a 03D1     		bne	.L10
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 372              		.loc 1 185 35
 373 002c 7B68     		ldr	r3, [r7, #4]
 374 002e 9A68     		ldr	r2, [r3, #8]
 375              		.loc 1 185 19
 376 0030 FB68     		ldr	r3, [r7, #12]
 377 0032 5A60     		str	r2, [r3, #4]
 378              	.L10:
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxContainer = NULL;
 379              		.loc 1 192 30
 380 0034 7B68     		ldr	r3, [r7, #4]
 381 0036 0022     		movs	r2, #0
 382 0038 1A61     		str	r2, [r3, #16]
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 383              		.loc 1 193 10
 384 003a FB68     		ldr	r3, [r7, #12]
 385 003c 1B68     		ldr	r3, [r3]
 386              		.loc 1 193 29
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 11


 387 003e 5A1E     		subs	r2, r3, #1
 388 0040 FB68     		ldr	r3, [r7, #12]
 389 0042 1A60     		str	r2, [r3]
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 390              		.loc 1 195 15
 391 0044 FB68     		ldr	r3, [r7, #12]
 392 0046 1B68     		ldr	r3, [r3]
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 393              		.loc 1 196 1
 394 0048 1846     		mov	r0, r3
 395 004a 1437     		adds	r7, r7, #20
 396              	.LCFI27:
 397              		.cfi_def_cfa_offset 4
 398 004c BD46     		mov	sp, r7
 399              	.LCFI28:
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 004e 80BC     		pop	{r7}
 403              	.LCFI29:
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0050 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE8:
 410              		.text
 411              	.Letext0:
 412              		.file 2 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 413              		.file 3 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 414              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 415              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:18     .text.vListInitialise:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:24     .text.vListInitialise:00000000 vListInitialise
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:87     .text.vListInitialiseItem:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:93     .text.vListInitialiseItem:00000000 vListInitialiseItem
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:133    .text.vListInsertEnd:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:139    .text.vListInsertEnd:00000000 vListInsertEnd
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:211    .text.vListInsert:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:217    .text.vListInsert:00000000 vListInsert
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:321    .text.uxListRemove:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccCA1XNX.s:327    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
