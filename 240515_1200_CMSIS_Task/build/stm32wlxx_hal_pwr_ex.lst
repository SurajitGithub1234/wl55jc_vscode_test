ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  18              		.align	2
  21              	CHANNEL_OFFSET_TAB:
  22 0000 081C3044 		.ascii	"\010\0340DXl\200"
  22      586C80
  23              		.section	.text.LL_PWR_EnableSRAM2Retention,"ax",%progbits
  24              		.align	1
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	LL_PWR_EnableSRAM2Retention:
  30              	.LFB328:
  31              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @file    stm32wlxx_ll_pwr.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #ifndef __STM32WLxx_LL_PWR_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define __STM32WLxx_LL_PWR_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #include "stm32wlxx.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 2


  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #if defined(PWR)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_Private_Constants PWR Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define PWR_FLASH_POWER_MODE_UNLOCK_CODE  (0x0000C1B0UL)
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWUF                    PWR_SCR_CWUF
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWUF3                   PWR_SCR_CWUF3
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWUF2                   PWR_SCR_CWUF2
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWUF1                   PWR_SCR_CWUF1
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWPVDF                  PWR_SCR_CWPVDF
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CWRFBUSYF               PWR_SCR_CWRFBUSYF
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SCR_CC2HF                   PWR_SCR_CC2HF
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C2CSSF               PWR_EXTSCR_C2CSSF
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C1CSSF               PWR_EXTSCR_C1CSSF
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WUFI                    PWR_SR1_WUFI
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WUF3                    PWR_SR1_WUF3
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WUF2                    PWR_SR1_WUF2
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WUF1                    PWR_SR1_WUF1
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WPVDF                   PWR_SR1_WPVDF
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 3


  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_LDORDY                  PWR_SR2_LDORDY
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_PVMO3                   PWR_SR2_PVMO3
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_PVDO                    PWR_SR2_PVDO
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_RFEOL                   PWR_SR2_RFEOLF
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_VOSF                    PWR_SR2_VOSF
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_REGLPF                  PWR_SR2_REGLPF
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_REGLPS                  PWR_SR2_REGLPS
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_REGMRS                  PWR_SR2_REGMRS
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* SMPS flags */
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_SMPSRDY                 PWR_SR2_SMPSRDY
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Radio flags */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_WRFBUSY                 PWR_SR1_WRFBUSYF   /* Radio busy flag for wake-up and in
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_RFBUSYS                 PWR_SR2_RFBUSYS    /* Radio busy signal flag (current st
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_RFBUSYMS                PWR_SR2_RFBUSYMS   /* Radio busy masked signal flag (cur
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Multicore flags */
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C1SBF                PWR_EXTSCR_C1SBF    /* System Standby flag for CPU1 */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C1STOP2F             PWR_EXTSCR_C1STOP2F /* System Stop 2 flag for CPU1 */
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C1STOPF              PWR_EXTSCR_C1STOPF  /* System Stop 0 or stop 1 flag for 
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C1DS                 PWR_EXTSCR_C1DS     /* CPU1 deepsleep mode */
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #if defined(DUAL_CORE)
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C2SBF                PWR_EXTSCR_C2SBF    /* System Standby flag for CPU2 */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C2STOP2F             PWR_EXTSCR_C2STOP2F /* System Stop 2 flag for CPU2 */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C2STOPF              PWR_EXTSCR_C2STOPF  /* System Stop 0 or stop 1 flag for 
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_EXTSCR_C2DS                 PWR_EXTSCR_C2DS     /* CPU2 deepsleep mode */
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR2_C2BOOTS                 PWR_SR2_C2BOOTS     /* CPU2 boot request source informat
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SR1_C2HF                    PWR_SR1_C2HF        /* CPU2 hold interrupt flag */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #endif
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE REGU VOLTAGE
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR1_VOS_0) /* Regulator voltage output range 1 mode
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         (PWR_CR1_VOS_1) /* Regulator voltage output range 2 mode
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR MODE PWR
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_MODE_STOP0                  (0x000000000UL)
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_MODE_STOP1                  (PWR_CR1_LPMS_0)
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_MODE_STOP2                  (PWR_CR1_LPMS_1)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                (PWR_CR1_LPMS_1 | PWR_CR1_LPMS_0)
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_MODE_SHUTDOWN               (PWR_CR1_LPMS_2 | PWR_CR1_LPMS_1 | PWR_CR1_LPMS_0)
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_FLASH_LPRUN_POWER_DOWN_MODE Flash power-down mode during low-power run mode
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 4


 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_FLASH_LPRUN_MODE_IDLE       (0x000000000UL)
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_FLASH_LPRUN_MODE_POWER_DOWN (PWR_CR1_FPDR)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_FLASH_SLEEP_POWER_DOWN_MODE Flash power-down mode during sleep mode
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_FLASH_SLEEP_MODE_IDLE       (0x000000000UL)
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_FLASH_SLEEP_MODE_POWER_DOWN (PWR_CR1_FPDS)
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVM Peripheral voltage monitoring
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVM_VDDA_1_62V              (PWR_CR2_PVME3)     /* Monitoring VDDA vs. 1.62V  */
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL PVDLEVEL
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (0x00000000UL)                                  /* VPVD0
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR2_PLS_0)                                 /* VPVD1
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR2_PLS_1)                                 /* VPVD2
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR2_PLS_1 | PWR_CR2_PLS_0)                 /* VPVD3
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR2_PLS_2)                                 /* VPVD4
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR2_PLS_2 | PWR_CR2_PLS_0)                 /* VPVD5
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR2_PLS_2 | PWR_CR2_PLS_1)                 /* VPVD6
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR2_PLS_2 | PWR_CR2_PLS_1 | PWR_CR2_PLS_0) /* Exter
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_EOL_OPERATING_MODES Monitoring of supply voltage for radio operating level 
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_EOL_DISABLE                  (0x00000000UL)    /*!< Monitoring of supply volta
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_EOL_ENABLE                   (PWR_CR5_RFEOLEN) /*!< Monitoring of supply volta
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP WAKEUP
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CR3_EWUP1)
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CR3_EWUP2)
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CR3_EWUP3)
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 5


 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_BATT_CHARG_RESISTOR BATT CHARG RESISTOR
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_BATT_CHARG_RESISTOR_5K      (0x00000000UL)
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_BATT_CHARGRESISTOR_1_5K     (PWR_CR4_VBRS)
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO GPIO
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_A                      ((uint32_t)(&(PWR->PUCRA)))
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_B                      ((uint32_t)(&(PWR->PUCRB)))
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_C                      ((uint32_t)(&(PWR->PUCRC)))
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_H                      ((uint32_t)(&(PWR->PUCRH)))
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GPIO_BIT GPIO BIT
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Note: LL_PWR_GPIO_BIT_x defined from port B because all pins are available */
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /*       for PWR pull-up and pull-down.                                       */
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_0                  (PWR_PUCRB_PB0)
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_1                  (PWR_PUCRB_PB1)
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_2                  (PWR_PUCRB_PB2)
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_3                  (PWR_PUCRB_PB3)
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_4                  (PWR_PUCRB_PB4)
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_5                  (PWR_PUCRB_PB5)
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_6                  (PWR_PUCRB_PB6)
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_7                  (PWR_PUCRB_PB7)
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_8                  (PWR_PUCRB_PB8)
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_9                  (PWR_PUCRB_PB9)
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_10                 (PWR_PUCRB_PB10)
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_11                 (PWR_PUCRB_PB11)
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_12                 (PWR_PUCRB_PB12)
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_13                 (PWR_PUCRB_PB13)
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_14                 (PWR_PUCRB_PB14)
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_GPIO_BIT_15                 (PWR_PUCRB_PB15)
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_SMPS_OPERATING_MODES SMPS step down converter operating modes
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SMPS_BYPASS                 (0x00000000UL)    /*!< SMPS step down in bypass mode (di
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SMPS_STEP_DOWN              (PWR_CR5_SMPSEN)  /*!< SMPS step down in step down mode 
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_RADIO_BUSY_POLARITY Radio busy signal polarity
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 6


 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_BUSY_POLARITY_RISING  (0x00000000UL)     /*!< Radio busy signal polarity to ri
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_BUSY_POLARITY_FALLING (PWR_CR4_WRFBUSYP) /*!< Radio busy signal polarity to fa
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_RADIO_BUSY_TRIGGER Radio busy trigger
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_BUSY_TRIGGER_NONE     (0x00000000UL)     /*!< Radio busy trigger action: no wa
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_BUSY_TRIGGER_WU_IT    (PWR_CR3_EWRFBUSY) /*!< Radio busy trigger action: wake-
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_RADIO_IRQ_TRIGGER Radio IRQ trigger
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_IRQ_TRIGGER_NONE      (0x00000000UL)     /*!< Radio IRQ trigger action: no wak
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_RADIO_IRQ_TRIGGER_WU_IT     (PWR_CR3_EWRFIRQ)  /*!< Radio IRQ trigger action: wake-u
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EC_RADIO_SPI_NSS_SRC Radio Sub-GHz radio SPI NSS source
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SUBGHZSPI_NSS_SRC_SW        (0x00000000UL)            /*!< Sub-GHz radio SPI NSS con
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_SUBGHZSPI_NSS_SRC_LPTIM3    (PWR_CR1_SUBGHZSPINSSSEL) /*!< Sub-GHz radio SPI NSS con
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common Write and read registers Macros
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Write a value in PWR register
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  __REG__ Register to be written
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 7


 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Read a value in PWR register
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  __REG__ Register to be read
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Register value
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Switch from run main mode to run low-power mode.
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_EnterLowPowerRunMode
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnterLowPowerRunMode(void)
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Switch from run main mode to low-power mode.
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_ExitLowPowerRunMode
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_ExitLowPowerRunMode(void)
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if the regulator is in low-power mode
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          LPR           LL_PWR_IsEnabledLowPowerRunMode
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledLowPowerRunMode(void)
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR1, PWR_CR1_LPR) == (PWR_CR1_LPR)) ? 1UL : 0UL);
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set the main internal regulator output voltage
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   A delay is required for the internal regulator to be ready
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         after the voltage scaling has been changed.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 8


 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         Check whether regulator reached the selected voltage level
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         can be done using function @ref LL_PWR_IsActiveFlag_VOS().
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_SetRegulVoltageScaling
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get the main internal regulator output voltage
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          VOS           LL_PWR_GetRegulVoltageScaling
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRegulVoltageScaling(void)
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_VOS));
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable access to the backup domain
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_EnableBkUpAccess
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBkUpAccess(void)
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR1, PWR_CR1_DBP);
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable access to the backup domain
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_DisableBkUpAccess
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBkUpAccess(void)
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR1, PWR_CR1_DBP);
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if the backup domain is enabled
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          DBP           LL_PWR_IsEnabledBkUpAccess
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledBkUpAccess(void)
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR1, PWR_CR1_DBP) == (PWR_CR1_DBP)) ? 1UL : 0UL);
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set Low-Power mode
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 9


 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          LPMS          LL_PWR_SetPowerMode
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  LowPowerMode This parameter can be one of the following values:
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP0
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP1
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP2
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_SHUTDOWN
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPowerMode(uint32_t LowPowerMode)
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, LowPowerMode);
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get Low-Power mode
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          LPMS          LL_PWR_GetPowerMode
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP0
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP1
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STOP2
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_STANDBY
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_MODE_SHUTDOWN
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPowerMode(void)
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_LPMS));
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set flash power-down mode during low-power run mode
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          FPDR          LL_PWR_SetFlashPowerModeLPRun
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  FlashLowPowerMode This parameter can be one of the following values:
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_LPRUN_MODE_IDLE
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_LPRUN_MODE_POWER_DOWN
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetFlashPowerModeLPRun(uint32_t FlashLowPowerMode)
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   /* Unlock bit FPDR */
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   WRITE_REG(PWR->CR1, PWR_FLASH_POWER_MODE_UNLOCK_CODE);
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   /* Update bit FPDR */
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_FPDR, FlashLowPowerMode);
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get flash power-down mode during low-power run mode
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          FPDR          LL_PWR_GetFlashPowerModeLPRun
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_LPRUN_MODE_IDLE
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_LPRUN_MODE_POWER_DOWN
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetFlashPowerModeLPRun(void)
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_FPDR));
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 10


 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set flash power-down mode during sleep mode
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          FPDS          LL_PWR_SetFlashPowerModeSleep
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  FlashLowPowerMode This parameter can be one of the following values:
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_SLEEP_MODE_IDLE
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_SLEEP_MODE_POWER_DOWN
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetFlashPowerModeSleep(uint32_t FlashLowPowerMode)
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_FPDS, FlashLowPowerMode);
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get flash power-down mode during sleep mode
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          FPDS          LL_PWR_GetFlashPowerModeSleep
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_SLEEP_MODE_IDLE
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_FLASH_SLEEP_MODE_POWER_DOWN
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetFlashPowerModeSleep(void)
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_FPDS));
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable the Power Voltage Monitoring on a peripheral
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVME3         LL_PWR_EnablePVM
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_1_62V
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePVM(uint32_t PeriphVoltage)
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR2, PeriphVoltage);
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable the Power Voltage Monitoring on a peripheral
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVME3         LL_PWR_DisablePVM
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_1_62V
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePVM(uint32_t PeriphVoltage)
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PeriphVoltage);
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if Power Voltage Monitoring is enabled on a peripheral
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVME3         LL_PWR_IsEnabledPVM
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  PeriphVoltage This parameter can be one of the following values:
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVM_VDDA_1_62V
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 11


 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPVM(uint32_t PeriphVoltage)
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR2, PeriphVoltage) == (PeriphVoltage)) ? 1UL : 0UL);
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Configure the voltage threshold detected by the Power Voltage Detector
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PLS           LL_PWR_SetPVDLevel
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  PVDLevel This parameter can be one of the following values:
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetPVDLevel(uint32_t PVDLevel)
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR2, PWR_CR2_PLS, PVDLevel);
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get the voltage threshold detection
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PLS           LL_PWR_GetPVDLevel
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_0
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_1
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_2
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_3
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_4
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_5
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_6
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_PVDLEVEL_7
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetPVDLevel(void)
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR2, PWR_CR2_PLS));
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable Power Voltage Detector
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_EnablePVD
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePVD(void)
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR2, PWR_CR2_PVDE);
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable Power Voltage Detector
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_DisablePVD
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 12


 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePVD(void)
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR2, PWR_CR2_PVDE);
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if Power Voltage Detector is enabled
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR2          PVDE          LL_PWR_IsEnabledPVD
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPVD(void)
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR2, PWR_CR2_PVDE) == (PWR_CR2_PVDE)) ? 1UL : 0UL);
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set monitoring of supply voltage for radio operating level
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         (radio End Of Life), radio must be in active mode.
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          RFEOLEN       LL_PWR_SetRadioEOL
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioEOL This parameter can be one of the following values:
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_EOL_DISABLE
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_EOL_ENABLE
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRadioEOL(uint32_t RadioEOL)
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR5, PWR_CR5_RFEOLEN, RadioEOL);
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get monitoring of supply voltage for radio operating level (radio End Of Life)
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          RFEOLEN       LL_PWR_GetRadioEOL
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_EOL_DISABLE
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_EOL_ENABLE
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRadioEOL(void)
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR5, PWR_CR5_RFEOLEN));
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable Internal Wake-up line
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_EnableInternWU
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableInternWU(void)
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_EIWUL);
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable Internal Wake-up line
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_DisableInternWU
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableInternWU(void)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 13


 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWUL);
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if Internal Wake-up line is enabled
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EIWF          LL_PWR_IsEnabledInternWU
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledInternWU(void)
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_EIWUL) == (PWR_CR3_EIWUL)) ? 1UL : 0UL);
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable pull-up and pull-down configuration
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          APC           LL_PWR_EnablePUPDCfg
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnablePUPDCfg(void)
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable pull-up and pull-down configuration
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          APC           LL_PWR_DisablePUPDCfg
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisablePUPDCfg(void)
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if pull-up and pull-down configuration is enabled
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          APC           LL_PWR_IsEnabledPUPDCfg
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledPUPDCfg(void)
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_APC) == (PWR_CR3_APC)) ? 1UL : 0UL);
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable SRAM2 content retention in Standby mode
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          RRS           LL_PWR_EnableSRAM2Retention
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableSRAM2Retention(void)
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
  32              		.loc 1 706 1
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 14


  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 7, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
  44              		.loc 1 707 3
  45 0004 044B     		ldr	r3, .L2
  46 0006 9B68     		ldr	r3, [r3, #8]
  47 0008 034A     		ldr	r2, .L2
  48 000a 43F40073 		orr	r3, r3, #512
  49 000e 9360     		str	r3, [r2, #8]
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
  50              		.loc 1 708 1
  51 0010 00BF     		nop
  52 0012 BD46     		mov	sp, r7
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 13
  55              		@ sp needed
  56 0014 80BC     		pop	{r7}
  57              	.LCFI3:
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 0016 7047     		bx	lr
  61              	.L3:
  62              		.align	2
  63              	.L2:
  64 0018 00040058 		.word	1476396032
  65              		.cfi_endproc
  66              	.LFE328:
  68              		.section	.text.LL_PWR_DisableSRAM2Retention,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	LL_PWR_DisableSRAM2Retention:
  75              	.LFB329:
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable SRAM2 content retention in Standby mode
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          RRS           LL_PWR_DisableSRAM2Retention
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableSRAM2Retention(void)
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
  76              		.loc 1 716 1
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 00AF     		add	r7, sp, #0
  86              	.LCFI5:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 15


  87              		.cfi_def_cfa_register 7
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
  88              		.loc 1 717 3
  89 0004 044B     		ldr	r3, .L5
  90 0006 9B68     		ldr	r3, [r3, #8]
  91 0008 034A     		ldr	r2, .L5
  92 000a 23F40073 		bic	r3, r3, #512
  93 000e 9360     		str	r3, [r2, #8]
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
  94              		.loc 1 718 1
  95 0010 00BF     		nop
  96 0012 BD46     		mov	sp, r7
  97              	.LCFI6:
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0014 80BC     		pop	{r7}
 101              	.LCFI7:
 102              		.cfi_restore 7
 103              		.cfi_def_cfa_offset 0
 104 0016 7047     		bx	lr
 105              	.L6:
 106              		.align	2
 107              	.L5:
 108 0018 00040058 		.word	1476396032
 109              		.cfi_endproc
 110              	.LFE329:
 112              		.section	.text.LL_PWR_EnableWPVD,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	LL_PWR_EnableWPVD:
 119              	.LFB331:
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if SRAM2 content retention in Standby mode is enabled
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          RRS           LL_PWR_IsEnabledSRAM2Retention
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledSRAM2Retention(void)
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_RRS) == (PWR_CR3_RRS)) ? 1UL : 0UL);
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable wake-up power voltage detection with trigger for CPU1
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Wake-up power voltage detection status can be checked
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         using function @ref LL_PWR_IsActiveFlag_WPVD().
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWPVD         LL_PWR_EnableWPVD
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableWPVD(void)
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 120              		.loc 1 738 1
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 16


 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              	.LCFI8:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 7, -4
 129 0002 00AF     		add	r7, sp, #0
 130              	.LCFI9:
 131              		.cfi_def_cfa_register 7
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_EWPVD);
 132              		.loc 1 739 3
 133 0004 044B     		ldr	r3, .L8
 134 0006 9B68     		ldr	r3, [r3, #8]
 135 0008 034A     		ldr	r2, .L8
 136 000a 43F48073 		orr	r3, r3, #256
 137 000e 9360     		str	r3, [r2, #8]
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 138              		.loc 1 740 1
 139 0010 00BF     		nop
 140 0012 BD46     		mov	sp, r7
 141              	.LCFI10:
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 0014 80BC     		pop	{r7}
 145              	.LCFI11:
 146              		.cfi_restore 7
 147              		.cfi_def_cfa_offset 0
 148 0016 7047     		bx	lr
 149              	.L9:
 150              		.align	2
 151              	.L8:
 152 0018 00040058 		.word	1476396032
 153              		.cfi_endproc
 154              	.LFE331:
 156              		.section	.text.LL_PWR_DisableWPVD,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	LL_PWR_DisableWPVD:
 163              	.LFB332:
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable wake-up power voltage detection with trigger for CPU1
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWPVD         LL_PWR_DisableWPVD
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableWPVD(void)
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 164              		.loc 1 748 1
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              	.LCFI12:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 17


 173 0002 00AF     		add	r7, sp, #0
 174              	.LCFI13:
 175              		.cfi_def_cfa_register 7
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EWPVD);
 176              		.loc 1 749 3
 177 0004 044B     		ldr	r3, .L11
 178 0006 9B68     		ldr	r3, [r3, #8]
 179 0008 034A     		ldr	r2, .L11
 180 000a 23F48073 		bic	r3, r3, #256
 181 000e 9360     		str	r3, [r2, #8]
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 182              		.loc 1 750 1
 183 0010 00BF     		nop
 184 0012 BD46     		mov	sp, r7
 185              	.LCFI14:
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 0014 80BC     		pop	{r7}
 189              	.LCFI15:
 190              		.cfi_restore 7
 191              		.cfi_def_cfa_offset 0
 192 0016 7047     		bx	lr
 193              	.L12:
 194              		.align	2
 195              	.L11:
 196 0018 00040058 		.word	1476396032
 197              		.cfi_endproc
 198              	.LFE332:
 200              		.section	.text.LL_PWR_SetRadioBusyPolarity,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	LL_PWR_SetRadioBusyPolarity:
 207              	.LFB360:
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if wake-up power voltage detection is enabled with trigger for CPU1
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWPVD         LL_PWR_IsEnabledWPVD
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledWPVD(void)
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_EWPVD) == (PWR_CR3_EWPVD)) ? 1UL : 0UL);
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable periodical sampling of supply voltage in Stop and Standby
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes for detecting condition of PDR and BOR reset.
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Caution: When enabled, and if the supply voltage drops below
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         the minimum operating condition between two supply voltage samples,
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         the reset condition is missed and no reset is generated.
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ULPEN         LL_PWR_EnableBORPVD_ULP
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBORPVD_ULP(void)
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 18


 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, PWR_CR3_ULPEN);
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable periodical sampling of supply voltage in Stop and Standby
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes for detecting condition of PDR and BOR reset.
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ULPEN         LL_PWR_DisableBORPVD_ULP
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBORPVD_ULP(void)
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, PWR_CR3_ULPEN);
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if periodical sampling of supply voltage in Stop and Standby
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes is enabled.
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ULPEN         LL_PWR_IsEnabledBORPVD_ULP
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledBORPVD_ULP(void)
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, PWR_CR3_ULPEN) == (PWR_CR3_ULPEN)) ? 1UL : 0UL);
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable the WakeUp PINx functionality
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWUP1         LL_PWR_EnableWakeUpPin\n
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP2         LL_PWR_EnableWakeUpPin\n
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP3         LL_PWR_EnableWakeUpPin
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableWakeUpPin(uint32_t WakeUpPin)
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR3, WakeUpPin);
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable the WakeUp PINx functionality
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWUP1         LL_PWR_DisableWakeUpPin\n
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP2         LL_PWR_DisableWakeUpPin\n
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP3         LL_PWR_DisableWakeUpPin
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableWakeUpPin(uint32_t WakeUpPin)
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR3, WakeUpPin);
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 19


 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if the WakeUp PINx functionality is enabled
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          EWUP1         LL_PWR_IsEnabledWakeUpPin\n
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP2         LL_PWR_IsEnabledWakeUpPin\n
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR3          EWUP3         LL_PWR_IsEnabledWakeUpPin
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledWakeUpPin(uint32_t WakeUpPin)
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR3, WakeUpPin) == (WakeUpPin)) ? 1UL : 0UL);
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set the resistor impedance
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          VBRS          LL_PWR_SetBattChargResistor
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  Resistor This parameter can be one of the following values:
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_BATT_CHARG_RESISTOR_5K
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_BATT_CHARGRESISTOR_1_5K
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetBattChargResistor(uint32_t Resistor)
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, Resistor);
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get the resistor impedance
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          VBRS          LL_PWR_GetBattChargResistor
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_BATT_CHARG_RESISTOR_5K
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_BATT_CHARGRESISTOR_1_5K
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetBattChargResistor(void)
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR4, PWR_CR4_VBRS));
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable battery charging
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          VBE           LL_PWR_EnableBatteryCharging
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBatteryCharging(void)
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable battery charging
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          VBE           LL_PWR_DisableBatteryCharging
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBatteryCharging(void)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 20


 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if battery charging is enabled
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          VBE           LL_PWR_IsEnabledBatteryCharging
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledBatteryCharging(void)
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR4, PWR_CR4_VBE) == (PWR_CR4_VBE)) ? 1UL : 0UL);
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set the Wake-Up pin polarity low for the event detection
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          WP1           LL_PWR_SetWakeUpPinPolarityLow\n
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP2           LL_PWR_SetWakeUpPinPolarityLow\n
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP3           LL_PWR_SetWakeUpPinPolarityLow
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetWakeUpPinPolarityLow(uint32_t WakeUpPin)
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR4, WakeUpPin);
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set the Wake-Up pin polarity high for the event detection
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          WP1           LL_PWR_SetWakeUpPinPolarityHigh\n
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP2           LL_PWR_SetWakeUpPinPolarityHigh\n
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP3           LL_PWR_SetWakeUpPinPolarityHigh
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetWakeUpPinPolarityHigh(uint32_t WakeUpPin)
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR4, WakeUpPin);
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get the Wake-Up pin polarity for the event detection
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          WP1           LL_PWR_IsWakeUpPinPolarityLow\n
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP2           LL_PWR_IsWakeUpPinPolarityLow\n
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         CR4          WP3           LL_PWR_IsWakeUpPinPolarityLow
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  WakeUpPin This parameter can be one of the following values:
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN1
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN2
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_WAKEUP_PIN3
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 21


 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsWakeUpPinPolarityLow(uint32_t WakeUpPin)
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR4, WakeUpPin) == (WakeUpPin)) ? 1UL : 0UL);
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable GPIO pull-up state in Standby and Shutdown modes
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Some pins are not configurable for pulling in Standby and Shutdown
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes. Refer to reference manual for available pins and ports.
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PUCRA        PU0-15        LL_PWR_EnableGPIOPullUp\n
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRB        PU0-15        LL_PWR_EnableGPIOPullUp\n
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRC        PU0-15        LL_PWR_EnableGPIOPullUp\n
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRH        PU0-15        LL_PWR_EnableGPIOPullUp
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(*((__IO uint32_t *)GPIO), GPIONumber);
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable GPIO pull-up state in Standby and Shutdown modes
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Some pins are not configurable for pulling in Standby and Shutdown
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes. Refer to reference manual for available pins and ports.
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PUCRA        PU0-15        LL_PWR_DisableGPIOPullUp\n
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRB        PU0-15        LL_PWR_DisableGPIOPullUp\n
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRC        PU0-15        LL_PWR_DisableGPIOPullUp\n
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRH        PU0-15        LL_PWR_DisableGPIOPullUp
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 22


1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(*((__IO uint32_t *)GPIO), GPIONumber);
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if GPIO pull-up state is enabled
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PUCRA        PU0-15        LL_PWR_IsEnabledGPIOPullUp\n
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRB        PU0-15        LL_PWR_IsEnabledGPIOPullUp\n
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRC        PU0-15        LL_PWR_IsEnabledGPIOPullUp\n
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PUCRH        PU0-15        LL_PWR_IsEnabledGPIOPullUp
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(*((__IO uint32_t *)(GPIO)), GPIONumber) == (GPIONumber)) ? 1UL : 0UL);
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 23


1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Enable GPIO pull-down state in Standby and Shutdown modes
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Some pins are not configurable for pulling in Standby and Shutdown
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes. Refer to reference manual for available pins and ports.
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PDCRA        PD0-15        LL_PWR_EnableGPIOPullDown\n
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRB        PD0-15        LL_PWR_EnableGPIOPullDown\n
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRC        PD0-15        LL_PWR_EnableGPIOPullDown\n
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRH        PD0-15        LL_PWR_EnableGPIOPullDown
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(*((__IO uint32_t *)(GPIO + 4U)), GPIONumber);
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Disable GPIO pull-down state in Standby and Shutdown modes
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Some pins are not configurable for pulling in Standby and Shutdown
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes. Refer to reference manual for available pins and ports.
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PDCRA        PD0-15        LL_PWR_DisableGPIOPullDown\n
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRB        PD0-15        LL_PWR_DisableGPIOPullDown\n
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRC        PD0-15        LL_PWR_DisableGPIOPullDown\n
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRH        PD0-15        LL_PWR_DisableGPIOPullDown
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 24


1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(*((__IO uint32_t *)(GPIO + 4U)), GPIONumber);
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if GPIO pull-down state is enabled
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll PDCRA        PD0-15        LL_PWR_IsEnabledGPIOPullDown\n
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRB        PD0-15        LL_PWR_IsEnabledGPIOPullDown\n
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRC        PD0-15        LL_PWR_IsEnabledGPIOPullDown\n
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         PDCRH        PD0-15        LL_PWR_IsEnabledGPIOPullDown
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIO This parameter can be one of the following values:
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_A
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_B
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_C
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_H
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  GPIONumber This parameter can be one of the following values:
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_0
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_1
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_2
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_3
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_4
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_5
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_6
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_7
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_8
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_9
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_10
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_11
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_12
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_13
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_14
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_GPIO_BIT_15
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(*((__IO uint32_t *)(GPIO + 4U)), GPIONumber) == (GPIONumber)) ? 1UL : 0UL);
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration_SMPS Configuration of SMPS
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 25


1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set SMPS operating mode
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   In case of a board without SMPS coil mounted, SMPS should not be activated.
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          SMPSEN        LL_PWR_SMPS_SetMode
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  OperatingMode This parameter can be one of the following values:
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_BYPASS
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_STEP_DOWN
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SMPS_SetMode(uint32_t OperatingMode)
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR5, PWR_CR5_SMPSEN, OperatingMode);
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get SMPS operating mode
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          SMPSEN        LL_PWR_SMPS_GetMode
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_BYPASS
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_STEP_DOWN
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_SMPS_GetMode(void)
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR5, PWR_CR5_SMPSEN));
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get SMPS effective operating mode
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   SMPS operating mode can be changed by hardware, therefore
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         requested operating mode can differ from effective low power mode.
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         - dependency SubGhz Radio IP: can switch SMPS on for radio activity.
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   In case of a board without SMPS coil mounted, SMPS should not be activated
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         and this function is not relevant.
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll SR2          SMPSRDY       LL_PWR_SMPS_GetEffectiveMode
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_BYPASS
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SMPS_STEP_DOWN
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_SMPS_GetEffectiveMode(void)
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   /* Return a value corresponding to definition of literals                   */
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   /* LL_PWR_SMPS_BYPASS or LL_PWR_SMPS_STEP_DOWN.                             */
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->SR2, PWR_SR2_SMPSRDY) << (PWR_CR5_SMPSEN_Pos - PWR_SR2_SMPSRDY_Po
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  SMPS step down converter enable
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   This function can be used for specific usage of the SMPS,
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         for general usage of the SMPS the function
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @ref LL_PWR_SMPS_SetMode() should be used instead.
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          SMPSEN        LL_PWR_SMPS_Enable
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SMPS_Enable(void)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 26


1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR5, PWR_CR5_SMPSEN);
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  SMPS step down converter enable
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   This function can be used for specific usage of the SMPS,
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         for general usage of the SMPS the function
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @ref LL_PWR_SMPS_SetMode() should be used instead.
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          SMPSEN        LL_PWR_SMPS_Disable
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SMPS_Disable(void)
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR5, PWR_CR5_SMPSEN);
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check if the SMPS step down converter is enabled
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR5          SMPSEN        LL_PWR_SMPS_IsEnabled
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 or 0).
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_SMPS_IsEnabled(void)
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->CR5, PWR_CR5_SMPSEN) == (PWR_CR5_SMPSEN)) ? 1UL : 0UL);
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration_Radio Configuration of radio
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set radio busy signal polarity
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          RFBUSYP       LL_PWR_SetRadioBusyPolarity
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioBusyPolarity This parameter can be one of the following values:
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_POLARITY_RISING
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_POLARITY_FALLING
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRadioBusyPolarity(uint32_t RadioBusyPolarity)
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 208              		.loc 1 1273 1
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              	.LCFI16:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 83B0     		sub	sp, sp, #12
 218              	.LCFI17:
 219              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 27


 220 0004 00AF     		add	r7, sp, #0
 221              	.LCFI18:
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR4, PWR_CR4_WRFBUSYP, RadioBusyPolarity);
 224              		.loc 1 1274 3
 225 0008 064B     		ldr	r3, .L14
 226 000a DB68     		ldr	r3, [r3, #12]
 227 000c 23F40062 		bic	r2, r3, #2048
 228 0010 0449     		ldr	r1, .L14
 229 0012 7B68     		ldr	r3, [r7, #4]
 230 0014 1343     		orrs	r3, r3, r2
 231 0016 CB60     		str	r3, [r1, #12]
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 232              		.loc 1 1275 1
 233 0018 00BF     		nop
 234 001a 0C37     		adds	r7, r7, #12
 235              	.LCFI19:
 236              		.cfi_def_cfa_offset 4
 237 001c BD46     		mov	sp, r7
 238              	.LCFI20:
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 001e 80BC     		pop	{r7}
 242              	.LCFI21:
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 0020 7047     		bx	lr
 246              	.L15:
 247 0022 00BF     		.align	2
 248              	.L14:
 249 0024 00040058 		.word	1476396032
 250              		.cfi_endproc
 251              	.LFE360:
 253              		.section	.text.LL_PWR_SetRadioBusyTrigger,"ax",%progbits
 254              		.align	1
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	LL_PWR_SetRadioBusyTrigger:
 260              	.LFB362:
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get radio busy signal polarity
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          RFBUSYP       LL_PWR_GetRadioBusyPolarity
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_POLARITY_RISING
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_POLARITY_FALLING
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRadioBusyPolarity(void)
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR4, PWR_CR4_WRFBUSYP));
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set radio busy trigger action for CPU1: wake-up from low-power mode
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         Standby.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 28


1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Signal polarity can be configured using function
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @ref LL_PWR_SetRadioBusyPolarity().
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ERFBUSY       LL_PWR_SetRadioBusyTrigger
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioBusyTrigger This parameter can be one of the following values:
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_NONE
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_WU_IT
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRadioBusyTrigger(uint32_t RadioBusyTrigger)
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 261              		.loc 1 1301 1
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              	.LCFI22:
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 7, -4
 270 0002 83B0     		sub	sp, sp, #12
 271              	.LCFI23:
 272              		.cfi_def_cfa_offset 16
 273 0004 00AF     		add	r7, sp, #0
 274              	.LCFI24:
 275              		.cfi_def_cfa_register 7
 276 0006 7860     		str	r0, [r7, #4]
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR3, PWR_CR3_EWRFBUSY, RadioBusyTrigger);
 277              		.loc 1 1302 3
 278 0008 064B     		ldr	r3, .L17
 279 000a 9B68     		ldr	r3, [r3, #8]
 280 000c 23F40062 		bic	r2, r3, #2048
 281 0010 0449     		ldr	r1, .L17
 282 0012 7B68     		ldr	r3, [r7, #4]
 283 0014 1343     		orrs	r3, r3, r2
 284 0016 8B60     		str	r3, [r1, #8]
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 285              		.loc 1 1303 1
 286 0018 00BF     		nop
 287 001a 0C37     		adds	r7, r7, #12
 288              	.LCFI25:
 289              		.cfi_def_cfa_offset 4
 290 001c BD46     		mov	sp, r7
 291              	.LCFI26:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 001e 80BC     		pop	{r7}
 295              	.LCFI27:
 296              		.cfi_restore 7
 297              		.cfi_def_cfa_offset 0
 298 0020 7047     		bx	lr
 299              	.L18:
 300 0022 00BF     		.align	2
 301              	.L17:
 302 0024 00040058 		.word	1476396032
 303              		.cfi_endproc
 304              	.LFE362:
 306              		.section	.text.LL_PWR_SetRadioIRQTrigger,"ax",%progbits
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 29


 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	LL_PWR_SetRadioIRQTrigger:
 313              	.LFB364:
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get radio busy trigger action for CPU1: wake-up from low-power mode
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         Standby.
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ERFBUSY       LL_PWR_GetRadioBusyTrigger
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_NONE
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_WU_IT
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRadioBusyTrigger(void)
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR3, PWR_CR3_EWRFBUSY));
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set radio IRQ trigger action for CPU1: wake-up from low-power mode
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         Standby.
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ERFIRQ        LL_PWR_SetRadioIRQTrigger
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioIRQTrigger This parameter can be one of the following values:
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_NONE
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_WU_IT
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRadioIRQTrigger(uint32_t RadioIRQTrigger)
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 314              		.loc 1 1328 1
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              	.LCFI28:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 83B0     		sub	sp, sp, #12
 324              	.LCFI29:
 325              		.cfi_def_cfa_offset 16
 326 0004 00AF     		add	r7, sp, #0
 327              	.LCFI30:
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR3, PWR_CR3_EWRFIRQ, RadioIRQTrigger);
 330              		.loc 1 1329 3
 331 0008 064B     		ldr	r3, .L20
 332 000a 9B68     		ldr	r3, [r3, #8]
 333 000c 23F40052 		bic	r2, r3, #8192
 334 0010 0449     		ldr	r1, .L20
 335 0012 7B68     		ldr	r3, [r7, #4]
 336 0014 1343     		orrs	r3, r3, r2
 337 0016 8B60     		str	r3, [r1, #8]
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 30


 338              		.loc 1 1330 1
 339 0018 00BF     		nop
 340 001a 0C37     		adds	r7, r7, #12
 341              	.LCFI31:
 342              		.cfi_def_cfa_offset 4
 343 001c BD46     		mov	sp, r7
 344              	.LCFI32:
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 001e 80BC     		pop	{r7}
 348              	.LCFI33:
 349              		.cfi_restore 7
 350              		.cfi_def_cfa_offset 0
 351 0020 7047     		bx	lr
 352              	.L21:
 353 0022 00BF     		.align	2
 354              	.L20:
 355 0024 00040058 		.word	1476396032
 356              		.cfi_endproc
 357              	.LFE364:
 359              		.section	.text.LL_PWR_EnableBootC2,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	LL_PWR_EnableBootC2:
 366              	.LFB375:
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get radio IRQ trigger action for CPU1: wake-up from low-power mode
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         Standby.
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR3          ERFIRQ        LL_PWR_GetRadioIRQTrigger
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_NONE
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_WU_IT
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetRadioIRQTrigger(void)
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR3, PWR_CR3_EWRFIRQ));
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set sub-GHz radio SPI NSS control source
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          SUBGHZSPINSSSEL LL_PWR_SetSUBGHZSPI_NSSSource
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioSPI_NSSSource This parameter can be one of the following values:
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SUBGHZSPI_NSS_SRC_SW
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SUBGHZSPI_NSS_SRC_LPTIM3
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetSUBGHZSPI_NSSSource(uint32_t RadioSPI_NSSSource)
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->CR1, PWR_CR1_SUBGHZSPINSSSEL, RadioSPI_NSSSource);
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get sub-GHz radio SPI NSS control source
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR1          SUBGHZSPINSSSEL LL_PWR_GetSUBGHZSPI_NSSSource
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 31


1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SUBGHZSPI_NSS_SRC_SW
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_SUBGHZSPI_NSS_SRC_LPTIM3
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_GetSUBGHZSPI_NSSSource(void)
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->CR1, PWR_CR1_SUBGHZSPINSSSEL));
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set sub-GHz radio SPI NSS at logical level high.
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll SUBGHZSPICR  NSS           LL_PWR_UnselectSUBGHZSPI_NSS
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_UnselectSUBGHZSPI_NSS(void)
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->SUBGHZSPICR, PWR_SUBGHZSPICR_NSS);
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set sub-GHz radio SPI NSS at logical level low.
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll SUBGHZSPICR  NSS           LL_PWR_SelectSUBGHZSPI_NSS
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SelectSUBGHZSPI_NSS(void)
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->SUBGHZSPICR, PWR_SUBGHZSPICR_NSS);
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Check whether sub-GHz radio SPI NSS is at logical level high or low.
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll SUBGHZSPICR  NSS           LL_PWR_IsSUBGHZSPI_NSS_Selected
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval State of bit (1 for SUBGHZSPI_NSS selected or 0 for SUBGHZSPI_NSS unselected).
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsSUBGHZSPI_NSS_Selected(void)
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return ((READ_BIT(PWR->SUBGHZSPICR, PWR_SUBGHZSPICR_NSS) != (PWR_SUBGHZSPICR_NSS)) ? 1UL : 0UL);
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** #if defined(DUAL_CORE)
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration_Radio_CPU2 Configuration of radio for CPU2
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set radio busy trigger action for CPU2: wake-up from low-power mode,
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         interruption.
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   Signal polarity can be configured using function
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @ref LL_PWR_SetRadioBusyPolarity().
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll C2CR3        ERFBUSY       LL_C2_PWR_SetRadioBusyTrigger
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioBusyTrigger This parameter can be one of the following values:
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_NONE
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_WU_IT
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 32


1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_C2_PWR_SetRadioBusyTrigger(uint32_t RadioBusyTrigger)
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->C2CR3, PWR_C2CR3_EWRFBUSY, RadioBusyTrigger);
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get radio busy trigger action for CPU2: wake-up from low-power mode,
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         interruption.
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll C2CR3        ERFBUSY       LL_C2_PWR_GetRadioBusyTrigger
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_NONE
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_WU_IT
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_C2_PWR_GetRadioBusyTrigger(void)
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   /* Note: Bit shift performed for literals to be generic between CPU1 and CPU2 */
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->C2CR3, PWR_C2CR3_EWRFBUSY));
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Set radio IRQ trigger action for CPU2: wake-up from low-power mode,
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         interruption.
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll C2CR3        ERFIRQ        LL_C2_PWR_SetRadioIRQTrigger
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @param  RadioIRQTrigger This parameter can be one of the following values:
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_NONE
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_WU_IT
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_C2_PWR_SetRadioIRQTrigger(uint32_t RadioIRQTrigger)
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   MODIFY_REG(PWR->C2CR3, PWR_C2CR3_EWRFIRQ, RadioIRQTrigger);
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Get radio IRQ trigger action for CPU2: wake-up from low-power mode,
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         interruption.
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll C2CR3        ERFIRQ        LL_C2_PWR_GetRadioIRQTrigger
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval Returned value can be one of the following values:
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_NONE
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         @arg @ref LL_PWR_RADIO_IRQ_TRIGGER_WU_IT
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_C2_PWR_GetRadioIRQTrigger(void)
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   return (uint32_t)(READ_BIT(PWR->C2CR3, PWR_C2CR3_EWRFIRQ));
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @}
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration_Multicore Configuration of multicore, intended to be executed
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @{
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 33


1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Boot CPU2 after reset or wakeup from Stop or Standby modes.
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @note   CPU2 can boot from configuration of this function or from
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         an illegal access. For information of boot source,
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         refer to function @ref LL_PWR_IsActiveFlag_C2BOOTS().
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          C2BOOT        LL_PWR_EnableBootC2
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBootC2(void)
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 367              		.loc 1 1483 1
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              	.LCFI34:
 374              		.cfi_def_cfa_offset 4
 375              		.cfi_offset 7, -4
 376 0002 00AF     		add	r7, sp, #0
 377              	.LCFI35:
 378              		.cfi_def_cfa_register 7
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   SET_BIT(PWR->CR4, PWR_CR4_C2BOOT);
 379              		.loc 1 1484 3
 380 0004 044B     		ldr	r3, .L23
 381 0006 DB68     		ldr	r3, [r3, #12]
 382 0008 034A     		ldr	r2, .L23
 383 000a 43F40043 		orr	r3, r3, #32768
 384 000e D360     		str	r3, [r2, #12]
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 385              		.loc 1 1485 1
 386 0010 00BF     		nop
 387 0012 BD46     		mov	sp, r7
 388              	.LCFI36:
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0014 80BC     		pop	{r7}
 392              	.LCFI37:
 393              		.cfi_restore 7
 394              		.cfi_def_cfa_offset 0
 395 0016 7047     		bx	lr
 396              	.L24:
 397              		.align	2
 398              	.L23:
 399 0018 00040058 		.word	1476396032
 400              		.cfi_endproc
 401              	.LFE375:
 403              		.section	.text.LL_PWR_DisableBootC2,"ax",%progbits
 404              		.align	1
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	LL_PWR_DisableBootC2:
 410              	.LFB376:
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** 
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** /**
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @brief  Do not allow CPU2 to boot after reset or wakeup from Stop or Standby
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   *         modes.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 34


1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @rmtoll CR4          C2BOOT        LL_PWR_DisableBootC2
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   * @retval None
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   */
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableBootC2(void)
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** {
 411              		.loc 1 1494 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              	.LCFI38:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 00AF     		add	r7, sp, #0
 421              	.LCFI39:
 422              		.cfi_def_cfa_register 7
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h ****   CLEAR_BIT(PWR->CR4, PWR_CR4_C2BOOT);
 423              		.loc 1 1495 3
 424 0004 044B     		ldr	r3, .L26
 425 0006 DB68     		ldr	r3, [r3, #12]
 426 0008 034A     		ldr	r2, .L26
 427 000a 23F40043 		bic	r3, r3, #32768
 428 000e D360     		str	r3, [r2, #12]
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_pwr.h **** }
 429              		.loc 1 1496 1
 430 0010 00BF     		nop
 431 0012 BD46     		mov	sp, r7
 432              	.LCFI40:
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0014 80BC     		pop	{r7}
 436              	.LCFI41:
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 0016 7047     		bx	lr
 440              	.L27:
 441              		.align	2
 442              	.L26:
 443 0018 00040058 		.word	1476396032
 444              		.cfi_endproc
 445              	.LFE376:
 447              		.section	.text.LL_EXTI_EnableIT_32_63,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 453              	LL_EXTI_EnableIT_32_63:
 454              	.LFB714:
 455              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @file    stm32wlxx_ll_exti.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief   Header file of EXTI LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @attention
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 35


   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #ifndef __STM32WLxx_LL_EXTI_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define __STM32WLxx_LL_EXTI_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined (EXTI)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL EXTI
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Private constants ---------------------------------------------------------*/
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Private Macros ------------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_Private_Macros EXTI Private Macros
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Exported types ------------------------------------------------------------*/
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_ES_INIT EXTI Exported Init structure
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** typedef struct
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   uint32_t Line_0_31;           /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   uint32_t Line_32_63;          /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 36


  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   FunctionalState LineCommand;  /*!< Specifies the new state of the selected EXTI lines.
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                      This parameter can be set either to ENABLE or DISABLE */
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   uint8_t Mode;                 /*!< Specifies the mode for the EXTI lines.
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_MODE. */
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   uint8_t Trigger;              /*!< Specifies the trigger signal active edge for the EXTI lines.
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_TRIGGER. */
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** } LL_EXTI_InitTypeDef;
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Exported constants --------------------------------------------------------*/
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Constants EXTI Exported Constants
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EC_LINE LINE
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_0                  EXTI_IMR1_IM0    /*!< Extended line 0 */
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_1                  EXTI_IMR1_IM1    /*!< Extended line 1 */
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_2                  EXTI_IMR1_IM2    /*!< Extended line 2 */
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_3                  EXTI_IMR1_IM3    /*!< Extended line 3 */
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_4                  EXTI_IMR1_IM4    /*!< Extended line 4 */
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_5                  EXTI_IMR1_IM5    /*!< Extended line 5 */
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_6                  EXTI_IMR1_IM6    /*!< Extended line 6 */
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_7                  EXTI_IMR1_IM7    /*!< Extended line 7 */
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_8                  EXTI_IMR1_IM8    /*!< Extended line 8 */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_9                  EXTI_IMR1_IM9    /*!< Extended line 9 */
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_10                 EXTI_IMR1_IM10   /*!< Extended line 10 */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_11                 EXTI_IMR1_IM11   /*!< Extended line 11 */
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_12                 EXTI_IMR1_IM12   /*!< Extended line 12 */
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_13                 EXTI_IMR1_IM13   /*!< Extended line 13 */
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_14                 EXTI_IMR1_IM14   /*!< Extended line 14 */
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_15                 EXTI_IMR1_IM15   /*!< Extended line 15 */
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_16                 EXTI_IMR1_IM16   /*!< Extended line 16 */
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_17                 EXTI_IMR1_IM17   /*!< Extended line 17 */
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_18                 EXTI_IMR1_IM18   /*!< Extended line 18 */
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_19                 EXTI_IMR1_IM19   /*!< Extended line 19 */
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_20                 EXTI_IMR1_IM20   /*!< Extended line 20 */
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_21                 EXTI_IMR1_IM21   /*!< Extended line 21 */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_22                 EXTI_IMR1_IM22   /*!< Extended line 22 */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_23                 EXTI_IMR1_IM23   /*!< Extended line 23 */
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_24                 EXTI_IMR1_IM24   /*!< Extended line 24 */
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_25                 EXTI_IMR1_IM25   /*!< Extended line 25 */
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_26                 EXTI_IMR1_IM26   /*!< Extended line 26 */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_27                 EXTI_IMR1_IM27   /*!< Extended line 27 */
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_28                 EXTI_IMR1_IM28   /*!< Extended line 28 */
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_29                 EXTI_IMR1_IM29   /*!< Extended line 29 */
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_30                 EXTI_IMR1_IM30   /*!< Extended line 30 */
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_31                 EXTI_IMR1_IM31   /*!< Extended line 31 */
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_ALL_0_31           0xFFFFFFFFU      /*!< All Extended line not reserved*/
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 37


 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_34                 EXTI_IMR2_IM34   /*!< Extended line 34 */
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_36                 EXTI_IMR2_IM36   /*!< Extended line 36 */
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_37                 EXTI_IMR2_IM37   /*!< Extended line 37 */
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_38                 EXTI_IMR2_IM38   /*!< Extended line 38 */
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_39                 EXTI_IMR2_IM39   /*!< Extended line 39 */
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_40                 EXTI_IMR2_IM40   /*!< Extended line 40 */
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_41                 EXTI_IMR2_IM41   /*!< Extended line 41 */
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_42                 EXTI_IMR2_IM42   /*!< Extended line 42 */
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_43                 EXTI_IMR2_IM43   /*!< Extended line 43 */
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_44                 EXTI_IMR2_IM44   /*!< Extended line 44 */
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_45                 EXTI_IMR2_IM45   /*!< Extended line 45 */
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_46                 EXTI_IMR2_IM46   /*!< Extended line 46 */
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_ALL_32_63          (EXTI_IMR2_IM34 | EXTI_IMR2_IM36 | EXTI_IMR2_IM37 | \
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                          EXTI_IMR2_IM38 | EXTI_IMR2_IM39 | EXTI_IMR2_IM40 |  \
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                          EXTI_IMR2_IM41 | EXTI_IMR2_IM42 | EXTI_IMR2_IM43 |  \
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                          EXTI_IMR2_IM44 | EXTI_IMR2_IM45 | EXTI_IMR2_IM46) /*!< All
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #else
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_ALL_32_63          (EXTI_IMR2_IM34 | EXTI_IMR2_IM38 | EXTI_IMR2_IM42 | \
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                          EXTI_IMR2_IM43 | EXTI_IMR2_IM44 | EXTI_IMR2_IM45 |  \
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****                                          EXTI_IMR2_IM46) /*!< All Extended line not reserved*/
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_LINE_NONE              (0x00000000U)  /*!< None Extended line */
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EC_MODE Mode
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_MODE_IT                 ((uint8_t)0x00U) /*!< Interrupt Mode */
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_MODE_EVENT              ((uint8_t)0x01U) /*!< Event Mode */
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_MODE_IT_EVENT           ((uint8_t)0x02U) /*!< Interrupt & Event Mode */
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EC_TRIGGER Edge Trigger
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_TRIGGER_NONE            ((uint8_t)0x00U) /*!< No Trigger Mode */
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING          ((uint8_t)0x01U) /*!< Trigger Rising Mode */
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_TRIGGER_FALLING         ((uint8_t)0x02U) /*!< Trigger Falling Mode */
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING_FALLING  ((uint8_t)0x03U) /*!< Trigger Rising & Falling Mode */
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 38


 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Exported macro ------------------------------------------------------------*/
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Macros EXTI Exported Macros
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EM_WRITE_READ Common Write and read registers Macros
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Write a value in EXTI register
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  __REG__ Register to be written
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  __VALUE__ Value to be written in the register
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_WriteReg(__REG__, __VALUE__) WRITE_REG(EXTI->__REG__, (__VALUE__))
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Read a value in EXTI register
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  __REG__ Register to be read
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval Register value
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #define LL_EXTI_ReadReg(__REG__) READ_REG(EXTI->__REG__)
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /* Exported functions --------------------------------------------------------*/
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Functions EXTI Exported Functions
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_IT_Management IT_Management
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 0 to 31
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_EnableIT_0_31
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 39


 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_0_31(uint32_t ExtiLine)
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->IMR1, ExtiLine);
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 0 to 31 for cpu2
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR1         IMx           LL_C2_EXTI_EnableIT_0_31
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 40


 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_EnableIT_0_31(uint32_t ExtiLine)
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->C2IMR1, ExtiLine);
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 32 to 63
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_EnableIT_32_63
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_32_63(uint32_t ExtiLine)
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 456              		.loc 2 337 1
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 8
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              	.LCFI42:
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 83B0     		sub	sp, sp, #12
 466              	.LCFI43:
 467              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 41


 468 0004 00AF     		add	r7, sp, #0
 469              	.LCFI44:
 470              		.cfi_def_cfa_register 7
 471 0006 7860     		str	r0, [r7, #4]
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->IMR2, ExtiLine);
 472              		.loc 2 338 3
 473 0008 064B     		ldr	r3, .L29
 474 000a D3F89020 		ldr	r2, [r3, #144]
 475 000e 0549     		ldr	r1, .L29
 476 0010 7B68     		ldr	r3, [r7, #4]
 477 0012 1343     		orrs	r3, r3, r2
 478 0014 C1F89030 		str	r3, [r1, #144]
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 479              		.loc 2 339 1
 480 0018 00BF     		nop
 481 001a 0C37     		adds	r7, r7, #12
 482              	.LCFI45:
 483              		.cfi_def_cfa_offset 4
 484 001c BD46     		mov	sp, r7
 485              	.LCFI46:
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 001e 80BC     		pop	{r7}
 489              	.LCFI47:
 490              		.cfi_restore 7
 491              		.cfi_def_cfa_offset 0
 492 0020 7047     		bx	lr
 493              	.L30:
 494 0022 00BF     		.align	2
 495              	.L29:
 496 0024 00080058 		.word	1476397056
 497              		.cfi_endproc
 498              	.LFE714:
 500              		.section	.text.LL_EXTI_DisableIT_32_63,"ax",%progbits
 501              		.align	1
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	LL_EXTI_DisableIT_32_63:
 507              	.LFB718:
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 32 to 63 for cpu2
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR2         IMx           LL_C2_EXTI_EnableIT_32_63
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 42


 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_EnableIT_32_63(uint32_t ExtiLine)
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->C2IMR2, ExtiLine);
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 0 to 31
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_DisableIT_0_31
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_0_31(uint32_t ExtiLine)
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR1, ExtiLine);
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 43


 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 0 to 31 for cpu2
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR1         IMx           LL_C2_EXTI_DisableIT_0_31
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_DisableIT_0_31(uint32_t ExtiLine)
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->C2IMR1, ExtiLine);
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 32 to 63
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_DisableIT_32_63
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 44


 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_32_63(uint32_t ExtiLine)
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 508              		.loc 2 479 1
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 8
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 80B4     		push	{r7}
 514              	.LCFI48:
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 83B0     		sub	sp, sp, #12
 518              	.LCFI49:
 519              		.cfi_def_cfa_offset 16
 520 0004 00AF     		add	r7, sp, #0
 521              	.LCFI50:
 522              		.cfi_def_cfa_register 7
 523 0006 7860     		str	r0, [r7, #4]
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR2, ExtiLine);
 524              		.loc 2 480 3
 525 0008 064B     		ldr	r3, .L32
 526 000a D3F89020 		ldr	r2, [r3, #144]
 527 000e 7B68     		ldr	r3, [r7, #4]
 528 0010 DB43     		mvns	r3, r3
 529 0012 0449     		ldr	r1, .L32
 530 0014 1340     		ands	r3, r3, r2
 531 0016 C1F89030 		str	r3, [r1, #144]
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 532              		.loc 2 481 1
 533 001a 00BF     		nop
 534 001c 0C37     		adds	r7, r7, #12
 535              	.LCFI51:
 536              		.cfi_def_cfa_offset 4
 537 001e BD46     		mov	sp, r7
 538              	.LCFI52:
 539              		.cfi_def_cfa_register 13
 540              		@ sp needed
 541 0020 80BC     		pop	{r7}
 542              	.LCFI53:
 543              		.cfi_restore 7
 544              		.cfi_def_cfa_offset 0
 545 0022 7047     		bx	lr
 546              	.L33:
 547              		.align	2
 548              	.L32:
 549 0024 00080058 		.word	1476397056
 550              		.cfi_endproc
 551              	.LFE718:
 553              		.section	.text.LL_EXTI_DisableEvent_32_63,"ax",%progbits
 554              		.align	1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 45


 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	LL_EXTI_DisableEvent_32_63:
 560              	.LFB730:
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 32 to 63 for cpu2
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR2         IMx           LL_C2_EXTI_DisableIT_32_63
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_DisableIT_32_63(uint32_t ExtiLine)
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->C2IMR2, ExtiLine);
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 0 to 31
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR1         IMx           LL_EXTI_IsEnabledIT_0_31
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 46


 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_0_31(uint32_t ExtiLine)
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->IMR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 0 to 31 for cpu2
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR1         IMx           LL_C2_EXTI_IsEnabledIT_0_31
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_24
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_25
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_26
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_27
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_28
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_29
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_30
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_31
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 47


 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_C2_EXTI_IsEnabledIT_0_31(uint32_t ExtiLine)
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->C2IMR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 32 to 63
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll IMR2         IMx           LL_EXTI_IsEnabledIT_32_63
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_32_63(uint32_t ExtiLine)
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->IMR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 32 to 63 for cpu2
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2IMR2         IMx           LL_C2_EXTI_IsEnabledIT_32_63
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_36 (*)
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_37 (*)
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_38
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_39 (*)
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_42
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_43
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_44
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_46
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_32_63
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_C2_EXTI_IsEnabledIT_32_63(uint32_t ExtiLine)
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 48


 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->C2IMR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Event_Management Event_Management
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 0 to 31
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR1         EMx           LL_EXTI_EnableEvent_0_31
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->EMR1, ExtiLine);
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 0 to 31 for cpu2
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2EMR1         EMx           LL_C2_EXTI_EnableEvent_0_31
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 49


 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->C2EMR1, ExtiLine);
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 32 to 63
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR2         EMx           LL_EXTI_EnableEvent_32_63
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_32_63(uint32_t ExtiLine)
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->EMR2, ExtiLine);
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 32 to 63 for cpu2
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2EMR2         EMx           LL_C2_EXTI_EnableEvent_32_63
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_EnableEvent_32_63(uint32_t ExtiLine)
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->C2EMR2, ExtiLine);
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 0 to 31
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR1         EMx           LL_EXTI_DisableEvent_0_31
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 50


 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->EMR1, ExtiLine);
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 0 to 31 for cpu2
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2EMR1         EMx           LL_C2_EXTI_DisableEvent_0_31
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->C2EMR1, ExtiLine);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 51


 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 32 to 63
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR2         EMx           LL_EXTI_DisableEvent_32_63
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableEvent_32_63(uint32_t ExtiLine)
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 561              		.loc 2 832 1
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 8
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 0000 80B4     		push	{r7}
 567              	.LCFI54:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 7, -4
 570 0002 83B0     		sub	sp, sp, #12
 571              	.LCFI55:
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI56:
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->EMR2, ExtiLine);
 577              		.loc 2 833 3
 578 0008 064B     		ldr	r3, .L35
 579 000a D3F89420 		ldr	r2, [r3, #148]
 580 000e 7B68     		ldr	r3, [r7, #4]
 581 0010 DB43     		mvns	r3, r3
 582 0012 0449     		ldr	r1, .L35
 583 0014 1340     		ands	r3, r3, r2
 584 0016 C1F89430 		str	r3, [r1, #148]
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 585              		.loc 2 834 1
 586 001a 00BF     		nop
 587 001c 0C37     		adds	r7, r7, #12
 588              	.LCFI57:
 589              		.cfi_def_cfa_offset 4
 590 001e BD46     		mov	sp, r7
 591              	.LCFI58:
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0020 80BC     		pop	{r7}
 595              	.LCFI59:
 596              		.cfi_restore 7
 597              		.cfi_def_cfa_offset 0
 598 0022 7047     		bx	lr
 599              	.L36:
 600              		.align	2
 601              	.L35:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 52


 602 0024 00080058 		.word	1476397056
 603              		.cfi_endproc
 604              	.LFE730:
 606              		.section	.text.LL_EXTI_EnableRisingTrig_32_63,"ax",%progbits
 607              		.align	1
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 612              	LL_EXTI_EnableRisingTrig_32_63:
 613              	.LFB737:
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 32 to 63 for cpu2
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2EMR2         EMx           LL_C2_EXTI_DisableEvent_32_63
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_C2_EXTI_DisableEvent_32_63(uint32_t ExtiLine)
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->C2EMR2, ExtiLine);
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 0 to 31
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR1         EMx           LL_EXTI_IsEnabledEvent_0_31
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledEvent_0_31(uint32_t ExtiLine)
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->EMR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 53


 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 0 to 31 for cpu2
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll C2EMR1         EMx           LL_C2_EXTI_IsEnabledEvent_0_31
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_C2_EXTI_IsEnabledEvent_0_31(uint32_t ExtiLine)
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->C2EMR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 32 to 63
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR2         EMx           LL_EXTI_IsEnabledEvent_32_63
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledEvent_32_63(uint32_t ExtiLine)
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->EMR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #if defined(DUAL_CORE)
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 32 to 63 for cpu2
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll EMR2         EMx           LL_C2_EXTI_IsEnabledEvent_32_63
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40 (*)
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41 (*)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 54


 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         (*) value not defined in all devices
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_C2_EXTI_IsEnabledEvent_32_63(uint32_t ExtiLine)
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->C2EMR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** #endif /* DUAL_CORE */
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Rising_Trigger_Management Rising_Trigger_Management
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note   The configurable wakeup lines are edge-triggered. No glitch must be
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         generated on these lines. If a rising edge on a configurable interrupt
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         line occurs during a write operation in the EXTI_RTSR register, the
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         pending bit is not set.
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         Rising and falling edge triggers can be set for
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         the same interrupt line. In this case, both generate a trigger
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         condition.
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR1        RTx           LL_EXTI_EnableRisingTrig_0_31
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableRisingTrig_0_31(uint32_t ExtiLine)
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->RTSR1, ExtiLine);
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 55


 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Rising Edge Trigger for Lines in range 32 to 63
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.Rising and falling edge triggers can be set for
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       condition.
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR2        RTx           LL_EXTI_EnableRisingTrig_32_63
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableRisingTrig_32_63(uint32_t ExtiLine)
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 614              		.loc 2 1012 1
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619 0000 80B4     		push	{r7}
 620              	.LCFI60:
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
 623 0002 83B0     		sub	sp, sp, #12
 624              	.LCFI61:
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              	.LCFI62:
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->RTSR2, ExtiLine);
 630              		.loc 2 1013 3
 631 0008 054B     		ldr	r3, .L38
 632 000a 1A6A     		ldr	r2, [r3, #32]
 633 000c 0449     		ldr	r1, .L38
 634 000e 7B68     		ldr	r3, [r7, #4]
 635 0010 1343     		orrs	r3, r3, r2
 636 0012 0B62     		str	r3, [r1, #32]
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 637              		.loc 2 1014 1
 638 0014 00BF     		nop
 639 0016 0C37     		adds	r7, r7, #12
 640              	.LCFI63:
 641              		.cfi_def_cfa_offset 4
 642 0018 BD46     		mov	sp, r7
 643              	.LCFI64:
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 001a 80BC     		pop	{r7}
 647              	.LCFI65:
 648              		.cfi_restore 7
 649              		.cfi_def_cfa_offset 0
 650 001c 7047     		bx	lr
 651              	.L39:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 56


 652 001e 00BF     		.align	2
 653              	.L38:
 654 0020 00080058 		.word	1476397056
 655              		.cfi_endproc
 656              	.LFE737:
 658              		.section	.text.LL_EXTI_DisableRisingTrig_32_63,"ax",%progbits
 659              		.align	1
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 664              	LL_EXTI_DisableRisingTrig_32_63:
 665              	.LFB739:
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       condition.
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR1        RTx           LL_EXTI_DisableRisingTrig_0_31
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableRisingTrig_0_31(uint32_t ExtiLine)
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->RTSR1, ExtiLine);
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Rising Edge Trigger for Lines in range 32 to 63
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 57


1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       condition.
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR2        RTx           LL_EXTI_DisableRisingTrig_32_63
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableRisingTrig_32_63(uint32_t ExtiLine)
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 666              		.loc 2 1073 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 80B4     		push	{r7}
 672              	.LCFI66:
 673              		.cfi_def_cfa_offset 4
 674              		.cfi_offset 7, -4
 675 0002 83B0     		sub	sp, sp, #12
 676              	.LCFI67:
 677              		.cfi_def_cfa_offset 16
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI68:
 680              		.cfi_def_cfa_register 7
 681 0006 7860     		str	r0, [r7, #4]
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->RTSR2, ExtiLine);
 682              		.loc 2 1074 3
 683 0008 054B     		ldr	r3, .L41
 684 000a 1A6A     		ldr	r2, [r3, #32]
 685 000c 7B68     		ldr	r3, [r7, #4]
 686 000e DB43     		mvns	r3, r3
 687 0010 0349     		ldr	r1, .L41
 688 0012 1340     		ands	r3, r3, r2
 689 0014 0B62     		str	r3, [r1, #32]
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 690              		.loc 2 1075 1
 691 0016 00BF     		nop
 692 0018 0C37     		adds	r7, r7, #12
 693              	.LCFI69:
 694              		.cfi_def_cfa_offset 4
 695 001a BD46     		mov	sp, r7
 696              	.LCFI70:
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 001c 80BC     		pop	{r7}
 700              	.LCFI71:
 701              		.cfi_restore 7
 702              		.cfi_def_cfa_offset 0
 703 001e 7047     		bx	lr
 704              	.L42:
 705              		.align	2
 706              	.L41:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 58


 707 0020 00080058 		.word	1476397056
 708              		.cfi_endproc
 709              	.LFE739:
 711              		.section	.text.LL_EXTI_EnableFallingTrig_32_63,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	LL_EXTI_EnableFallingTrig_32_63:
 718              	.LFB743:
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if rising edge trigger is enabled for Lines in range 0 to 31
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR1        RTx           LL_EXTI_IsEnabledRisingTrig_0_31
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledRisingTrig_0_31(uint32_t ExtiLine)
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->RTSR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if rising edge trigger is enabled for Lines in range 32 to 63
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll RTSR2        RTx           LL_EXTI_IsEnabledRisingTrig_32_63
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledRisingTrig_32_63(uint32_t ExtiLine)
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->RTSR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 59


1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Falling_Trigger_Management Falling_Trigger_Management
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a falling edge on a configurable interrupt
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       condition.
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR1        FTx           LL_EXTI_EnableFallingTrig_0_31
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableFallingTrig_0_31(uint32_t ExtiLine)
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->FTSR1, ExtiLine);
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Enable ExtiLine Falling Edge Trigger for Lines in range 32 to 63
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a Falling edge on a configurable interrupt
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       condition.
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR2        FTx           LL_EXTI_EnableFallingTrig_32_63
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 60


1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableFallingTrig_32_63(uint32_t ExtiLine)
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 719              		.loc 2 1187 1
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 8
 722              		@ frame_needed = 1, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 724 0000 80B4     		push	{r7}
 725              	.LCFI72:
 726              		.cfi_def_cfa_offset 4
 727              		.cfi_offset 7, -4
 728 0002 83B0     		sub	sp, sp, #12
 729              	.LCFI73:
 730              		.cfi_def_cfa_offset 16
 731 0004 00AF     		add	r7, sp, #0
 732              	.LCFI74:
 733              		.cfi_def_cfa_register 7
 734 0006 7860     		str	r0, [r7, #4]
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->FTSR2, ExtiLine);
 735              		.loc 2 1188 3
 736 0008 054B     		ldr	r3, .L44
 737 000a 5A6A     		ldr	r2, [r3, #36]
 738 000c 0449     		ldr	r1, .L44
 739 000e 7B68     		ldr	r3, [r7, #4]
 740 0010 1343     		orrs	r3, r3, r2
 741 0012 4B62     		str	r3, [r1, #36]
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 742              		.loc 2 1189 1
 743 0014 00BF     		nop
 744 0016 0C37     		adds	r7, r7, #12
 745              	.LCFI75:
 746              		.cfi_def_cfa_offset 4
 747 0018 BD46     		mov	sp, r7
 748              	.LCFI76:
 749              		.cfi_def_cfa_register 13
 750              		@ sp needed
 751 001a 80BC     		pop	{r7}
 752              	.LCFI77:
 753              		.cfi_restore 7
 754              		.cfi_def_cfa_offset 0
 755 001c 7047     		bx	lr
 756              	.L45:
 757 001e 00BF     		.align	2
 758              	.L44:
 759 0020 00080058 		.word	1476397056
 760              		.cfi_endproc
 761              	.LFE743:
 763              		.section	.text.LL_EXTI_DisableFallingTrig_32_63,"ax",%progbits
 764              		.align	1
 765              		.syntax unified
 766              		.thumb
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 61


 767              		.thumb_func
 769              	LL_EXTI_DisableFallingTrig_32_63:
 770              	.LFB745:
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a Falling edge on a configurable interrupt
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for the same interrupt line.
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       In this case, both generate a trigger condition.
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR1        FTx           LL_EXTI_DisableFallingTrig_0_31
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableFallingTrig_0_31(uint32_t ExtiLine)
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->FTSR1, ExtiLine);
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Disable ExtiLine Falling Edge Trigger for Lines in range 32 to 63
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       generated on these lines. If a Falling edge on a configurable interrupt
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       pending bit is not set.
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       Rising and falling edge triggers can be set for the same interrupt line.
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       In this case, both generate a trigger condition.
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR2        FTx           LL_EXTI_DisableFallingTrig_32_63
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 62


1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableFallingTrig_32_63(uint32_t ExtiLine)
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 771              		.loc 2 1245 1
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 8
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776 0000 80B4     		push	{r7}
 777              	.LCFI78:
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 83B0     		sub	sp, sp, #12
 781              	.LCFI79:
 782              		.cfi_def_cfa_offset 16
 783 0004 00AF     		add	r7, sp, #0
 784              	.LCFI80:
 785              		.cfi_def_cfa_register 7
 786 0006 7860     		str	r0, [r7, #4]
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   CLEAR_BIT(EXTI->FTSR2, ExtiLine);
 787              		.loc 2 1246 3
 788 0008 054B     		ldr	r3, .L47
 789 000a 5A6A     		ldr	r2, [r3, #36]
 790 000c 7B68     		ldr	r3, [r7, #4]
 791 000e DB43     		mvns	r3, r3
 792 0010 0349     		ldr	r1, .L47
 793 0012 1340     		ands	r3, r3, r2
 794 0014 4B62     		str	r3, [r1, #36]
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 795              		.loc 2 1247 1
 796 0016 00BF     		nop
 797 0018 0C37     		adds	r7, r7, #12
 798              	.LCFI81:
 799              		.cfi_def_cfa_offset 4
 800 001a BD46     		mov	sp, r7
 801              	.LCFI82:
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 001c 80BC     		pop	{r7}
 805              	.LCFI83:
 806              		.cfi_restore 7
 807              		.cfi_def_cfa_offset 0
 808 001e 7047     		bx	lr
 809              	.L48:
 810              		.align	2
 811              	.L47:
 812 0020 00080058 		.word	1476397056
 813              		.cfi_endproc
 814              	.LFE745:
 816              		.section	.text.LL_EXTI_ReadFlag_0_31,"ax",%progbits
 817              		.align	1
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	LL_EXTI_ReadFlag_0_31:
 823              	.LFB752:
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 63


1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if falling edge trigger is enabled for Lines in range 0 to 31
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR1        FTx           LL_EXTI_IsEnabledFallingTrig_0_31
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledFallingTrig_0_31(uint32_t ExtiLine)
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->FTSR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if falling edge trigger is enabled for Lines in range 32 to 63
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll FTSR2        FTx           LL_EXTI_IsEnabledFallingTrig_32_63
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledFallingTrig_32_63(uint32_t ExtiLine)
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->FTSR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Software_Interrupt_Management Software_Interrupt_Management
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Generate a software Interrupt Event for Lines in range 0 to 31
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note If the interrupt is enabled on this line in the EXTI_IMR1, writing a 1 to
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       this bit when it is at '0' sets the corresponding pending bit in EXTI_PR1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 64


1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       resulting in an interrupt request generation.
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       This bit is cleared by clearing the corresponding bit in the EXTI_PR1
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       register (by writing a 1 into the bit)
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll SWIER1       SWIx          LL_EXTI_GenerateSWI_0_31
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_GenerateSWI_0_31(uint32_t ExtiLine)
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->SWIER1, ExtiLine);
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Generate a software Interrupt Event for Lines in range 32 to 63
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note If the interrupt is enabled on this line in the EXTI_IMR2, writing a 1 to
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       this bit when it is at '0' sets the corresponding pending bit in EXTI_PR2
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       resulting in an interrupt request generation.
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       This bit is cleared by clearing the corresponding bit in the EXTI_PR2
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       register (by writing a 1 into the bit)
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll SWIER2       SWIx          LL_EXTI_GenerateSWI_32_63
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_GenerateSWI_32_63(uint32_t ExtiLine)
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   SET_BIT(EXTI->SWIER2, ExtiLine);
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @}
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Flag_Management Flag_Management
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 65


1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @{
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if the ExtLine Flag is set or not for Lines in range 0 to 31
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR1          PIFx           LL_EXTI_IsActiveFlag_0_31
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsActiveFlag_0_31(uint32_t ExtiLine)
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->PR1, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Check if the ExtLine Flag is set or not for  Lines in range 32 to 63
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR2          PIFx           LL_EXTI_IsActiveFlag_32_63
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval State of bit (1 or 0).
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsActiveFlag_32_63(uint32_t ExtiLine)
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return ((READ_BIT(EXTI->PR2, ExtiLine) == (ExtiLine)) ? 1UL : 0UL);
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Read ExtLine Combination Flag for Lines in range 0 to 31
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 66


1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR1          PIFx           LL_EXTI_ReadFlag_0_31
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval @note This bit is set when the selected edge event arrives on the interrupt
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_ReadFlag_0_31(uint32_t ExtiLine)
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 824              		.loc 2 1447 1
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 0000 80B4     		push	{r7}
 830              	.LCFI84:
 831              		.cfi_def_cfa_offset 4
 832              		.cfi_offset 7, -4
 833 0002 83B0     		sub	sp, sp, #12
 834              	.LCFI85:
 835              		.cfi_def_cfa_offset 16
 836 0004 00AF     		add	r7, sp, #0
 837              	.LCFI86:
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return (uint32_t)(READ_BIT(EXTI->PR1, ExtiLine));
 840              		.loc 2 1448 21
 841 0008 044B     		ldr	r3, .L51
 842 000a DA68     		ldr	r2, [r3, #12]
 843              		.loc 2 1448 10
 844 000c 7B68     		ldr	r3, [r7, #4]
 845 000e 1340     		ands	r3, r3, r2
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 846              		.loc 2 1449 1
 847 0010 1846     		mov	r0, r3
 848 0012 0C37     		adds	r7, r7, #12
 849              	.LCFI87:
 850              		.cfi_def_cfa_offset 4
 851 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 67


 852              	.LCFI88:
 853              		.cfi_def_cfa_register 13
 854              		@ sp needed
 855 0016 80BC     		pop	{r7}
 856              	.LCFI89:
 857              		.cfi_restore 7
 858              		.cfi_def_cfa_offset 0
 859 0018 7047     		bx	lr
 860              	.L52:
 861 001a 00BF     		.align	2
 862              	.L51:
 863 001c 00080058 		.word	1476397056
 864              		.cfi_endproc
 865              	.LFE752:
 867              		.section	.text.LL_EXTI_ReadFlag_32_63,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	LL_EXTI_ReadFlag_32_63:
 874              	.LFB753:
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Read ExtLine Combination Flag for  Lines in range 32 to 63
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR2          PIFx           LL_EXTI_ReadFlag_32_63
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval @note This bit is set when the selected edge event arrives on the interrupt
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_ReadFlag_32_63(uint32_t ExtiLine)
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 875              		.loc 2 1464 1
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 8
 878              		@ frame_needed = 1, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 880 0000 80B4     		push	{r7}
 881              	.LCFI90:
 882              		.cfi_def_cfa_offset 4
 883              		.cfi_offset 7, -4
 884 0002 83B0     		sub	sp, sp, #12
 885              	.LCFI91:
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              	.LCFI92:
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   return (uint32_t)(READ_BIT(EXTI->PR2, ExtiLine));
 891              		.loc 2 1465 21
 892 0008 044B     		ldr	r3, .L55
 893 000a DA6A     		ldr	r2, [r3, #44]
 894              		.loc 2 1465 10
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 68


 895 000c 7B68     		ldr	r3, [r7, #4]
 896 000e 1340     		ands	r3, r3, r2
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 897              		.loc 2 1466 1
 898 0010 1846     		mov	r0, r3
 899 0012 0C37     		adds	r7, r7, #12
 900              	.LCFI93:
 901              		.cfi_def_cfa_offset 4
 902 0014 BD46     		mov	sp, r7
 903              	.LCFI94:
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0016 80BC     		pop	{r7}
 907              	.LCFI95:
 908              		.cfi_restore 7
 909              		.cfi_def_cfa_offset 0
 910 0018 7047     		bx	lr
 911              	.L56:
 912 001a 00BF     		.align	2
 913              	.L55:
 914 001c 00080058 		.word	1476397056
 915              		.cfi_endproc
 916              	.LFE753:
 918              		.section	.text.LL_EXTI_ClearFlag_0_31,"ax",%progbits
 919              		.align	1
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 924              	LL_EXTI_ClearFlag_0_31:
 925              	.LFB754:
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Clear ExtLine Flags for Lines in range 0 to 31
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR1          PIFx           LL_EXTI_ClearFlag_0_31
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 69


1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_ClearFlag_0_31(uint32_t ExtiLine)
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 926              		.loc 2 1497 1
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 80B4     		push	{r7}
 932              	.LCFI96:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 83B0     		sub	sp, sp, #12
 936              	.LCFI97:
 937              		.cfi_def_cfa_offset 16
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI98:
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   WRITE_REG(EXTI->PR1, ExtiLine);
 942              		.loc 2 1498 3
 943 0008 034A     		ldr	r2, .L58
 944 000a 7B68     		ldr	r3, [r7, #4]
 945 000c D360     		str	r3, [r2, #12]
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 946              		.loc 2 1499 1
 947 000e 00BF     		nop
 948 0010 0C37     		adds	r7, r7, #12
 949              	.LCFI99:
 950              		.cfi_def_cfa_offset 4
 951 0012 BD46     		mov	sp, r7
 952              	.LCFI100:
 953              		.cfi_def_cfa_register 13
 954              		@ sp needed
 955 0014 80BC     		pop	{r7}
 956              	.LCFI101:
 957              		.cfi_restore 7
 958              		.cfi_def_cfa_offset 0
 959 0016 7047     		bx	lr
 960              	.L59:
 961              		.align	2
 962              	.L58:
 963 0018 00080058 		.word	1476397056
 964              		.cfi_endproc
 965              	.LFE754:
 967              		.section	.text.LL_EXTI_ClearFlag_32_63,"ax",%progbits
 968              		.align	1
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 973              	LL_EXTI_ClearFlag_32_63:
 974              	.LFB755:
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** 
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** /**
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @brief  Clear ExtLine Flags for Lines in range 32 to 63
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 70


1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @rmtoll PR2          PIFx           LL_EXTI_ClearFlag_32_63
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_34
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_40
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_41
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_45
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   * @retval None
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   */
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_ClearFlag_32_63(uint32_t ExtiLine)
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** {
 975              		.loc 2 1514 1
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              	.LCFI102:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 7, -4
 984 0002 83B0     		sub	sp, sp, #12
 985              	.LCFI103:
 986              		.cfi_def_cfa_offset 16
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI104:
 989              		.cfi_def_cfa_register 7
 990 0006 7860     		str	r0, [r7, #4]
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h ****   WRITE_REG(EXTI->PR2, ExtiLine);
 991              		.loc 2 1515 3
 992 0008 034A     		ldr	r2, .L61
 993 000a 7B68     		ldr	r3, [r7, #4]
 994 000c D362     		str	r3, [r2, #44]
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_exti.h **** }
 995              		.loc 2 1516 1
 996 000e 00BF     		nop
 997 0010 0C37     		adds	r7, r7, #12
 998              	.LCFI105:
 999              		.cfi_def_cfa_offset 4
 1000 0012 BD46     		mov	sp, r7
 1001              	.LCFI106:
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 0014 80BC     		pop	{r7}
 1005              	.LCFI107:
 1006              		.cfi_restore 7
 1007              		.cfi_def_cfa_offset 0
 1008 0016 7047     		bx	lr
 1009              	.L62:
 1010              		.align	2
 1011              	.L61:
 1012 0018 00080058 		.word	1476397056
 1013              		.cfi_endproc
 1014              	.LFE755:
 1016              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
 1017              		.align	1
 1018              		.global	HAL_PWREx_GetVoltageRange
 1019              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 71


 1020              		.thumb
 1021              		.thumb_func
 1023              	HAL_PWREx_GetVoltageRange:
 1024              	.LFB844:
 1025              		.file 3 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @file    stm32wlxx_hal_pwr_ex.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   ******************************************************************************
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @attention
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * Copyright (c) 2020 STMicroelectronics.
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * All rights reserved.
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * in the root directory of this software component.
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   ******************************************************************************
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #include "stm32wlxx_hal.h"
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @addtogroup STM32WLxx_HAL_Driver
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @addtogroup PWREx
  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Private constants ---------------------------------------------------------*/
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @addtogroup PWREx_Private_Constants PWR Extended Private Constants
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #define PWR_PORTC_AVAILABLE_PINS   (PWR_GPIO_BIT_15 | PWR_GPIO_BIT_14 | PWR_GPIO_BIT_13 | PWR_GPIO_
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   (PWR_GPIO_BIT_3)
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @}
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 72


  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @}
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @addtogroup PWREx_Exported_Functions PWR Extended Exported Functions
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /** @addtogroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** @verbatim
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****  ===============================================================================
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****  ===============================================================================
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     [..]
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** @endverbatim
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @{
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWPWR_REGULATOR_VOLTAGE_SCALE2)
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1026              		.loc 3 84 1
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 1, uses_anonymous_args = 0
 1030              		@ link register save eliminated.
 1031 0000 80B4     		push	{r7}
 1032              	.LCFI108:
 1033              		.cfi_def_cfa_offset 4
 1034              		.cfi_offset 7, -4
 1035 0002 00AF     		add	r7, sp, #0
 1036              	.LCFI109:
 1037              		.cfi_def_cfa_register 7
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return (PWR->CR1 & PWR_CR1_VOS);
 1038              		.loc 3 85 14
 1039 0004 034B     		ldr	r3, .L65
 1040 0006 1B68     		ldr	r3, [r3]
 1041              		.loc 3 85 20
 1042 0008 03F4C063 		and	r3, r3, #1536
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1043              		.loc 3 86 1
 1044 000c 1846     		mov	r0, r3
 1045 000e BD46     		mov	sp, r7
 1046              	.LCFI110:
 1047              		.cfi_def_cfa_register 13
 1048              		@ sp needed
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 73


 1049 0010 80BC     		pop	{r7}
 1050              	.LCFI111:
 1051              		.cfi_restore 7
 1052              		.cfi_def_cfa_offset 0
 1053 0012 7047     		bx	lr
 1054              	.L66:
 1055              		.align	2
 1056              	.L65:
 1057 0014 00040058 		.word	1476396032
 1058              		.cfi_endproc
 1059              	.LFE844:
 1061              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
 1062              		.align	1
 1063              		.global	HAL_PWREx_ControlVoltageScaling
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1068              	HAL_PWREx_ControlVoltageScaling:
 1069              	.LFB845:
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param VoltageScaling specifies the regulator output voltage to achieve
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         a trade-off between performance and power consumption.
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *                                                system frequency up to 48 MHz.
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *                                                system frequency up to 16 MHz.
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        a value below 16 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        a value up to 48 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1070              		.loc 3 109 1
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 16
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075 0000 80B4     		push	{r7}
 1076              	.LCFI112:
 1077              		.cfi_def_cfa_offset 4
 1078              		.cfi_offset 7, -4
 1079 0002 85B0     		sub	sp, sp, #20
 1080              	.LCFI113:
 1081              		.cfi_def_cfa_offset 24
 1082 0004 00AF     		add	r7, sp, #0
 1083              	.LCFI114:
 1084              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 74


 1085 0006 7860     		str	r0, [r7, #4]
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* If Set Range 1 */
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 1086              		.loc 3 115 6
 1087 0008 7B68     		ldr	r3, [r7, #4]
 1088 000a B3F5007F 		cmp	r3, #512
 1089 000e 2FD1     		bne	.L68
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 1090              		.loc 3 117 9
 1091 0010 224B     		ldr	r3, .L74
 1092 0012 1B68     		ldr	r3, [r3]
 1093 0014 03F4C063 		and	r3, r3, #1536
 1094              		.loc 3 117 8
 1095 0018 B3F5007F 		cmp	r3, #512
 1096 001c 37D0     		beq	.L69
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     {
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Set Range 1 */
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 1097              		.loc 3 120 7
 1098 001e 1F4B     		ldr	r3, .L74
 1099 0020 1B68     		ldr	r3, [r3]
 1100 0022 23F4C063 		bic	r3, r3, #1536
 1101 0026 1D4A     		ldr	r2, .L74
 1102 0028 43F40073 		orr	r3, r3, #512
 1103 002c 1360     		str	r3, [r2]
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000UL);
 1104              		.loc 3 123 53
 1105 002e 1C4B     		ldr	r3, .L74+4
 1106 0030 1B68     		ldr	r3, [r3]
 1107 0032 3222     		movs	r2, #50
 1108 0034 02FB03F3 		mul	r3, r2, r3
 1109              		.loc 3 123 23
 1110 0038 1A4A     		ldr	r2, .L74+8
 1111 003a A2FB0323 		umull	r2, r3, r2, r3
 1112 003e 9B0C     		lsrs	r3, r3, #18
 1113 0040 FB60     		str	r3, [r7, #12]
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 1114              		.loc 3 124 13
 1115 0042 02E0     		b	.L70
 1116              	.L72:
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       {
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****         wait_loop_index--;
 1117              		.loc 3 126 24
 1118 0044 FB68     		ldr	r3, [r7, #12]
 1119 0046 013B     		subs	r3, r3, #1
 1120 0048 FB60     		str	r3, [r7, #12]
 1121              	.L70:
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 1122              		.loc 3 124 15
 1123 004a 144B     		ldr	r3, .L74
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 75


 1124 004c 5B69     		ldr	r3, [r3, #20]
 1125 004e 03F48063 		and	r3, r3, #1024
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 1126              		.loc 3 124 13
 1127 0052 B3F5806F 		cmp	r3, #1024
 1128 0056 02D1     		bne	.L71
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 1129              		.loc 3 124 55 discriminator 1
 1130 0058 FB68     		ldr	r3, [r7, #12]
 1131 005a 002B     		cmp	r3, #0
 1132 005c F2D1     		bne	.L72
 1133              	.L71:
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       }
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 1134              		.loc 3 128 11
 1135 005e 0F4B     		ldr	r3, .L74
 1136 0060 5B69     		ldr	r3, [r3, #20]
 1137 0062 03F48063 		and	r3, r3, #1024
 1138              		.loc 3 128 10
 1139 0066 B3F5806F 		cmp	r3, #1024
 1140 006a 10D1     		bne	.L69
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       {
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 1141              		.loc 3 130 16
 1142 006c 0323     		movs	r3, #3
 1143 006e 0FE0     		b	.L73
 1144              	.L68:
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       }
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     }
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   else
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 1145              		.loc 3 136 9
 1146 0070 0A4B     		ldr	r3, .L74
 1147 0072 1B68     		ldr	r3, [r3]
 1148 0074 03F4C063 		and	r3, r3, #1536
 1149              		.loc 3 136 8
 1150 0078 B3F5806F 		cmp	r3, #1024
 1151 007c 07D0     		beq	.L69
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     {
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Set Range 2 */
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 1152              		.loc 3 139 7
 1153 007e 074B     		ldr	r3, .L74
 1154 0080 1B68     		ldr	r3, [r3]
 1155 0082 23F4C063 		bic	r3, r3, #1536
 1156 0086 054A     		ldr	r2, .L74
 1157 0088 43F48063 		orr	r3, r3, #1024
 1158 008c 1360     		str	r3, [r2]
 1159              	.L69:
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     }
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return HAL_OK;
 1160              		.loc 3 144 10
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 76


 1161 008e 0023     		movs	r3, #0
 1162              	.L73:
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1163              		.loc 3 145 1
 1164 0090 1846     		mov	r0, r3
 1165 0092 1437     		adds	r7, r7, #20
 1166              	.LCFI115:
 1167              		.cfi_def_cfa_offset 4
 1168 0094 BD46     		mov	sp, r7
 1169              	.LCFI116:
 1170              		.cfi_def_cfa_register 13
 1171              		@ sp needed
 1172 0096 80BC     		pop	{r7}
 1173              	.LCFI117:
 1174              		.cfi_restore 7
 1175              		.cfi_def_cfa_offset 0
 1176 0098 7047     		bx	lr
 1177              	.L75:
 1178 009a 00BF     		.align	2
 1179              	.L74:
 1180 009c 00040058 		.word	1476396032
 1181 00a0 00000000 		.word	SystemCoreClock
 1182 00a4 83DE1B43 		.word	1125899907
 1183              		.cfi_endproc
 1184              	.LFE845:
 1186              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 1187              		.align	1
 1188              		.global	HAL_PWREx_EnableBatteryCharging
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1193              	HAL_PWREx_EnableBatteryCharging:
 1194              	.LFB846:
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT through an internal resistor.
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param ResistorSelection specifies the resistor impedance.
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1195              		.loc 3 159 1
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 8
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200 0000 80B4     		push	{r7}
 1201              	.LCFI118:
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 77


 1205              	.LCFI119:
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              	.LCFI120:
 1209              		.cfi_def_cfa_register 7
 1210 0006 7860     		str	r0, [r7, #4]
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Specify resistor selection */
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 1211              		.loc 3 163 3
 1212 0008 094B     		ldr	r3, .L77
 1213 000a DB68     		ldr	r3, [r3, #12]
 1214 000c 23F40072 		bic	r2, r3, #512
 1215 0010 0749     		ldr	r1, .L77
 1216 0012 7B68     		ldr	r3, [r7, #4]
 1217 0014 1343     		orrs	r3, r3, r2
 1218 0016 CB60     		str	r3, [r1, #12]
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Enable battery charging */
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 1219              		.loc 3 166 3
 1220 0018 054B     		ldr	r3, .L77
 1221 001a DB68     		ldr	r3, [r3, #12]
 1222 001c 044A     		ldr	r2, .L77
 1223 001e 43F48073 		orr	r3, r3, #256
 1224 0022 D360     		str	r3, [r2, #12]
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1225              		.loc 3 167 1
 1226 0024 00BF     		nop
 1227 0026 0C37     		adds	r7, r7, #12
 1228              	.LCFI121:
 1229              		.cfi_def_cfa_offset 4
 1230 0028 BD46     		mov	sp, r7
 1231              	.LCFI122:
 1232              		.cfi_def_cfa_register 13
 1233              		@ sp needed
 1234 002a 80BC     		pop	{r7}
 1235              	.LCFI123:
 1236              		.cfi_restore 7
 1237              		.cfi_def_cfa_offset 0
 1238 002c 7047     		bx	lr
 1239              	.L78:
 1240 002e 00BF     		.align	2
 1241              	.L77:
 1242 0030 00040058 		.word	1476396032
 1243              		.cfi_endproc
 1244              	.LFE846:
 1246              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 1247              		.align	1
 1248              		.global	HAL_PWREx_DisableBatteryCharging
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1253              	HAL_PWREx_DisableBatteryCharging:
 1254              	.LFB847:
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 78


 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1255              		.loc 3 174 1
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260 0000 80B4     		push	{r7}
 1261              	.LCFI124:
 1262              		.cfi_def_cfa_offset 4
 1263              		.cfi_offset 7, -4
 1264 0002 00AF     		add	r7, sp, #0
 1265              	.LCFI125:
 1266              		.cfi_def_cfa_register 7
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 1267              		.loc 3 175 3
 1268 0004 044B     		ldr	r3, .L80
 1269 0006 DB68     		ldr	r3, [r3, #12]
 1270 0008 034A     		ldr	r2, .L80
 1271 000a 23F48073 		bic	r3, r3, #256
 1272 000e D360     		str	r3, [r2, #12]
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1273              		.loc 3 176 1
 1274 0010 00BF     		nop
 1275 0012 BD46     		mov	sp, r7
 1276              	.LCFI126:
 1277              		.cfi_def_cfa_register 13
 1278              		@ sp needed
 1279 0014 80BC     		pop	{r7}
 1280              	.LCFI127:
 1281              		.cfi_restore 7
 1282              		.cfi_def_cfa_offset 0
 1283 0016 7047     		bx	lr
 1284              	.L81:
 1285              		.align	2
 1286              	.L80:
 1287 0018 00040058 		.word	1476396032
 1288              		.cfi_endproc
 1289              	.LFE847:
 1291              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 1292              		.align	1
 1293              		.global	HAL_PWREx_EnableInternalWakeUpLine
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1298              	HAL_PWREx_EnableInternalWakeUpLine:
 1299              	.LFB848:
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 79


 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1300              		.loc 3 185 1
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305 0000 80B4     		push	{r7}
 1306              	.LCFI128:
 1307              		.cfi_def_cfa_offset 4
 1308              		.cfi_offset 7, -4
 1309 0002 00AF     		add	r7, sp, #0
 1310              	.LCFI129:
 1311              		.cfi_def_cfa_register 7
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->C2CR3, PWR_C2CR3_EIWUL);
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWUL);
 1312              		.loc 3 189 3
 1313 0004 044B     		ldr	r3, .L83
 1314 0006 9B68     		ldr	r3, [r3, #8]
 1315 0008 034A     		ldr	r2, .L83
 1316 000a 43F40043 		orr	r3, r3, #32768
 1317 000e 9360     		str	r3, [r2, #8]
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1318              		.loc 3 191 1
 1319 0010 00BF     		nop
 1320 0012 BD46     		mov	sp, r7
 1321              	.LCFI130:
 1322              		.cfi_def_cfa_register 13
 1323              		@ sp needed
 1324 0014 80BC     		pop	{r7}
 1325              	.LCFI131:
 1326              		.cfi_restore 7
 1327              		.cfi_def_cfa_offset 0
 1328 0016 7047     		bx	lr
 1329              	.L84:
 1330              		.align	2
 1331              	.L83:
 1332 0018 00040058 		.word	1476396032
 1333              		.cfi_endproc
 1334              	.LFE848:
 1336              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 1337              		.align	1
 1338              		.global	HAL_PWREx_DisableInternalWakeUpLine
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1343              	HAL_PWREx_DisableInternalWakeUpLine:
 1344              	.LFB849:
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 80


 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1345              		.loc 3 198 1
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350 0000 80B4     		push	{r7}
 1351              	.LCFI132:
 1352              		.cfi_def_cfa_offset 4
 1353              		.cfi_offset 7, -4
 1354 0002 00AF     		add	r7, sp, #0
 1355              	.LCFI133:
 1356              		.cfi_def_cfa_register 7
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->C2CR3, PWR_C2CR3_EIWUL);
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWUL);
 1357              		.loc 3 202 3
 1358 0004 044B     		ldr	r3, .L86
 1359 0006 9B68     		ldr	r3, [r3, #8]
 1360 0008 034A     		ldr	r2, .L86
 1361 000a 23F40043 		bic	r3, r3, #32768
 1362 000e 9360     		str	r3, [r2, #8]
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1363              		.loc 3 204 1
 1364 0010 00BF     		nop
 1365 0012 BD46     		mov	sp, r7
 1366              	.LCFI134:
 1367              		.cfi_def_cfa_register 13
 1368              		@ sp needed
 1369 0014 80BC     		pop	{r7}
 1370              	.LCFI135:
 1371              		.cfi_restore 7
 1372              		.cfi_def_cfa_offset 0
 1373 0016 7047     		bx	lr
 1374              	.L87:
 1375              		.align	2
 1376              	.L86:
 1377 0018 00040058 		.word	1476396032
 1378              		.cfi_endproc
 1379              	.LFE849:
 1381              		.section	.text.HAL_PWREx_SetRadioBusyPolarity,"ax",%progbits
 1382              		.align	1
 1383              		.global	HAL_PWREx_SetRadioBusyPolarity
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1388              	HAL_PWREx_SetRadioBusyPolarity:
 1389              	.LFB850:
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Set radio busy trigger polarity.
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  RadioBusyPolarity This parameter can be one of the following values:
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_BUSY_POLARITY_RISING
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_BUSY_POLARITY_FALLING
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 81


 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_SetRadioBusyPolarity(uint32_t RadioBusyPolarity)
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1390              		.loc 3 214 1
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 8
 1393              		@ frame_needed = 1, uses_anonymous_args = 0
 1394 0000 80B5     		push	{r7, lr}
 1395              	.LCFI136:
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 7, -8
 1398              		.cfi_offset 14, -4
 1399 0002 82B0     		sub	sp, sp, #8
 1400              	.LCFI137:
 1401              		.cfi_def_cfa_offset 16
 1402 0004 00AF     		add	r7, sp, #0
 1403              	.LCFI138:
 1404              		.cfi_def_cfa_register 7
 1405 0006 7860     		str	r0, [r7, #4]
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_RADIO_BUSY_POLARITY(RadioBusyPolarity));
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_SetRadioBusyPolarity(RadioBusyPolarity);
 1406              		.loc 3 218 3
 1407 0008 7868     		ldr	r0, [r7, #4]
 1408 000a FFF7FEFF 		bl	LL_PWR_SetRadioBusyPolarity
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1409              		.loc 3 219 1
 1410 000e 00BF     		nop
 1411 0010 0837     		adds	r7, r7, #8
 1412              	.LCFI139:
 1413              		.cfi_def_cfa_offset 8
 1414 0012 BD46     		mov	sp, r7
 1415              	.LCFI140:
 1416              		.cfi_def_cfa_register 13
 1417              		@ sp needed
 1418 0014 80BD     		pop	{r7, pc}
 1419              		.cfi_endproc
 1420              	.LFE850:
 1422              		.section	.text.HAL_PWREx_SetRadioBusyTrigger,"ax",%progbits
 1423              		.align	1
 1424              		.global	HAL_PWREx_SetRadioBusyTrigger
 1425              		.syntax unified
 1426              		.thumb
 1427              		.thumb_func
 1429              	HAL_PWREx_SetRadioBusyTrigger:
 1430              	.LFB851:
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Set radio busy trigger action: wake-up from low-power mode Standby,
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         interruption.
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Signal polarity can be configured using function
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @ref HAL_PWREx_SetRadioBusyPolarity().
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  RadioBusyTrigger This parameter can be one of the following values:
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_BUSY_TRIGGER_NONE
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_BUSY_TRIGGER_WU_IT
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 82


 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_SetRadioBusyTrigger(uint32_t RadioBusyTrigger)
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1431              		.loc 3 232 1
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 8
 1434              		@ frame_needed = 1, uses_anonymous_args = 0
 1435 0000 80B5     		push	{r7, lr}
 1436              	.LCFI141:
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 82B0     		sub	sp, sp, #8
 1441              	.LCFI142:
 1442              		.cfi_def_cfa_offset 16
 1443 0004 00AF     		add	r7, sp, #0
 1444              	.LCFI143:
 1445              		.cfi_def_cfa_register 7
 1446 0006 7860     		str	r0, [r7, #4]
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_RADIO_BUSY_TRIGGER(RadioBusyTrigger));
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_C2_PWR_SetRadioBusyTrigger(RadioBusyTrigger);
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_SetRadioBusyTrigger(RadioBusyTrigger);
 1447              		.loc 3 239 3
 1448 0008 7868     		ldr	r0, [r7, #4]
 1449 000a FFF7FEFF 		bl	LL_PWR_SetRadioBusyTrigger
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1450              		.loc 3 241 1
 1451 000e 00BF     		nop
 1452 0010 0837     		adds	r7, r7, #8
 1453              	.LCFI144:
 1454              		.cfi_def_cfa_offset 8
 1455 0012 BD46     		mov	sp, r7
 1456              	.LCFI145:
 1457              		.cfi_def_cfa_register 13
 1458              		@ sp needed
 1459 0014 80BD     		pop	{r7, pc}
 1460              		.cfi_endproc
 1461              	.LFE851:
 1463              		.section	.text.HAL_PWREx_SetRadioIRQTrigger,"ax",%progbits
 1464              		.align	1
 1465              		.global	HAL_PWREx_SetRadioIRQTrigger
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1470              	HAL_PWREx_SetRadioIRQTrigger:
 1471              	.LFB852:
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Set radio IRQ trigger action: wake-up from low-power mode Standby,
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         interruption.
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  RadioIRQTrigger This parameter can be one of the following values:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 83


 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_IRQ_TRIGGER_NONE
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_IRQ_TRIGGER_WU_IT
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_SetRadioIRQTrigger(uint32_t RadioIRQTrigger)
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1472              		.loc 3 252 1
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 8
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              	.LCFI146:
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 82B0     		sub	sp, sp, #8
 1482              	.LCFI147:
 1483              		.cfi_def_cfa_offset 16
 1484 0004 00AF     		add	r7, sp, #0
 1485              	.LCFI148:
 1486              		.cfi_def_cfa_register 7
 1487 0006 7860     		str	r0, [r7, #4]
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_RADIO_IRQ_TRIGGER(RadioIRQTrigger));
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_C2_PWR_SetRadioIRQTrigger(RadioIRQTrigger);
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_SetRadioIRQTrigger(RadioIRQTrigger);
 1488              		.loc 3 259 3
 1489 0008 7868     		ldr	r0, [r7, #4]
 1490 000a FFF7FEFF 		bl	LL_PWR_SetRadioIRQTrigger
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1491              		.loc 3 261 1
 1492 000e 00BF     		nop
 1493 0010 0837     		adds	r7, r7, #8
 1494              	.LCFI149:
 1495              		.cfi_def_cfa_offset 8
 1496 0012 BD46     		mov	sp, r7
 1497              	.LCFI150:
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 0014 80BD     		pop	{r7, pc}
 1501              		.cfi_endproc
 1502              	.LFE852:
 1504              		.section	.text.HAL_PWREx_EnableHOLDC2IT,"ax",%progbits
 1505              		.align	1
 1506              		.global	HAL_PWREx_EnableHOLDC2IT
 1507              		.syntax unified
 1508              		.thumb
 1509              		.thumb_func
 1511              	HAL_PWREx_EnableHOLDC2IT:
 1512              	.LFB853:
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #if defined(DUAL_CORE)
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 84


 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable CPU2 on-Hold interrupt.
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableHOLDC2IT(void)
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1513              		.loc 3 269 1
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 1, uses_anonymous_args = 0
 1517              		@ link register save eliminated.
 1518 0000 80B4     		push	{r7}
 1519              	.LCFI151:
 1520              		.cfi_def_cfa_offset 4
 1521              		.cfi_offset 7, -4
 1522 0002 00AF     		add	r7, sp, #0
 1523              	.LCFI152:
 1524              		.cfi_def_cfa_register 7
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EC2H);
 1525              		.loc 3 270 3
 1526 0004 044B     		ldr	r3, .L92
 1527 0006 9B68     		ldr	r3, [r3, #8]
 1528 0008 034A     		ldr	r2, .L92
 1529 000a 43F48043 		orr	r3, r3, #16384
 1530 000e 9360     		str	r3, [r2, #8]
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1531              		.loc 3 271 1
 1532 0010 00BF     		nop
 1533 0012 BD46     		mov	sp, r7
 1534              	.LCFI153:
 1535              		.cfi_def_cfa_register 13
 1536              		@ sp needed
 1537 0014 80BC     		pop	{r7}
 1538              	.LCFI154:
 1539              		.cfi_restore 7
 1540              		.cfi_def_cfa_offset 0
 1541 0016 7047     		bx	lr
 1542              	.L93:
 1543              		.align	2
 1544              	.L92:
 1545 0018 00040058 		.word	1476396032
 1546              		.cfi_endproc
 1547              	.LFE853:
 1549              		.section	.text.HAL_PWREx_DisableHOLDC2IT,"ax",%progbits
 1550              		.align	1
 1551              		.global	HAL_PWREx_DisableHOLDC2IT
 1552              		.syntax unified
 1553              		.thumb
 1554              		.thumb_func
 1556              	HAL_PWREx_DisableHOLDC2IT:
 1557              	.LFB854:
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable CPU2 on-Hold interrupt.
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableHOLDC2IT(void)
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 85


 1558              		.loc 3 278 1
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562              		@ link register save eliminated.
 1563 0000 80B4     		push	{r7}
 1564              	.LCFI155:
 1565              		.cfi_def_cfa_offset 4
 1566              		.cfi_offset 7, -4
 1567 0002 00AF     		add	r7, sp, #0
 1568              	.LCFI156:
 1569              		.cfi_def_cfa_register 7
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EC2H);
 1570              		.loc 3 279 3
 1571 0004 044B     		ldr	r3, .L95
 1572 0006 9B68     		ldr	r3, [r3, #8]
 1573 0008 034A     		ldr	r2, .L95
 1574 000a 23F48043 		bic	r3, r3, #16384
 1575 000e 9360     		str	r3, [r2, #8]
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1576              		.loc 3 280 1
 1577 0010 00BF     		nop
 1578 0012 BD46     		mov	sp, r7
 1579              	.LCFI157:
 1580              		.cfi_def_cfa_register 13
 1581              		@ sp needed
 1582 0014 80BC     		pop	{r7}
 1583              	.LCFI158:
 1584              		.cfi_restore 7
 1585              		.cfi_def_cfa_offset 0
 1586 0016 7047     		bx	lr
 1587              	.L96:
 1588              		.align	2
 1589              	.L95:
 1590 0018 00040058 		.word	1476396032
 1591              		.cfi_endproc
 1592              	.LFE854:
 1594              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 1595              		.align	1
 1596              		.global	HAL_PWREx_EnableGPIOPullUp
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1601              	HAL_PWREx_EnableGPIOPullUp:
 1602              	.LFB855:
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 86


 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIO Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIONumber Specify the I/O pins numbers.
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1603              		.loc 3 307 1
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 16
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607              		@ link register save eliminated.
 1608 0000 80B4     		push	{r7}
 1609              	.LCFI159:
 1610              		.cfi_def_cfa_offset 4
 1611              		.cfi_offset 7, -4
 1612 0002 85B0     		sub	sp, sp, #20
 1613              	.LCFI160:
 1614              		.cfi_def_cfa_offset 24
 1615 0004 00AF     		add	r7, sp, #0
 1616              	.LCFI161:
 1617              		.cfi_def_cfa_register 7
 1618 0006 7860     		str	r0, [r7, #4]
 1619 0008 3960     		str	r1, [r7]
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1620              		.loc 3 308 21
 1621 000a 0023     		movs	r3, #0
 1622 000c FB73     		strb	r3, [r7, #15]
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   switch (GPIO)
 1623              		.loc 3 313 3
 1624 000e 7B68     		ldr	r3, [r7, #4]
 1625 0010 072B     		cmp	r3, #7
 1626 0012 55D8     		bhi	.L98
 1627 0014 01A2     		adr	r2, .L100
 1628 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1629 001a 00BF     		.p2align 2
 1630              	.L100:
 1631 001c 3D000000 		.word	.L103+1
 1632 0020 59000000 		.word	.L102+1
 1633 0024 75000000 		.word	.L101+1
 1634 0028 C1000000 		.word	.L98+1
 1635 002c C1000000 		.word	.L98+1
 1636 0030 C1000000 		.word	.L98+1
 1637 0034 C1000000 		.word	.L98+1
 1638 0038 9D000000 		.word	.L99+1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 87


 1639              		.p2align 1
 1640              	.L103:
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PUCRA, GPIONumber);
 1641              		.loc 3 316 7
 1642 003c 254B     		ldr	r3, .L106
 1643 003e 1A6A     		ldr	r2, [r3, #32]
 1644 0040 2449     		ldr	r1, .L106
 1645 0042 3B68     		ldr	r3, [r7]
 1646 0044 1343     		orrs	r3, r3, r2
 1647 0046 0B62     		str	r3, [r1, #32]
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRA, GPIONumber);
 1648              		.loc 3 317 7
 1649 0048 224B     		ldr	r3, .L106
 1650 004a 5A6A     		ldr	r2, [r3, #36]
 1651 004c 3B68     		ldr	r3, [r7]
 1652 004e DB43     		mvns	r3, r3
 1653 0050 2049     		ldr	r1, .L106
 1654 0052 1340     		ands	r3, r3, r2
 1655 0054 4B62     		str	r3, [r1, #36]
 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1656              		.loc 3 318 7
 1657 0056 36E0     		b	.L104
 1658              	.L102:
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PUCRB, GPIONumber);
 1659              		.loc 3 320 7
 1660 0058 1E4B     		ldr	r3, .L106
 1661 005a 9A6A     		ldr	r2, [r3, #40]
 1662 005c 1D49     		ldr	r1, .L106
 1663 005e 3B68     		ldr	r3, [r7]
 1664 0060 1343     		orrs	r3, r3, r2
 1665 0062 8B62     		str	r3, [r1, #40]
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRB, GPIONumber);
 1666              		.loc 3 321 7
 1667 0064 1B4B     		ldr	r3, .L106
 1668 0066 DA6A     		ldr	r2, [r3, #44]
 1669 0068 3B68     		ldr	r3, [r7]
 1670 006a DB43     		mvns	r3, r3
 1671 006c 1949     		ldr	r1, .L106
 1672 006e 1340     		ands	r3, r3, r2
 1673 0070 CB62     		str	r3, [r1, #44]
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1674              		.loc 3 322 7
 1675 0072 28E0     		b	.L104
 1676              	.L101:
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PUCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 1677              		.loc 3 324 7
 1678 0074 174B     		ldr	r3, .L106
 1679 0076 1A6B     		ldr	r2, [r3, #48]
 1680 0078 3968     		ldr	r1, [r7]
 1681 007a 4EF27F03 		movw	r3, #57471
 1682 007e 0B40     		ands	r3, r3, r1
 1683 0080 1449     		ldr	r1, .L106
 1684 0082 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 88


 1685 0084 0B63     		str	r3, [r1, #48]
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 1686              		.loc 3 325 7
 1687 0086 134B     		ldr	r3, .L106
 1688 0088 5A6B     		ldr	r2, [r3, #52]
 1689 008a 3968     		ldr	r1, [r7]
 1690 008c 4EF27F03 		movw	r3, #57471
 1691 0090 0B40     		ands	r3, r3, r1
 1692 0092 DB43     		mvns	r3, r3
 1693 0094 0F49     		ldr	r1, .L106
 1694 0096 1340     		ands	r3, r3, r2
 1695 0098 4B63     		str	r3, [r1, #52]
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1696              		.loc 3 326 7
 1697 009a 14E0     		b	.L104
 1698              	.L99:
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1699              		.loc 3 328 7
 1700 009c 0D4B     		ldr	r3, .L106
 1701 009e 9A6D     		ldr	r2, [r3, #88]
 1702 00a0 3B68     		ldr	r3, [r7]
 1703 00a2 03F00803 		and	r3, r3, #8
 1704 00a6 0B49     		ldr	r1, .L106
 1705 00a8 1343     		orrs	r3, r3, r2
 1706 00aa 8B65     		str	r3, [r1, #88]
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1707              		.loc 3 329 7
 1708 00ac 094B     		ldr	r3, .L106
 1709 00ae DA6D     		ldr	r2, [r3, #92]
 1710 00b0 3B68     		ldr	r3, [r7]
 1711 00b2 03F00803 		and	r3, r3, #8
 1712 00b6 DB43     		mvns	r3, r3
 1713 00b8 0649     		ldr	r1, .L106
 1714 00ba 1340     		ands	r3, r3, r2
 1715 00bc CB65     		str	r3, [r1, #92]
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1716              		.loc 3 330 7
 1717 00be 02E0     		b	.L104
 1718              	.L98:
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     default:
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1719              		.loc 3 332 14
 1720 00c0 0123     		movs	r3, #1
 1721 00c2 FB73     		strb	r3, [r7, #15]
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1722              		.loc 3 333 7
 1723 00c4 00BF     		nop
 1724              	.L104:
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return status;
 1725              		.loc 3 336 10
 1726 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1727              		.loc 3 337 1
 1728 00c8 1846     		mov	r0, r3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 89


 1729 00ca 1437     		adds	r7, r7, #20
 1730              	.LCFI162:
 1731              		.cfi_def_cfa_offset 4
 1732 00cc BD46     		mov	sp, r7
 1733              	.LCFI163:
 1734              		.cfi_def_cfa_register 13
 1735              		@ sp needed
 1736 00ce 80BC     		pop	{r7}
 1737              	.LCFI164:
 1738              		.cfi_restore 7
 1739              		.cfi_def_cfa_offset 0
 1740 00d0 7047     		bx	lr
 1741              	.L107:
 1742 00d2 00BF     		.align	2
 1743              	.L106:
 1744 00d4 00040058 		.word	1476396032
 1745              		.cfi_endproc
 1746              	.LFE855:
 1748              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 1749              		.align	1
 1750              		.global	HAL_PWREx_DisableGPIOPullUp
 1751              		.syntax unified
 1752              		.thumb
 1753              		.thumb_func
 1755              	HAL_PWREx_DisableGPIOPullUp:
 1756              	.LFB856:
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIO Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIONumber Specify the I/O pins numbers.
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1757              		.loc 3 355 1
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 16
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 1762 0000 80B4     		push	{r7}
 1763              	.LCFI165:
 1764              		.cfi_def_cfa_offset 4
 1765              		.cfi_offset 7, -4
 1766 0002 85B0     		sub	sp, sp, #20
 1767              	.LCFI166:
 1768              		.cfi_def_cfa_offset 24
 1769 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 90


 1770              	.LCFI167:
 1771              		.cfi_def_cfa_register 7
 1772 0006 7860     		str	r0, [r7, #4]
 1773 0008 3960     		str	r1, [r7]
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1774              		.loc 3 356 21
 1775 000a 0023     		movs	r3, #0
 1776 000c FB73     		strb	r3, [r7, #15]
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   switch (GPIO)
 1777              		.loc 3 361 3
 1778 000e 7B68     		ldr	r3, [r7, #4]
 1779 0010 072B     		cmp	r3, #7
 1780 0012 38D8     		bhi	.L109
 1781 0014 01A2     		adr	r2, .L111
 1782 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1783 001a 00BF     		.p2align 2
 1784              	.L111:
 1785 001c 3D000000 		.word	.L114+1
 1786 0020 4D000000 		.word	.L113+1
 1787 0024 5D000000 		.word	.L112+1
 1788 0028 87000000 		.word	.L109+1
 1789 002c 87000000 		.word	.L109+1
 1790 0030 87000000 		.word	.L109+1
 1791 0034 87000000 		.word	.L109+1
 1792 0038 73000000 		.word	.L110+1
 1793              		.p2align 1
 1794              	.L114:
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRA, GPIONumber);
 1795              		.loc 3 364 7
 1796 003c 164B     		ldr	r3, .L117
 1797 003e 1A6A     		ldr	r2, [r3, #32]
 1798 0040 3B68     		ldr	r3, [r7]
 1799 0042 DB43     		mvns	r3, r3
 1800 0044 1449     		ldr	r1, .L117
 1801 0046 1340     		ands	r3, r3, r2
 1802 0048 0B62     		str	r3, [r1, #32]
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1803              		.loc 3 365 7
 1804 004a 1FE0     		b	.L115
 1805              	.L113:
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRB, GPIONumber);
 1806              		.loc 3 367 7
 1807 004c 124B     		ldr	r3, .L117
 1808 004e 9A6A     		ldr	r2, [r3, #40]
 1809 0050 3B68     		ldr	r3, [r7]
 1810 0052 DB43     		mvns	r3, r3
 1811 0054 1049     		ldr	r1, .L117
 1812 0056 1340     		ands	r3, r3, r2
 1813 0058 8B62     		str	r3, [r1, #40]
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 91


 1814              		.loc 3 368 7
 1815 005a 17E0     		b	.L115
 1816              	.L112:
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 1817              		.loc 3 370 7
 1818 005c 0E4B     		ldr	r3, .L117
 1819 005e 1A6B     		ldr	r2, [r3, #48]
 1820 0060 3968     		ldr	r1, [r7]
 1821 0062 4EF27F03 		movw	r3, #57471
 1822 0066 0B40     		ands	r3, r3, r1
 1823 0068 DB43     		mvns	r3, r3
 1824 006a 0B49     		ldr	r1, .L117
 1825 006c 1340     		ands	r3, r3, r2
 1826 006e 0B63     		str	r3, [r1, #48]
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1827              		.loc 3 371 7
 1828 0070 0CE0     		b	.L115
 1829              	.L110:
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1830              		.loc 3 373 7
 1831 0072 094B     		ldr	r3, .L117
 1832 0074 9A6D     		ldr	r2, [r3, #88]
 1833 0076 3B68     		ldr	r3, [r7]
 1834 0078 03F00803 		and	r3, r3, #8
 1835 007c DB43     		mvns	r3, r3
 1836 007e 0649     		ldr	r1, .L117
 1837 0080 1340     		ands	r3, r3, r2
 1838 0082 8B65     		str	r3, [r1, #88]
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1839              		.loc 3 374 7
 1840 0084 02E0     		b	.L115
 1841              	.L109:
 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     default:
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1842              		.loc 3 376 14
 1843 0086 0123     		movs	r3, #1
 1844 0088 FB73     		strb	r3, [r7, #15]
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1845              		.loc 3 377 7
 1846 008a 00BF     		nop
 1847              	.L115:
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return status;
 1848              		.loc 3 380 10
 1849 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 1850              		.loc 3 381 1
 1851 008e 1846     		mov	r0, r3
 1852 0090 1437     		adds	r7, r7, #20
 1853              	.LCFI168:
 1854              		.cfi_def_cfa_offset 4
 1855 0092 BD46     		mov	sp, r7
 1856              	.LCFI169:
 1857              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 92


 1858              		@ sp needed
 1859 0094 80BC     		pop	{r7}
 1860              	.LCFI170:
 1861              		.cfi_restore 7
 1862              		.cfi_def_cfa_offset 0
 1863 0096 7047     		bx	lr
 1864              	.L118:
 1865              		.align	2
 1866              	.L117:
 1867 0098 00040058 		.word	1476396032
 1868              		.cfi_endproc
 1869              	.LFE856:
 1871              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 1872              		.align	1
 1873              		.global	HAL_PWREx_EnableGPIOPullDown
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1878              	HAL_PWREx_EnableGPIOPullDown:
 1879              	.LFB857:
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIO Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIONumber Specify the I/O pins numbers.
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 1880              		.loc 3 405 1
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884              		@ link register save eliminated.
 1885 0000 80B4     		push	{r7}
 1886              	.LCFI171:
 1887              		.cfi_def_cfa_offset 4
 1888              		.cfi_offset 7, -4
 1889 0002 85B0     		sub	sp, sp, #20
 1890              	.LCFI172:
 1891              		.cfi_def_cfa_offset 24
 1892 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 93


 1893              	.LCFI173:
 1894              		.cfi_def_cfa_register 7
 1895 0006 7860     		str	r0, [r7, #4]
 1896 0008 3960     		str	r1, [r7]
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1897              		.loc 3 406 21
 1898 000a 0023     		movs	r3, #0
 1899 000c FB73     		strb	r3, [r7, #15]
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   switch (GPIO)
 1900              		.loc 3 411 3
 1901 000e 7B68     		ldr	r3, [r7, #4]
 1902 0010 072B     		cmp	r3, #7
 1903 0012 55D8     		bhi	.L120
 1904 0014 01A2     		adr	r2, .L122
 1905 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1906 001a 00BF     		.p2align 2
 1907              	.L122:
 1908 001c 3D000000 		.word	.L125+1
 1909 0020 59000000 		.word	.L124+1
 1910 0024 75000000 		.word	.L123+1
 1911 0028 C1000000 		.word	.L120+1
 1912 002c C1000000 		.word	.L120+1
 1913 0030 C1000000 		.word	.L120+1
 1914 0034 C1000000 		.word	.L120+1
 1915 0038 9D000000 		.word	.L121+1
 1916              		.p2align 1
 1917              	.L125:
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PDCRA, GPIONumber);
 1918              		.loc 3 414 7
 1919 003c 254B     		ldr	r3, .L128
 1920 003e 5A6A     		ldr	r2, [r3, #36]
 1921 0040 2449     		ldr	r1, .L128
 1922 0042 3B68     		ldr	r3, [r7]
 1923 0044 1343     		orrs	r3, r3, r2
 1924 0046 4B62     		str	r3, [r1, #36]
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRA, GPIONumber);
 1925              		.loc 3 415 7
 1926 0048 224B     		ldr	r3, .L128
 1927 004a 1A6A     		ldr	r2, [r3, #32]
 1928 004c 3B68     		ldr	r3, [r7]
 1929 004e DB43     		mvns	r3, r3
 1930 0050 2049     		ldr	r1, .L128
 1931 0052 1340     		ands	r3, r3, r2
 1932 0054 0B62     		str	r3, [r1, #32]
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1933              		.loc 3 416 7
 1934 0056 36E0     		b	.L126
 1935              	.L124:
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PDCRB, GPIONumber);
 1936              		.loc 3 418 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 94


 1937 0058 1E4B     		ldr	r3, .L128
 1938 005a DA6A     		ldr	r2, [r3, #44]
 1939 005c 1D49     		ldr	r1, .L128
 1940 005e 3B68     		ldr	r3, [r7]
 1941 0060 1343     		orrs	r3, r3, r2
 1942 0062 CB62     		str	r3, [r1, #44]
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRB, GPIONumber);
 1943              		.loc 3 419 7
 1944 0064 1B4B     		ldr	r3, .L128
 1945 0066 9A6A     		ldr	r2, [r3, #40]
 1946 0068 3B68     		ldr	r3, [r7]
 1947 006a DB43     		mvns	r3, r3
 1948 006c 1949     		ldr	r1, .L128
 1949 006e 1340     		ands	r3, r3, r2
 1950 0070 8B62     		str	r3, [r1, #40]
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1951              		.loc 3 420 7
 1952 0072 28E0     		b	.L126
 1953              	.L123:
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PDCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 1954              		.loc 3 422 7
 1955 0074 174B     		ldr	r3, .L128
 1956 0076 5A6B     		ldr	r2, [r3, #52]
 1957 0078 3968     		ldr	r1, [r7]
 1958 007a 4EF27F03 		movw	r3, #57471
 1959 007e 0B40     		ands	r3, r3, r1
 1960 0080 1449     		ldr	r1, .L128
 1961 0082 1343     		orrs	r3, r3, r2
 1962 0084 4B63     		str	r3, [r1, #52]
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 1963              		.loc 3 423 7
 1964 0086 134B     		ldr	r3, .L128
 1965 0088 1A6B     		ldr	r2, [r3, #48]
 1966 008a 3968     		ldr	r1, [r7]
 1967 008c 4EF27F03 		movw	r3, #57471
 1968 0090 0B40     		ands	r3, r3, r1
 1969 0092 DB43     		mvns	r3, r3
 1970 0094 0F49     		ldr	r1, .L128
 1971 0096 1340     		ands	r3, r3, r2
 1972 0098 0B63     		str	r3, [r1, #48]
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1973              		.loc 3 424 7
 1974 009a 14E0     		b	.L126
 1975              	.L121:
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1976              		.loc 3 426 7
 1977 009c 0D4B     		ldr	r3, .L128
 1978 009e DA6D     		ldr	r2, [r3, #92]
 1979 00a0 3B68     		ldr	r3, [r7]
 1980 00a2 03F00803 		and	r3, r3, #8
 1981 00a6 0B49     		ldr	r1, .L128
 1982 00a8 1343     		orrs	r3, r3, r2
 1983 00aa CB65     		str	r3, [r1, #92]
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1984              		.loc 3 427 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 95


 1985 00ac 094B     		ldr	r3, .L128
 1986 00ae 9A6D     		ldr	r2, [r3, #88]
 1987 00b0 3B68     		ldr	r3, [r7]
 1988 00b2 03F00803 		and	r3, r3, #8
 1989 00b6 DB43     		mvns	r3, r3
 1990 00b8 0649     		ldr	r1, .L128
 1991 00ba 1340     		ands	r3, r3, r2
 1992 00bc 8B65     		str	r3, [r1, #88]
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1993              		.loc 3 428 7
 1994 00be 02E0     		b	.L126
 1995              	.L120:
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     default:
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1996              		.loc 3 430 14
 1997 00c0 0123     		movs	r3, #1
 1998 00c2 FB73     		strb	r3, [r7, #15]
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 1999              		.loc 3 431 7
 2000 00c4 00BF     		nop
 2001              	.L126:
 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return status;
 2002              		.loc 3 434 10
 2003 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2004              		.loc 3 435 1
 2005 00c8 1846     		mov	r0, r3
 2006 00ca 1437     		adds	r7, r7, #20
 2007              	.LCFI174:
 2008              		.cfi_def_cfa_offset 4
 2009 00cc BD46     		mov	sp, r7
 2010              	.LCFI175:
 2011              		.cfi_def_cfa_register 13
 2012              		@ sp needed
 2013 00ce 80BC     		pop	{r7}
 2014              	.LCFI176:
 2015              		.cfi_restore 7
 2016              		.cfi_def_cfa_offset 0
 2017 00d0 7047     		bx	lr
 2018              	.L129:
 2019 00d2 00BF     		.align	2
 2020              	.L128:
 2021 00d4 00040058 		.word	1476396032
 2022              		.cfi_endproc
 2023              	.LFE857:
 2025              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 2026              		.align	1
 2027              		.global	HAL_PWREx_DisableGPIOPullDown
 2028              		.syntax unified
 2029              		.thumb
 2030              		.thumb_func
 2032              	HAL_PWREx_DisableGPIOPullDown:
 2033              	.LFB858:
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 96


 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIO Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param GPIONumber Specify the I/O pins numbers.
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2034              		.loc 3 453 1
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 16
 2037              		@ frame_needed = 1, uses_anonymous_args = 0
 2038              		@ link register save eliminated.
 2039 0000 80B4     		push	{r7}
 2040              	.LCFI177:
 2041              		.cfi_def_cfa_offset 4
 2042              		.cfi_offset 7, -4
 2043 0002 85B0     		sub	sp, sp, #20
 2044              	.LCFI178:
 2045              		.cfi_def_cfa_offset 24
 2046 0004 00AF     		add	r7, sp, #0
 2047              	.LCFI179:
 2048              		.cfi_def_cfa_register 7
 2049 0006 7860     		str	r0, [r7, #4]
 2050 0008 3960     		str	r1, [r7]
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2051              		.loc 3 454 21
 2052 000a 0023     		movs	r3, #0
 2053 000c FB73     		strb	r3, [r7, #15]
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   switch (GPIO)
 2054              		.loc 3 459 3
 2055 000e 7B68     		ldr	r3, [r7, #4]
 2056 0010 072B     		cmp	r3, #7
 2057 0012 38D8     		bhi	.L131
 2058 0014 01A2     		adr	r2, .L133
 2059 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2060 001a 00BF     		.p2align 2
 2061              	.L133:
 2062 001c 3D000000 		.word	.L136+1
 2063 0020 4D000000 		.word	.L135+1
 2064 0024 5D000000 		.word	.L134+1
 2065 0028 87000000 		.word	.L131+1
 2066 002c 87000000 		.word	.L131+1
 2067 0030 87000000 		.word	.L131+1
 2068 0034 87000000 		.word	.L131+1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 97


 2069 0038 73000000 		.word	.L132+1
 2070              		.p2align 1
 2071              	.L136:
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRA, GPIONumber);
 2072              		.loc 3 462 7
 2073 003c 164B     		ldr	r3, .L139
 2074 003e 5A6A     		ldr	r2, [r3, #36]
 2075 0040 3B68     		ldr	r3, [r7]
 2076 0042 DB43     		mvns	r3, r3
 2077 0044 1449     		ldr	r1, .L139
 2078 0046 1340     		ands	r3, r3, r2
 2079 0048 4B62     		str	r3, [r1, #36]
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2080              		.loc 3 463 7
 2081 004a 1FE0     		b	.L137
 2082              	.L135:
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRB, GPIONumber);
 2083              		.loc 3 465 7
 2084 004c 124B     		ldr	r3, .L139
 2085 004e DA6A     		ldr	r2, [r3, #44]
 2086 0050 3B68     		ldr	r3, [r7]
 2087 0052 DB43     		mvns	r3, r3
 2088 0054 1049     		ldr	r1, .L139
 2089 0056 1340     		ands	r3, r3, r2
 2090 0058 CB62     		str	r3, [r1, #44]
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2091              		.loc 3 466 7
 2092 005a 17E0     		b	.L137
 2093              	.L134:
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRC, (GPIONumber & PWR_PORTC_AVAILABLE_PINS));
 2094              		.loc 3 468 7
 2095 005c 0E4B     		ldr	r3, .L139
 2096 005e 5A6B     		ldr	r2, [r3, #52]
 2097 0060 3968     		ldr	r1, [r7]
 2098 0062 4EF27F03 		movw	r3, #57471
 2099 0066 0B40     		ands	r3, r3, r1
 2100 0068 DB43     		mvns	r3, r3
 2101 006a 0B49     		ldr	r1, .L139
 2102 006c 1340     		ands	r3, r3, r2
 2103 006e 4B63     		str	r3, [r1, #52]
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2104              		.loc 3 469 7
 2105 0070 0CE0     		b	.L137
 2106              	.L132:
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 2107              		.loc 3 471 7
 2108 0072 094B     		ldr	r3, .L139
 2109 0074 DA6D     		ldr	r2, [r3, #92]
 2110 0076 3B68     		ldr	r3, [r7]
 2111 0078 03F00803 		and	r3, r3, #8
 2112 007c DB43     		mvns	r3, r3
 2113 007e 0649     		ldr	r1, .L139
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 98


 2114 0080 1340     		ands	r3, r3, r2
 2115 0082 CB65     		str	r3, [r1, #92]
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2116              		.loc 3 472 7
 2117 0084 02E0     		b	.L137
 2118              	.L131:
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     default:
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       status = HAL_ERROR;
 2119              		.loc 3 474 14
 2120 0086 0123     		movs	r3, #1
 2121 0088 FB73     		strb	r3, [r7, #15]
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2122              		.loc 3 475 7
 2123 008a 00BF     		nop
 2124              	.L137:
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return status;
 2125              		.loc 3 478 10
 2126 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2127              		.loc 3 479 1
 2128 008e 1846     		mov	r0, r3
 2129 0090 1437     		adds	r7, r7, #20
 2130              	.LCFI180:
 2131              		.cfi_def_cfa_offset 4
 2132 0092 BD46     		mov	sp, r7
 2133              	.LCFI181:
 2134              		.cfi_def_cfa_register 13
 2135              		@ sp needed
 2136 0094 80BC     		pop	{r7}
 2137              	.LCFI182:
 2138              		.cfi_restore 7
 2139              		.cfi_def_cfa_offset 0
 2140 0096 7047     		bx	lr
 2141              	.L140:
 2142              		.align	2
 2143              	.L139:
 2144 0098 00040058 		.word	1476396032
 2145              		.cfi_endproc
 2146              	.LFE858:
 2148              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 2149              		.align	1
 2150              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 2151              		.syntax unified
 2152              		.thumb
 2153              		.thumb_func
 2155              	HAL_PWREx_EnablePullUpPullDownConfig:
 2156              	.LFB859:
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 99


 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2157              		.loc 3 492 1
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162 0000 80B4     		push	{r7}
 2163              	.LCFI183:
 2164              		.cfi_def_cfa_offset 4
 2165              		.cfi_offset 7, -4
 2166 0002 00AF     		add	r7, sp, #0
 2167              	.LCFI184:
 2168              		.cfi_def_cfa_register 7
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->C2CR3, PWR_C2CR3_APC);
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 2169              		.loc 3 496 3
 2170 0004 044B     		ldr	r3, .L142
 2171 0006 9B68     		ldr	r3, [r3, #8]
 2172 0008 034A     		ldr	r2, .L142
 2173 000a 43F48063 		orr	r3, r3, #1024
 2174 000e 9360     		str	r3, [r2, #8]
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2175              		.loc 3 498 1
 2176 0010 00BF     		nop
 2177 0012 BD46     		mov	sp, r7
 2178              	.LCFI185:
 2179              		.cfi_def_cfa_register 13
 2180              		@ sp needed
 2181 0014 80BC     		pop	{r7}
 2182              	.LCFI186:
 2183              		.cfi_restore 7
 2184              		.cfi_def_cfa_offset 0
 2185 0016 7047     		bx	lr
 2186              	.L143:
 2187              		.align	2
 2188              	.L142:
 2189 0018 00040058 		.word	1476396032
 2190              		.cfi_endproc
 2191              	.LFE859:
 2193              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 2194              		.align	1
 2195              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2200              	HAL_PWREx_DisablePullUpPullDownConfig:
 2201              	.LFB860:
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 100


 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2202              		.loc 3 507 1
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 0
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206              		@ link register save eliminated.
 2207 0000 80B4     		push	{r7}
 2208              	.LCFI187:
 2209              		.cfi_def_cfa_offset 4
 2210              		.cfi_offset 7, -4
 2211 0002 00AF     		add	r7, sp, #0
 2212              	.LCFI188:
 2213              		.cfi_def_cfa_register 7
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->C2CR3, PWR_C2CR3_APC);
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 2214              		.loc 3 511 3
 2215 0004 044B     		ldr	r3, .L145
 2216 0006 9B68     		ldr	r3, [r3, #8]
 2217 0008 034A     		ldr	r2, .L145
 2218 000a 23F48063 		bic	r3, r3, #1024
 2219 000e 9360     		str	r3, [r2, #8]
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2220              		.loc 3 513 1
 2221 0010 00BF     		nop
 2222 0012 BD46     		mov	sp, r7
 2223              	.LCFI189:
 2224              		.cfi_def_cfa_register 13
 2225              		@ sp needed
 2226 0014 80BC     		pop	{r7}
 2227              	.LCFI190:
 2228              		.cfi_restore 7
 2229              		.cfi_def_cfa_offset 0
 2230 0016 7047     		bx	lr
 2231              	.L146:
 2232              		.align	2
 2233              	.L145:
 2234 0018 00040058 		.word	1476396032
 2235              		.cfi_endproc
 2236              	.LFE860:
 2238              		.section	.text.HAL_PWREx_HoldCore,"ax",%progbits
 2239              		.align	1
 2240              		.global	HAL_PWREx_HoldCore
 2241              		.syntax unified
 2242              		.thumb
 2243              		.thumb_func
 2245              	HAL_PWREx_HoldCore:
 2246              	.LFB861:
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 101


 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #if defined(DUAL_CORE)
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Hold CPU and allocated peripherals after reset or wakeup from Stop or Standby.
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  CPU Specifies the core to be held.
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *             This parameter can be one of the following values:
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *             @arg PWR_CORE_CPU2: Hold CPU2.
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Hold CPU2 with CPU1 as master by default.
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_HoldCore(uint32_t CPU)
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2247              		.loc 3 527 1
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 8
 2250              		@ frame_needed = 1, uses_anonymous_args = 0
 2251 0000 80B5     		push	{r7, lr}
 2252              	.LCFI191:
 2253              		.cfi_def_cfa_offset 8
 2254              		.cfi_offset 7, -8
 2255              		.cfi_offset 14, -4
 2256 0002 82B0     		sub	sp, sp, #8
 2257              	.LCFI192:
 2258              		.cfi_def_cfa_offset 16
 2259 0004 00AF     		add	r7, sp, #0
 2260              	.LCFI193:
 2261              		.cfi_def_cfa_register 7
 2262 0006 7860     		str	r0, [r7, #4]
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_CORE_HOLD_RELEASE(CPU));
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_DisableBootC2();
 2263              		.loc 3 531 3
 2264 0008 FFF7FEFF 		bl	LL_PWR_DisableBootC2
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2265              		.loc 3 532 1
 2266 000c 00BF     		nop
 2267 000e 0837     		adds	r7, r7, #8
 2268              	.LCFI194:
 2269              		.cfi_def_cfa_offset 8
 2270 0010 BD46     		mov	sp, r7
 2271              	.LCFI195:
 2272              		.cfi_def_cfa_register 13
 2273              		@ sp needed
 2274 0012 80BD     		pop	{r7, pc}
 2275              		.cfi_endproc
 2276              	.LFE861:
 2278              		.section	.text.HAL_PWREx_ReleaseCore,"ax",%progbits
 2279              		.align	1
 2280              		.global	HAL_PWREx_ReleaseCore
 2281              		.syntax unified
 2282              		.thumb
 2283              		.thumb_func
 2285              	HAL_PWREx_ReleaseCore:
 2286              	.LFB862:
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 102


 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Release CPU and allocated peripherals after reset or wakeup from Stop or Standby.
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  CPU Specifies the core to be released.
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *             This parameter can be one of the following values:
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *             @arg PWR_CORE_CPU2: Release the CPU2 from holding.
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_ReleaseCore(uint32_t CPU)
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2287              		.loc 3 542 1
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 8
 2290              		@ frame_needed = 1, uses_anonymous_args = 0
 2291 0000 80B5     		push	{r7, lr}
 2292              	.LCFI196:
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 7, -8
 2295              		.cfi_offset 14, -4
 2296 0002 82B0     		sub	sp, sp, #8
 2297              	.LCFI197:
 2298              		.cfi_def_cfa_offset 16
 2299 0004 00AF     		add	r7, sp, #0
 2300              	.LCFI198:
 2301              		.cfi_def_cfa_register 7
 2302 0006 7860     		str	r0, [r7, #4]
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_CORE_HOLD_RELEASE(CPU));
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_EnableBootC2();
 2303              		.loc 3 546 3
 2304 0008 FFF7FEFF 		bl	LL_PWR_EnableBootC2
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2305              		.loc 3 547 1
 2306 000c 00BF     		nop
 2307 000e 0837     		adds	r7, r7, #8
 2308              	.LCFI199:
 2309              		.cfi_def_cfa_offset 8
 2310 0010 BD46     		mov	sp, r7
 2311              	.LCFI200:
 2312              		.cfi_def_cfa_register 13
 2313              		@ sp needed
 2314 0012 80BD     		pop	{r7, pc}
 2315              		.cfi_endproc
 2316              	.LFE862:
 2318              		.section	.text.HAL_PWREx_EnableSRAMRetention,"ax",%progbits
 2319              		.align	1
 2320              		.global	HAL_PWREx_EnableSRAMRetention
 2321              		.syntax unified
 2322              		.thumb
 2323              		.thumb_func
 2325              	HAL_PWREx_EnableSRAMRetention:
 2326              	.LFB863:
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Enable CPU2 wake-up from low-power mode on illegal access occurrence
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Can be configured from CPU2 only
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 103


 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableWakeUp_ILAC(void)
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_C2_EnableWakeUp_ILAC();
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Disable CPU2 wake-up from low-power mode on illegal access occurrence
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Can be configured from CPU2 only
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableWakeUp_ILAC(void)
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_C2_DisableWakeUp_ILAC();
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Check if bit to wake-up CPU2 from low-power mode on illegal access
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         occurrence is set
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Can be used from CPU2 only
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval State of bit (1 or 0)
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** uint32_t HAL_PWREx_IsEnabledWakeUp_ILAC(void)
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return LL_PWR_C2_IsEnabledWakeUp_ILAC();
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM is powered by the low-power regulator in
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAMRetention(void)
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2327              		.loc 3 592 1
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 1, uses_anonymous_args = 0
 2331 0000 80B5     		push	{r7, lr}
 2332              	.LCFI201:
 2333              		.cfi_def_cfa_offset 8
 2334              		.cfi_offset 7, -8
 2335              		.cfi_offset 14, -4
 2336 0002 00AF     		add	r7, sp, #0
 2337              	.LCFI202:
 2338              		.cfi_def_cfa_register 7
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_EnableSRAM2Retention();
 2339              		.loc 3 593 3
 2340 0004 FFF7FEFF 		bl	LL_PWR_EnableSRAM2Retention
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2341              		.loc 3 594 1
 2342 0008 00BF     		nop
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 104


 2343 000a 80BD     		pop	{r7, pc}
 2344              		.cfi_endproc
 2345              	.LFE863:
 2347              		.section	.text.HAL_PWREx_DisableSRAMRetention,"ax",%progbits
 2348              		.align	1
 2349              		.global	HAL_PWREx_DisableSRAMRetention
 2350              		.syntax unified
 2351              		.thumb
 2352              		.thumb_func
 2354              	HAL_PWREx_DisableSRAMRetention:
 2355              	.LFB864:
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM is powered off in Standby mode
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        and its content is lost.
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAMRetention(void)
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2356              		.loc 3 603 1
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360 0000 80B5     		push	{r7, lr}
 2361              	.LCFI203:
 2362              		.cfi_def_cfa_offset 8
 2363              		.cfi_offset 7, -8
 2364              		.cfi_offset 14, -4
 2365 0002 00AF     		add	r7, sp, #0
 2366              	.LCFI204:
 2367              		.cfi_def_cfa_register 7
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_DisableSRAM2Retention();
 2368              		.loc 3 604 3
 2369 0004 FFF7FEFF 		bl	LL_PWR_DisableSRAM2Retention
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2370              		.loc 3 605 1
 2371 0008 00BF     		nop
 2372 000a 80BD     		pop	{r7, pc}
 2373              		.cfi_endproc
 2374              	.LFE864:
 2376              		.section	.text.HAL_PWREx_EnableFlashPowerDown,"ax",%progbits
 2377              		.align	1
 2378              		.global	HAL_PWREx_EnableFlashPowerDown
 2379              		.syntax unified
 2380              		.thumb
 2381              		.thumb_func
 2383              	HAL_PWREx_EnableFlashPowerDown:
 2384              	.LFB865:
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Enable Flash Power Down.
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   This API allows to enable flash power down capabilities in low power
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         run and low power sleep modes.
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   This configuration is effective when both CPU have selected it.
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  PowerMode this can be a combination of following values:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 105


 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           @arg @ref PWR_FLASHPD_LPRUN
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           @arg @ref PWR_FLASHPD_LPSLEEP
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableFlashPowerDown(uint32_t PowerMode)
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2385              		.loc 3 619 1
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 8
 2388              		@ frame_needed = 1, uses_anonymous_args = 0
 2389              		@ link register save eliminated.
 2390 0000 80B4     		push	{r7}
 2391              	.LCFI205:
 2392              		.cfi_def_cfa_offset 4
 2393              		.cfi_offset 7, -4
 2394 0002 83B0     		sub	sp, sp, #12
 2395              	.LCFI206:
 2396              		.cfi_def_cfa_offset 16
 2397 0004 00AF     		add	r7, sp, #0
 2398              	.LCFI207:
 2399              		.cfi_def_cfa_register 7
 2400 0006 7860     		str	r0, [r7, #4]
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_FLASH_POWERDOWN(PowerMode));
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if ((PowerMode & PWR_FLASHPD_LPRUN) != 0U)
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Unlock bit FPDR */
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     WRITE_REG(PWR->C2CR1, PWR_FLASH_POWER_MODE_UNLOCK_CODE);
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set flash power down mode */
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->C2CR1, PowerMode);
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if ((PowerMode & PWR_FLASHPD_LPRUN) != 0U)
 2401              		.loc 3 632 18
 2402 0008 7B68     		ldr	r3, [r7, #4]
 2403 000a 03F01003 		and	r3, r3, #16
 2404              		.loc 3 632 6
 2405 000e 002B     		cmp	r3, #0
 2406 0010 03D0     		beq	.L152
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Unlock bit FPDR */
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     WRITE_REG(PWR->CR1, PWR_FLASH_POWER_MODE_UNLOCK_CODE);
 2407              		.loc 3 635 5
 2408 0012 074B     		ldr	r3, .L153
 2409 0014 4CF2B012 		movw	r2, #49584
 2410 0018 1A60     		str	r2, [r3]
 2411              	.L152:
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set flash power down mode */
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PowerMode);
 2412              		.loc 3 639 3
 2413 001a 054B     		ldr	r3, .L153
 2414 001c 1A68     		ldr	r2, [r3]
 2415 001e 0449     		ldr	r1, .L153
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 106


 2416 0020 7B68     		ldr	r3, [r7, #4]
 2417 0022 1343     		orrs	r3, r3, r2
 2418 0024 0B60     		str	r3, [r1]
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2419              		.loc 3 641 1
 2420 0026 00BF     		nop
 2421 0028 0C37     		adds	r7, r7, #12
 2422              	.LCFI208:
 2423              		.cfi_def_cfa_offset 4
 2424 002a BD46     		mov	sp, r7
 2425              	.LCFI209:
 2426              		.cfi_def_cfa_register 13
 2427              		@ sp needed
 2428 002c 80BC     		pop	{r7}
 2429              	.LCFI210:
 2430              		.cfi_restore 7
 2431              		.cfi_def_cfa_offset 0
 2432 002e 7047     		bx	lr
 2433              	.L154:
 2434              		.align	2
 2435              	.L153:
 2436 0030 00040058 		.word	1476396032
 2437              		.cfi_endproc
 2438              	.LFE865:
 2440              		.section	.text.HAL_PWREx_DisableFlashPowerDown,"ax",%progbits
 2441              		.align	1
 2442              		.global	HAL_PWREx_DisableFlashPowerDown
 2443              		.syntax unified
 2444              		.thumb
 2445              		.thumb_func
 2447              	HAL_PWREx_DisableFlashPowerDown:
 2448              	.LFB866:
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Disable Flash Power Down.
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   This API allows to disable flash power down capabilities in low power
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         run and low power sleep modes.
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   This configuration is effective when both CPU have selected it.
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  PowerMode this can be a combination of following values:
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           @arg @ref PWR_FLASHPD_LPRUN
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *           @arg @ref PWR_FLASHPD_LPSLEEP
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableFlashPowerDown(uint32_t PowerMode)
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2449              		.loc 3 654 1
 2450              		.cfi_startproc
 2451              		@ args = 0, pretend = 0, frame = 8
 2452              		@ frame_needed = 1, uses_anonymous_args = 0
 2453              		@ link register save eliminated.
 2454 0000 80B4     		push	{r7}
 2455              	.LCFI211:
 2456              		.cfi_def_cfa_offset 4
 2457              		.cfi_offset 7, -4
 2458 0002 83B0     		sub	sp, sp, #12
 2459              	.LCFI212:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 107


 2460              		.cfi_def_cfa_offset 16
 2461 0004 00AF     		add	r7, sp, #0
 2462              	.LCFI213:
 2463              		.cfi_def_cfa_register 7
 2464 0006 7860     		str	r0, [r7, #4]
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_FLASH_POWERDOWN(PowerMode));
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set flash power down mode */
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->C2CR1, PowerMode);
 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set flash power down mode */
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PowerMode);
 2465              		.loc 3 662 3
 2466 0008 054B     		ldr	r3, .L156
 2467 000a 1A68     		ldr	r2, [r3]
 2468 000c 7B68     		ldr	r3, [r7, #4]
 2469 000e DB43     		mvns	r3, r3
 2470 0010 0349     		ldr	r1, .L156
 2471 0012 1340     		ands	r3, r3, r2
 2472 0014 0B60     		str	r3, [r1]
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2473              		.loc 3 664 1
 2474 0016 00BF     		nop
 2475 0018 0C37     		adds	r7, r7, #12
 2476              	.LCFI214:
 2477              		.cfi_def_cfa_offset 4
 2478 001a BD46     		mov	sp, r7
 2479              	.LCFI215:
 2480              		.cfi_def_cfa_register 13
 2481              		@ sp needed
 2482 001c 80BC     		pop	{r7}
 2483              	.LCFI216:
 2484              		.cfi_restore 7
 2485              		.cfi_def_cfa_offset 0
 2486 001e 7047     		bx	lr
 2487              	.L157:
 2488              		.align	2
 2489              	.L156:
 2490 0020 00040058 		.word	1476396032
 2491              		.cfi_endproc
 2492              	.LFE866:
 2494              		.section	.text.HAL_PWREx_EnableWPVD,"ax",%progbits
 2495              		.align	1
 2496              		.global	HAL_PWREx_EnableWPVD
 2497              		.syntax unified
 2498              		.thumb
 2499              		.thumb_func
 2501              	HAL_PWREx_EnableWPVD:
 2502              	.LFB867:
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Enable wake-up power voltage detection
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Wake-up power voltage detection status can be checked
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         using flag @ref PWR_FLAG_WPVD.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 108


 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableWPVD(void)
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2503              		.loc 3 674 1
 2504              		.cfi_startproc
 2505              		@ args = 0, pretend = 0, frame = 0
 2506              		@ frame_needed = 1, uses_anonymous_args = 0
 2507 0000 80B5     		push	{r7, lr}
 2508              	.LCFI217:
 2509              		.cfi_def_cfa_offset 8
 2510              		.cfi_offset 7, -8
 2511              		.cfi_offset 14, -4
 2512 0002 00AF     		add	r7, sp, #0
 2513              	.LCFI218:
 2514              		.cfi_def_cfa_register 7
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_C2_PWR_EnableWPVD();
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_EnableWPVD();
 2515              		.loc 3 678 3
 2516 0004 FFF7FEFF 		bl	LL_PWR_EnableWPVD
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2517              		.loc 3 680 1
 2518 0008 00BF     		nop
 2519 000a 80BD     		pop	{r7, pc}
 2520              		.cfi_endproc
 2521              	.LFE867:
 2523              		.section	.text.HAL_PWREx_DisableWPVD,"ax",%progbits
 2524              		.align	1
 2525              		.global	HAL_PWREx_DisableWPVD
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2530              	HAL_PWREx_DisableWPVD:
 2531              	.LFB868:
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Disable wake-up power voltage detection
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableWPVD(void)
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2532              		.loc 3 687 1
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 0
 2535              		@ frame_needed = 1, uses_anonymous_args = 0
 2536 0000 80B5     		push	{r7, lr}
 2537              	.LCFI219:
 2538              		.cfi_def_cfa_offset 8
 2539              		.cfi_offset 7, -8
 2540              		.cfi_offset 14, -4
 2541 0002 00AF     		add	r7, sp, #0
 2542              	.LCFI220:
 2543              		.cfi_def_cfa_register 7
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 109


 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_C2_PWR_DisableWPVD();
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   LL_PWR_DisableWPVD();
 2544              		.loc 3 691 3
 2545 0004 FFF7FEFF 		bl	LL_PWR_DisableWPVD
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2546              		.loc 3 693 1
 2547 0008 00BF     		nop
 2548 000a 80BD     		pop	{r7, pc}
 2549              		.cfi_endproc
 2550              	.LFE868:
 2552              		.section	.text.HAL_PWREx_EnableBORPVD_ULP,"ax",%progbits
 2553              		.align	1
 2554              		.global	HAL_PWREx_EnableBORPVD_ULP
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2559              	HAL_PWREx_EnableBORPVD_ULP:
 2560              	.LFB869:
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Enable periodical sampling of supply voltage in Stop and Standby
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         modes for detecting condition of PDR and BOR reset.
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   Caution: When enabled, and if the supply voltage drops below
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         the minimum operating condition between two supply voltage samples,
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         the reset condition is missed and no reset is generated.
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableBORPVD_ULP(void)
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2561              		.loc 3 704 1
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 0
 2564              		@ frame_needed = 1, uses_anonymous_args = 0
 2565              		@ link register save eliminated.
 2566 0000 80B4     		push	{r7}
 2567              	.LCFI221:
 2568              		.cfi_def_cfa_offset 4
 2569              		.cfi_offset 7, -4
 2570 0002 00AF     		add	r7, sp, #0
 2571              	.LCFI222:
 2572              		.cfi_def_cfa_register 7
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_ULPEN);
 2573              		.loc 3 705 3
 2574 0004 044B     		ldr	r3, .L161
 2575 0006 9B68     		ldr	r3, [r3, #8]
 2576 0008 034A     		ldr	r2, .L161
 2577 000a 43F08003 		orr	r3, r3, #128
 2578 000e 9360     		str	r3, [r2, #8]
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2579              		.loc 3 706 1
 2580 0010 00BF     		nop
 2581 0012 BD46     		mov	sp, r7
 2582              	.LCFI223:
 2583              		.cfi_def_cfa_register 13
 2584              		@ sp needed
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 110


 2585 0014 80BC     		pop	{r7}
 2586              	.LCFI224:
 2587              		.cfi_restore 7
 2588              		.cfi_def_cfa_offset 0
 2589 0016 7047     		bx	lr
 2590              	.L162:
 2591              		.align	2
 2592              	.L161:
 2593 0018 00040058 		.word	1476396032
 2594              		.cfi_endproc
 2595              	.LFE869:
 2597              		.section	.text.HAL_PWREx_DisableBORPVD_ULP,"ax",%progbits
 2598              		.align	1
 2599              		.global	HAL_PWREx_DisableBORPVD_ULP
 2600              		.syntax unified
 2601              		.thumb
 2602              		.thumb_func
 2604              	HAL_PWREx_DisableBORPVD_ULP:
 2605              	.LFB870:
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Disable periodical sampling of supply voltage in Stop and Standby
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         modes for detecting condition of PDR and BOR reset.
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  All the other modes are not affected by this bit
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisableBORPVD_ULP(void)
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2606              		.loc 3 716 1
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 1, uses_anonymous_args = 0
 2610              		@ link register save eliminated.
 2611 0000 80B4     		push	{r7}
 2612              	.LCFI225:
 2613              		.cfi_def_cfa_offset 4
 2614              		.cfi_offset 7, -4
 2615 0002 00AF     		add	r7, sp, #0
 2616              	.LCFI226:
 2617              		.cfi_def_cfa_register 7
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_ULPEN);
 2618              		.loc 3 717 3
 2619 0004 044B     		ldr	r3, .L164
 2620 0006 9B68     		ldr	r3, [r3, #8]
 2621 0008 034A     		ldr	r2, .L164
 2622 000a 23F08003 		bic	r3, r3, #128
 2623 000e 9360     		str	r3, [r2, #8]
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2624              		.loc 3 718 1
 2625 0010 00BF     		nop
 2626 0012 BD46     		mov	sp, r7
 2627              	.LCFI227:
 2628              		.cfi_def_cfa_register 13
 2629              		@ sp needed
 2630 0014 80BC     		pop	{r7}
 2631              	.LCFI228:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 111


 2632              		.cfi_restore 7
 2633              		.cfi_def_cfa_offset 0
 2634 0016 7047     		bx	lr
 2635              	.L165:
 2636              		.align	2
 2637              	.L164:
 2638 0018 00040058 		.word	1476396032
 2639              		.cfi_endproc
 2640              	.LFE870:
 2642              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 2643              		.align	1
 2644              		.global	HAL_PWREx_EnablePVM3
 2645              		.syntax unified
 2646              		.thumb
 2647              		.thumb_func
 2649              	HAL_PWREx_EnablePVM3:
 2650              	.LFB871:
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2651              		.loc 3 727 1
 2652              		.cfi_startproc
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 1, uses_anonymous_args = 0
 2655              		@ link register save eliminated.
 2656 0000 80B4     		push	{r7}
 2657              	.LCFI229:
 2658              		.cfi_def_cfa_offset 4
 2659              		.cfi_offset 7, -4
 2660 0002 00AF     		add	r7, sp, #0
 2661              	.LCFI230:
 2662              		.cfi_def_cfa_register 7
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 2663              		.loc 3 728 3
 2664 0004 044B     		ldr	r3, .L167
 2665 0006 5B68     		ldr	r3, [r3, #4]
 2666 0008 034A     		ldr	r2, .L167
 2667 000a 43F04003 		orr	r3, r3, #64
 2668 000e 5360     		str	r3, [r2, #4]
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2669              		.loc 3 729 1
 2670 0010 00BF     		nop
 2671 0012 BD46     		mov	sp, r7
 2672              	.LCFI231:
 2673              		.cfi_def_cfa_register 13
 2674              		@ sp needed
 2675 0014 80BC     		pop	{r7}
 2676              	.LCFI232:
 2677              		.cfi_restore 7
 2678              		.cfi_def_cfa_offset 0
 2679 0016 7047     		bx	lr
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 112


 2680              	.L168:
 2681              		.align	2
 2682              	.L167:
 2683 0018 00040058 		.word	1476396032
 2684              		.cfi_endproc
 2685              	.LFE871:
 2687              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 2688              		.align	1
 2689              		.global	HAL_PWREx_DisablePVM3
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2694              	HAL_PWREx_DisablePVM3:
 2695              	.LFB872:
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2696              		.loc 3 736 1
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700              		@ link register save eliminated.
 2701 0000 80B4     		push	{r7}
 2702              	.LCFI233:
 2703              		.cfi_def_cfa_offset 4
 2704              		.cfi_offset 7, -4
 2705 0002 00AF     		add	r7, sp, #0
 2706              	.LCFI234:
 2707              		.cfi_def_cfa_register 7
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 2708              		.loc 3 737 3
 2709 0004 044B     		ldr	r3, .L170
 2710 0006 5B68     		ldr	r3, [r3, #4]
 2711 0008 034A     		ldr	r2, .L170
 2712 000a 23F04003 		bic	r3, r3, #64
 2713 000e 5360     		str	r3, [r2, #4]
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2714              		.loc 3 738 1
 2715 0010 00BF     		nop
 2716 0012 BD46     		mov	sp, r7
 2717              	.LCFI235:
 2718              		.cfi_def_cfa_register 13
 2719              		@ sp needed
 2720 0014 80BC     		pop	{r7}
 2721              	.LCFI236:
 2722              		.cfi_restore 7
 2723              		.cfi_def_cfa_offset 0
 2724 0016 7047     		bx	lr
 2725              	.L171:
 2726              		.align	2
 2727              	.L170:
 2728 0018 00040058 		.word	1476396032
 2729              		.cfi_endproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 113


 2730              	.LFE872:
 2732              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 2733              		.align	1
 2734              		.global	HAL_PWREx_ConfigPVM
 2735              		.syntax unified
 2736              		.thumb
 2737              		.thumb_func
 2739              	HAL_PWREx_ConfigPVM:
 2740              	.LFB873:
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param sConfigPVM pointer to a PWR_PVMTypeDef structure that contains the
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        PVM configuration information.
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *       called for each PVM used.
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL status
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2741              		.loc 3 753 1
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 16
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745 0000 80B5     		push	{r7, lr}
 2746              	.LCFI237:
 2747              		.cfi_def_cfa_offset 8
 2748              		.cfi_offset 7, -8
 2749              		.cfi_offset 14, -4
 2750 0002 84B0     		sub	sp, sp, #16
 2751              	.LCFI238:
 2752              		.cfi_def_cfa_offset 24
 2753 0004 00AF     		add	r7, sp, #0
 2754              	.LCFI239:
 2755              		.cfi_def_cfa_register 7
 2756 0006 7860     		str	r0, [r7, #4]
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2757              		.loc 3 754 21
 2758 0008 0023     		movs	r3, #0
 2759 000a FB73     		strb	r3, [r7, #15]
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Configure EXTI lines if so required:
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****      scan through PVMType to detect which PVMx is set and
 762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 2760              		.loc 3 763 21
 2761 000c 7B68     		ldr	r3, [r7, #4]
 2762 000e 1B68     		ldr	r3, [r3]
 2763              		.loc 3 763 3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 114


 2764 0010 402B     		cmp	r3, #64
 2765 0012 27D1     		bne	.L173
 764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     case PWR_PVM_3:
 766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 2766              		.loc 3 767 7
 2767 0014 0420     		movs	r0, #4
 2768 0016 FFF7FEFF 		bl	LL_EXTI_DisableEvent_32_63
 768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 2769              		.loc 3 768 7
 2770 001a 0420     		movs	r0, #4
 2771 001c FFF7FEFF 		bl	LL_EXTI_DisableIT_32_63
 769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 2772              		.loc 3 770 7
 2773 0020 0420     		movs	r0, #4
 2774 0022 FFF7FEFF 		bl	LL_EXTI_DisableRisingTrig_32_63
 771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 2775              		.loc 3 771 7
 2776 0026 0420     		movs	r0, #4
 2777 0028 FFF7FEFF 		bl	LL_EXTI_DisableFallingTrig_32_63
 772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       if ((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2778              		.loc 3 774 22
 2779 002c 7B68     		ldr	r3, [r7, #4]
 2780 002e 5B68     		ldr	r3, [r3, #4]
 2781              		.loc 3 774 29
 2782 0030 03F48033 		and	r3, r3, #65536
 2783              		.loc 3 774 10
 2784 0034 002B     		cmp	r3, #0
 2785 0036 02D0     		beq	.L174
 775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       {
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 2786              		.loc 3 776 9
 2787 0038 0420     		movs	r0, #4
 2788 003a FFF7FEFF 		bl	LL_EXTI_EnableIT_32_63
 2789              	.L174:
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       }
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       /* Configure the edge */
 780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       if ((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2790              		.loc 3 780 22
 2791 003e 7B68     		ldr	r3, [r7, #4]
 2792 0040 5B68     		ldr	r3, [r3, #4]
 2793              		.loc 3 780 29
 2794 0042 03F00103 		and	r3, r3, #1
 2795              		.loc 3 780 10
 2796 0046 002B     		cmp	r3, #0
 2797 0048 02D0     		beq	.L175
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       {
 782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 2798              		.loc 3 782 9
 2799 004a 0420     		movs	r0, #4
 2800 004c FFF7FEFF 		bl	LL_EXTI_EnableFallingTrig_32_63
 2801              	.L175:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 115


 783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       }
 784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       if ((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2802              		.loc 3 785 22
 2803 0050 7B68     		ldr	r3, [r7, #4]
 2804 0052 5B68     		ldr	r3, [r3, #4]
 2805              		.loc 3 785 29
 2806 0054 03F00203 		and	r3, r3, #2
 2807              		.loc 3 785 10
 2808 0058 002B     		cmp	r3, #0
 2809 005a 06D0     		beq	.L179
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       {
 787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 2810              		.loc 3 787 9
 2811 005c 0420     		movs	r0, #4
 2812 005e FFF7FEFF 		bl	LL_EXTI_EnableRisingTrig_32_63
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       }
 789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2813              		.loc 3 789 7
 2814 0062 02E0     		b	.L179
 2815              	.L173:
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     default:
 792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       status = HAL_ERROR;
 2816              		.loc 3 792 14
 2817 0064 0123     		movs	r3, #1
 2818 0066 FB73     		strb	r3, [r7, #15]
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****       break;
 2819              		.loc 3 793 7
 2820 0068 00E0     		b	.L177
 2821              	.L179:
 789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 2822              		.loc 3 789 7
 2823 006a 00BF     		nop
 2824              	.L177:
 794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return status;
 2825              		.loc 3 797 10
 2826 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2827              		.loc 3 798 1
 2828 006e 1846     		mov	r0, r3
 2829 0070 1037     		adds	r7, r7, #16
 2830              	.LCFI240:
 2831              		.cfi_def_cfa_offset 8
 2832 0072 BD46     		mov	sp, r7
 2833              	.LCFI241:
 2834              		.cfi_def_cfa_register 13
 2835              		@ sp needed
 2836 0074 80BD     		pop	{r7, pc}
 2837              		.cfi_endproc
 2838              	.LFE873:
 2840              		.section	.text.HAL_PWREx_SetRadioEOL,"ax",%progbits
 2841              		.align	1
 2842              		.global	HAL_PWREx_SetRadioEOL
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 116


 2843              		.syntax unified
 2844              		.thumb
 2845              		.thumb_func
 2847              	HAL_PWREx_SetRadioEOL:
 2848              	.LFB874:
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Set monitoring of supply voltage for radio operating level
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         (radio End Of Life), radio must be in active mode.
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  RadioEOL This parameter can be one of the following values:
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_EOL_ENABLE
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_RADIO_EOL_DISABLE
 806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_SetRadioEOL(uint32_t RadioEOL)
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2849              		.loc 3 809 1
 2850              		.cfi_startproc
 2851              		@ args = 0, pretend = 0, frame = 8
 2852              		@ frame_needed = 1, uses_anonymous_args = 0
 2853              		@ link register save eliminated.
 2854 0000 80B4     		push	{r7}
 2855              	.LCFI242:
 2856              		.cfi_def_cfa_offset 4
 2857              		.cfi_offset 7, -4
 2858 0002 83B0     		sub	sp, sp, #12
 2859              	.LCFI243:
 2860              		.cfi_def_cfa_offset 16
 2861 0004 00AF     		add	r7, sp, #0
 2862              	.LCFI244:
 2863              		.cfi_def_cfa_register 7
 2864 0006 7860     		str	r0, [r7, #4]
 810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR5, PWR_CR5_RFEOLEN, RadioEOL);
 2865              		.loc 3 810 3
 2866 0008 064B     		ldr	r3, .L181
 2867 000a DB69     		ldr	r3, [r3, #28]
 2868 000c 23F48042 		bic	r2, r3, #16384
 2869 0010 0449     		ldr	r1, .L181
 2870 0012 7B68     		ldr	r3, [r7, #4]
 2871 0014 1343     		orrs	r3, r3, r2
 2872 0016 CB61     		str	r3, [r1, #28]
 811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2873              		.loc 3 811 1
 2874 0018 00BF     		nop
 2875 001a 0C37     		adds	r7, r7, #12
 2876              	.LCFI245:
 2877              		.cfi_def_cfa_offset 4
 2878 001c BD46     		mov	sp, r7
 2879              	.LCFI246:
 2880              		.cfi_def_cfa_register 13
 2881              		@ sp needed
 2882 001e 80BC     		pop	{r7}
 2883              	.LCFI247:
 2884              		.cfi_restore 7
 2885              		.cfi_def_cfa_offset 0
 2886 0020 7047     		bx	lr
 2887              	.L182:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 117


 2888 0022 00BF     		.align	2
 2889              	.L181:
 2890 0024 00040058 		.word	1476396032
 2891              		.cfi_endproc
 2892              	.LFE874:
 2894              		.section	.text.HAL_PWREx_SMPS_SetMode,"ax",%progbits
 2895              		.align	1
 2896              		.global	HAL_PWREx_SMPS_SetMode
 2897              		.syntax unified
 2898              		.thumb
 2899              		.thumb_func
 2901              	HAL_PWREx_SMPS_SetMode:
 2902              	.LFB875:
 812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Set SMPS operating mode.
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   In case of a board without SMPS coil mounted, SMPS should not be activated.
 818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param  OperatingMode This parameter can be one of the following values:
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_SMPS_BYPASS
 820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_SMPS_STEP_DOWN
 821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_SMPS_SetMode(uint32_t OperatingMode)
 824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2903              		.loc 3 824 1
 2904              		.cfi_startproc
 2905              		@ args = 0, pretend = 0, frame = 8
 2906              		@ frame_needed = 1, uses_anonymous_args = 0
 2907              		@ link register save eliminated.
 2908 0000 80B4     		push	{r7}
 2909              	.LCFI248:
 2910              		.cfi_def_cfa_offset 4
 2911              		.cfi_offset 7, -4
 2912 0002 83B0     		sub	sp, sp, #12
 2913              	.LCFI249:
 2914              		.cfi_def_cfa_offset 16
 2915 0004 00AF     		add	r7, sp, #0
 2916              	.LCFI250:
 2917              		.cfi_def_cfa_register 7
 2918 0006 7860     		str	r0, [r7, #4]
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR5, PWR_CR5_SMPSEN, OperatingMode);
 2919              		.loc 3 825 3
 2920 0008 064B     		ldr	r3, .L184
 2921 000a DB69     		ldr	r3, [r3, #28]
 2922 000c 23F40042 		bic	r2, r3, #32768
 2923 0010 0449     		ldr	r1, .L184
 2924 0012 7B68     		ldr	r3, [r7, #4]
 2925 0014 1343     		orrs	r3, r3, r2
 2926 0016 CB61     		str	r3, [r1, #28]
 826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2927              		.loc 3 826 1
 2928 0018 00BF     		nop
 2929 001a 0C37     		adds	r7, r7, #12
 2930              	.LCFI251:
 2931              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 118


 2932 001c BD46     		mov	sp, r7
 2933              	.LCFI252:
 2934              		.cfi_def_cfa_register 13
 2935              		@ sp needed
 2936 001e 80BC     		pop	{r7}
 2937              	.LCFI253:
 2938              		.cfi_restore 7
 2939              		.cfi_def_cfa_offset 0
 2940 0020 7047     		bx	lr
 2941              	.L185:
 2942 0022 00BF     		.align	2
 2943              	.L184:
 2944 0024 00040058 		.word	1476396032
 2945              		.cfi_endproc
 2946              	.LFE875:
 2948              		.section	.text.HAL_PWREx_SMPS_GetEffectiveMode,"ax",%progbits
 2949              		.align	1
 2950              		.global	HAL_PWREx_SMPS_GetEffectiveMode
 2951              		.syntax unified
 2952              		.thumb
 2953              		.thumb_func
 2955              	HAL_PWREx_SMPS_GetEffectiveMode:
 2956              	.LFB876:
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief  Get SMPS effective operating mode
 830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   SMPS operating mode can be changed by hardware, therefore
 831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         requested operating mode can differ from effective low power mode.
 832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         - dependency SubGhz Radio IP: can switch SMPS on for radio activity.
 833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note   In case of a board without SMPS coil mounted, SMPS should not be activated
 834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         and this function is not relevant.
 835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval Returned value can be one of the following values:
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_SMPS_BYPASS
 837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         @arg @ref PWR_SMPS_STEP_DOWN
 838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** uint32_t HAL_PWREx_SMPS_GetEffectiveMode(void)
 840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 2957              		.loc 3 840 1
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 0
 2960              		@ frame_needed = 1, uses_anonymous_args = 0
 2961              		@ link register save eliminated.
 2962 0000 80B4     		push	{r7}
 2963              	.LCFI254:
 2964              		.cfi_def_cfa_offset 4
 2965              		.cfi_offset 7, -4
 2966 0002 00AF     		add	r7, sp, #0
 2967              	.LCFI255:
 2968              		.cfi_def_cfa_register 7
 841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Return a value corresponding to definition of literals                   */
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* PWR_SMPS_BYPASS or PWR_SMPS_STEP_DOWN.                                   */
 843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return (uint32_t)(READ_BIT(PWR->SR2, PWR_SR2_SMPSRDY) << (PWR_CR5_SMPSEN_Pos - PWR_SR2_SMPSRDY_Po
 2969              		.loc 3 843 21
 2970 0004 044B     		ldr	r3, .L188
 2971 0006 5B69     		ldr	r3, [r3, #20]
 2972              		.loc 3 843 10
 2973 0008 1B03     		lsls	r3, r3, #12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 119


 2974 000a 03F40043 		and	r3, r3, #32768
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 2975              		.loc 3 844 1
 2976 000e 1846     		mov	r0, r3
 2977 0010 BD46     		mov	sp, r7
 2978              	.LCFI256:
 2979              		.cfi_def_cfa_register 13
 2980              		@ sp needed
 2981 0012 80BC     		pop	{r7}
 2982              	.LCFI257:
 2983              		.cfi_restore 7
 2984              		.cfi_def_cfa_offset 0
 2985 0014 7047     		bx	lr
 2986              	.L189:
 2987 0016 00BF     		.align	2
 2988              	.L188:
 2989 0018 00040058 		.word	1476396032
 2990              		.cfi_endproc
 2991              	.LFE876:
 2993              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 2994              		.align	1
 2995              		.global	HAL_PWREx_EnableLowPowerRunMode
 2996              		.syntax unified
 2997              		.thumb
 2998              		.thumb_func
 3000              	HAL_PWREx_EnableLowPowerRunMode:
 3001              	.LFB877:
 845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
 851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Clock frequency must be reduced below 2 MHz.
 852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3002              		.loc 3 855 1
 3003              		.cfi_startproc
 3004              		@ args = 0, pretend = 0, frame = 0
 3005              		@ frame_needed = 1, uses_anonymous_args = 0
 3006              		@ link register save eliminated.
 3007 0000 80B4     		push	{r7}
 3008              	.LCFI258:
 3009              		.cfi_def_cfa_offset 4
 3010              		.cfi_offset 7, -4
 3011 0002 00AF     		add	r7, sp, #0
 3012              	.LCFI259:
 3013              		.cfi_def_cfa_register 7
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 3014              		.loc 3 857 3
 3015 0004 044B     		ldr	r3, .L191
 3016 0006 1B68     		ldr	r3, [r3]
 3017 0008 034A     		ldr	r2, .L191
 3018 000a 43F48043 		orr	r3, r3, #16384
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 120


 3019 000e 1360     		str	r3, [r2]
 858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3020              		.loc 3 858 1
 3021 0010 00BF     		nop
 3022 0012 BD46     		mov	sp, r7
 3023              	.LCFI260:
 3024              		.cfi_def_cfa_register 13
 3025              		@ sp needed
 3026 0014 80BC     		pop	{r7}
 3027              	.LCFI261:
 3028              		.cfi_restore 7
 3029              		.cfi_def_cfa_offset 0
 3030 0016 7047     		bx	lr
 3031              	.L192:
 3032              		.align	2
 3033              	.L191:
 3034 0018 00040058 		.word	1476396032
 3035              		.cfi_endproc
 3036              	.LFE877:
 3038              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 3039              		.align	1
 3040              		.global	HAL_PWREx_DisableLowPowerRunMode
 3041              		.syntax unified
 3042              		.thumb
 3043              		.thumb_func
 3045              	HAL_PWREx_DisableLowPowerRunMode:
 3046              	.LFB878:
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
 863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
 865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        increased above 2 MHz.
 866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval HAL Status
 867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3047              		.loc 3 869 1
 3048              		.cfi_startproc
 3049              		@ args = 0, pretend = 0, frame = 8
 3050              		@ frame_needed = 1, uses_anonymous_args = 0
 3051              		@ link register save eliminated.
 3052 0000 80B4     		push	{r7}
 3053              	.LCFI262:
 3054              		.cfi_def_cfa_offset 4
 3055              		.cfi_offset 7, -4
 3056 0002 83B0     		sub	sp, sp, #12
 3057              	.LCFI263:
 3058              		.cfi_def_cfa_offset 16
 3059 0004 00AF     		add	r7, sp, #0
 3060              	.LCFI264:
 3061              		.cfi_def_cfa_register 7
 870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Clear LPR bit */
 873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 121


 3062              		.loc 3 873 3
 3063 0006 164B     		ldr	r3, .L199
 3064 0008 1B68     		ldr	r3, [r3]
 3065 000a 154A     		ldr	r2, .L199
 3066 000c 23F48043 		bic	r3, r3, #16384
 3067 0010 1360     		str	r3, [r2]
 874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000UL);
 3068              		.loc 3 876 49
 3069 0012 144B     		ldr	r3, .L199+4
 3070 0014 1B68     		ldr	r3, [r3]
 3071 0016 3222     		movs	r2, #50
 3072 0018 02FB03F3 		mul	r3, r2, r3
 3073              		.loc 3 876 19
 3074 001c 124A     		ldr	r2, .L199+8
 3075 001e A2FB0323 		umull	r2, r3, r2, r3
 3076 0022 9B0C     		lsrs	r3, r3, #18
 3077 0024 7B60     		str	r3, [r7, #4]
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 3078              		.loc 3 877 9
 3079 0026 02E0     		b	.L194
 3080              	.L196:
 878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     wait_loop_index--;
 3081              		.loc 3 879 20
 3082 0028 7B68     		ldr	r3, [r7, #4]
 3083 002a 013B     		subs	r3, r3, #1
 3084 002c 7B60     		str	r3, [r7, #4]
 3085              	.L194:
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 3086              		.loc 3 877 11
 3087 002e 0C4B     		ldr	r3, .L199
 3088 0030 5B69     		ldr	r3, [r3, #20]
 3089 0032 03F40073 		and	r3, r3, #512
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 3090              		.loc 3 877 9
 3091 0036 B3F5007F 		cmp	r3, #512
 3092 003a 02D1     		bne	.L195
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 3093              		.loc 3 877 53 discriminator 1
 3094 003c 7B68     		ldr	r3, [r7, #4]
 3095 003e 002B     		cmp	r3, #0
 3096 0040 F2D1     		bne	.L196
 3097              	.L195:
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, (PWR_SR2_REGLPF)))
 3098              		.loc 3 881 7
 3099 0042 074B     		ldr	r3, .L199
 3100 0044 5B69     		ldr	r3, [r3, #20]
 3101 0046 03F40073 		and	r3, r3, #512
 3102              		.loc 3 881 6
 3103 004a B3F5007F 		cmp	r3, #512
 3104 004e 01D1     		bne	.L197
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 3105              		.loc 3 883 12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 122


 3106 0050 0323     		movs	r3, #3
 3107 0052 00E0     		b	.L198
 3108              	.L197:
 884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   return HAL_OK;
 3109              		.loc 3 886 10
 3110 0054 0023     		movs	r3, #0
 3111              	.L198:
 887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3112              		.loc 3 887 1
 3113 0056 1846     		mov	r0, r3
 3114 0058 0C37     		adds	r7, r7, #12
 3115              	.LCFI265:
 3116              		.cfi_def_cfa_offset 4
 3117 005a BD46     		mov	sp, r7
 3118              	.LCFI266:
 3119              		.cfi_def_cfa_register 13
 3120              		@ sp needed
 3121 005c 80BC     		pop	{r7}
 3122              	.LCFI267:
 3123              		.cfi_restore 7
 3124              		.cfi_def_cfa_offset 0
 3125 005e 7047     		bx	lr
 3126              	.L200:
 3127              		.align	2
 3128              	.L199:
 3129 0060 00040058 		.word	1476396032
 3130 0064 00000000 		.word	SystemCoreClock
 3131 0068 83DE1B43 		.word	1125899907
 3132              		.cfi_endproc
 3133              	.LFE878:
 3135              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 3136              		.align	1
 3137              		.global	HAL_PWREx_EnterSTOP0Mode
 3138              		.syntax unified
 3139              		.thumb
 3140              		.thumb_func
 3142              	HAL_PWREx_EnterSTOP0Mode:
 3143              	.LFB879:
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /****************************************************************************/
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
 894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
 895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
 896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        The BOR is available.
 902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
 903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 123


 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
 906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  According to system power policy, system entering in Stop mode
 908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is depending on other CPU power mode.
 909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
 916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3144              		.loc 3 916 1
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 8
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148              		@ link register save eliminated.
 3149 0000 80B4     		push	{r7}
 3150              	.LCFI268:
 3151              		.cfi_def_cfa_offset 4
 3152              		.cfi_offset 7, -4
 3153 0002 83B0     		sub	sp, sp, #12
 3154              	.LCFI269:
 3155              		.cfi_def_cfa_offset 16
 3156 0004 00AF     		add	r7, sp, #0
 3157              	.LCFI270:
 3158              		.cfi_def_cfa_register 7
 3159 0006 0346     		mov	r3, r0
 3160 0008 FB71     		strb	r3, [r7, #7]
 917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->C2CR1, PWR_C2CR1_LPMS, PWR_LOWPOWERMODE_STOP0);
 923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_LOWPOWERMODE_STOP0);
 3161              		.loc 3 926 3
 3162 000a 0F4B     		ldr	r3, .L204
 3163 000c 1B68     		ldr	r3, [r3]
 3164 000e 0E4A     		ldr	r2, .L204
 3165 0010 23F00703 		bic	r3, r3, #7
 3166 0014 1360     		str	r3, [r2]
 927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3167              		.loc 3 931 3
 3168 0016 0D4B     		ldr	r3, .L204+4
 3169 0018 1B69     		ldr	r3, [r3, #16]
 3170 001a 0C4A     		ldr	r2, .L204+4
 3171 001c 43F00403 		orr	r3, r3, #4
 3172 0020 1361     		str	r3, [r2, #16]
 932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 124


 933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (STOPEntry == PWR_STOPENTRY_WFI)
 3173              		.loc 3 934 6
 3174 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3175 0024 012B     		cmp	r3, #1
 3176 0026 01D1     		bne	.L202
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFI();
 3177              		.loc 3 937 5
 3178              		.syntax unified
 3179              	@ 937 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3180 0028 30BF     		wfi
 3181              	@ 0 "" 2
 3182              		.thumb
 3183              		.syntax unified
 3184 002a 02E0     		b	.L203
 3185              	.L202:
 938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   else
 940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Event */
 942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __SEV();
 3186              		.loc 3 942 5
 3187              		.syntax unified
 3188              	@ 942 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3189 002c 40BF     		sev
 3190              	@ 0 "" 2
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3191              		.loc 3 943 5
 3192              	@ 943 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3193 002e 20BF     		wfe
 3194              	@ 0 "" 2
 944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3195              		.loc 3 944 5
 3196              	@ 944 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3197 0030 20BF     		wfe
 3198              	@ 0 "" 2
 3199              		.thumb
 3200              		.syntax unified
 3201              	.L203:
 945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3202              		.loc 3 948 3
 3203 0032 064B     		ldr	r3, .L204+4
 3204 0034 1B69     		ldr	r3, [r3, #16]
 3205 0036 054A     		ldr	r2, .L204+4
 3206 0038 23F00403 		bic	r3, r3, #4
 3207 003c 1361     		str	r3, [r2, #16]
 949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3208              		.loc 3 949 1
 3209 003e 00BF     		nop
 3210 0040 0C37     		adds	r7, r7, #12
 3211              	.LCFI271:
 3212              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 125


 3213 0042 BD46     		mov	sp, r7
 3214              	.LCFI272:
 3215              		.cfi_def_cfa_register 13
 3216              		@ sp needed
 3217 0044 80BC     		pop	{r7}
 3218              	.LCFI273:
 3219              		.cfi_restore 7
 3220              		.cfi_def_cfa_offset 0
 3221 0046 7047     		bx	lr
 3222              	.L205:
 3223              		.align	2
 3224              	.L204:
 3225 0048 00040058 		.word	1476396032
 3226 004c 00ED00E0 		.word	-536810240
 3227              		.cfi_endproc
 3228              	.LFE879:
 3230              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 3231              		.align	1
 3232              		.global	HAL_PWREx_EnterSTOP1Mode
 3233              		.syntax unified
 3234              		.thumb
 3235              		.thumb_func
 3237              	HAL_PWREx_EnterSTOP1Mode:
 3238              	.LFB880:
 950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
 952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
 954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
 956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        The BOR is available.
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
 965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
 966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  According to system power policy, system entering in Stop mode
 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is depending on other CPU power mode.
 968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
 973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
 974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
 975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3239              		.loc 3 975 1
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 8
 3242              		@ frame_needed = 1, uses_anonymous_args = 0
 3243              		@ link register save eliminated.
 3244 0000 80B4     		push	{r7}
 3245              	.LCFI274:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 126


 3246              		.cfi_def_cfa_offset 4
 3247              		.cfi_offset 7, -4
 3248 0002 83B0     		sub	sp, sp, #12
 3249              	.LCFI275:
 3250              		.cfi_def_cfa_offset 16
 3251 0004 00AF     		add	r7, sp, #0
 3252              	.LCFI276:
 3253              		.cfi_def_cfa_register 7
 3254 0006 0346     		mov	r3, r0
 3255 0008 FB71     		strb	r3, [r7, #7]
 976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameters */
 977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
 980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
 981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->C2CR1, PWR_C2CR1_LPMS, PWR_LOWPOWERMODE_STOP1);
 982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
 983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_LOWPOWERMODE_STOP1);
 3256              		.loc 3 984 3
 3257 000a 104B     		ldr	r3, .L209
 3258 000c 1B68     		ldr	r3, [r3]
 3259 000e 23F00703 		bic	r3, r3, #7
 3260 0012 0E4A     		ldr	r2, .L209
 3261 0014 43F00103 		orr	r3, r3, #1
 3262 0018 1360     		str	r3, [r2]
 985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
 986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3263              		.loc 3 988 3
 3264 001a 0D4B     		ldr	r3, .L209+4
 3265 001c 1B69     		ldr	r3, [r3, #16]
 3266 001e 0C4A     		ldr	r2, .L209+4
 3267 0020 43F00403 		orr	r3, r3, #4
 3268 0024 1361     		str	r3, [r2, #16]
 989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (STOPEntry == PWR_STOPENTRY_WFI)
 3269              		.loc 3 991 6
 3270 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3271 0028 012B     		cmp	r3, #1
 3272 002a 01D1     		bne	.L207
 992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFI();
 3273              		.loc 3 994 5
 3274              		.syntax unified
 3275              	@ 994 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3276 002c 30BF     		wfi
 3277              	@ 0 "" 2
 3278              		.thumb
 3279              		.syntax unified
 3280 002e 02E0     		b	.L208
 3281              	.L207:
 995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
 996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   else
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 127


 997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
 998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Event */
 999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __SEV();
 3282              		.loc 3 999 5
 3283              		.syntax unified
 3284              	@ 999 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3285 0030 40BF     		sev
 3286              	@ 0 "" 2
1000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3287              		.loc 3 1000 5
 3288              	@ 1000 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3289 0032 20BF     		wfe
 3290              	@ 0 "" 2
1001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3291              		.loc 3 1001 5
 3292              	@ 1001 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3293 0034 20BF     		wfe
 3294              	@ 0 "" 2
 3295              		.thumb
 3296              		.syntax unified
 3297              	.L208:
1002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
1003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3298              		.loc 3 1005 3
 3299 0036 064B     		ldr	r3, .L209+4
 3300 0038 1B69     		ldr	r3, [r3, #16]
 3301 003a 054A     		ldr	r2, .L209+4
 3302 003c 23F00403 		bic	r3, r3, #4
 3303 0040 1361     		str	r3, [r2, #16]
1006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3304              		.loc 3 1006 1
 3305 0042 00BF     		nop
 3306 0044 0C37     		adds	r7, r7, #12
 3307              	.LCFI277:
 3308              		.cfi_def_cfa_offset 4
 3309 0046 BD46     		mov	sp, r7
 3310              	.LCFI278:
 3311              		.cfi_def_cfa_register 13
 3312              		@ sp needed
 3313 0048 80BC     		pop	{r7}
 3314              	.LCFI279:
 3315              		.cfi_restore 7
 3316              		.cfi_def_cfa_offset 0
 3317 004a 7047     		bx	lr
 3318              	.L210:
 3319              		.align	2
 3320              	.L209:
 3321 004c 00040058 		.word	1476396032
 3322 0050 00ED00E0 		.word	-536810240
 3323              		.cfi_endproc
 3324              	.LFE880:
 3326              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 3327              		.align	1
 3328              		.global	HAL_PWREx_EnterSTOP2Mode
 3329              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 128


 3330              		.thumb
 3331              		.thumb_func
 3333              	HAL_PWREx_EnterSTOP2Mode:
 3334              	.LFB881:
1007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
1010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
1011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, only low power voltage regulator is ON.
1012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
1013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI,
1014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability
1015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
1016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
1017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
1018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        The BOR is available.
1020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
1021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.
1022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
1023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  According to system power policy, system entering in Stop mode
1026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is depending on other CPU power mode.
1027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
1032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
1033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
1034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3335              		.loc 3 1034 1
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 8
 3338              		@ frame_needed = 1, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
 3340 0000 80B4     		push	{r7}
 3341              	.LCFI280:
 3342              		.cfi_def_cfa_offset 4
 3343              		.cfi_offset 7, -4
 3344 0002 83B0     		sub	sp, sp, #12
 3345              	.LCFI281:
 3346              		.cfi_def_cfa_offset 16
 3347 0004 00AF     		add	r7, sp, #0
 3348              	.LCFI282:
 3349              		.cfi_def_cfa_register 7
 3350 0006 0346     		mov	r3, r0
 3351 0008 FB71     		strb	r3, [r7, #7]
1035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check the parameter */
1036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
1039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
1040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->C2CR1, PWR_C2CR1_LPMS, PWR_LOWPOWERMODE_STOP2);
1041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
1042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 129


1043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_LOWPOWERMODE_STOP2);
 3352              		.loc 3 1043 3
 3353 000a 104B     		ldr	r3, .L214
 3354 000c 1B68     		ldr	r3, [r3]
 3355 000e 23F00703 		bic	r3, r3, #7
 3356 0012 0E4A     		ldr	r2, .L214
 3357 0014 43F00203 		orr	r3, r3, #2
 3358 0018 1360     		str	r3, [r2]
1044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
1045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3359              		.loc 3 1047 3
 3360 001a 0D4B     		ldr	r3, .L214+4
 3361 001c 1B69     		ldr	r3, [r3, #16]
 3362 001e 0C4A     		ldr	r2, .L214+4
 3363 0020 43F00403 		orr	r3, r3, #4
 3364 0024 1361     		str	r3, [r2, #16]
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (STOPEntry == PWR_STOPENTRY_WFI)
 3365              		.loc 3 1050 6
 3366 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3367 0028 012B     		cmp	r3, #1
 3368 002a 01D1     		bne	.L212
1051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
1052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFI();
 3369              		.loc 3 1053 5
 3370              		.syntax unified
 3371              	@ 1053 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3372 002c 30BF     		wfi
 3373              	@ 0 "" 2
 3374              		.thumb
 3375              		.syntax unified
 3376 002e 02E0     		b	.L213
 3377              	.L212:
1054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
1055:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   else
1056:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
1057:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Request Wait For Event */
1058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __SEV();
 3378              		.loc 3 1058 5
 3379              		.syntax unified
 3380              	@ 1058 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3381 0030 40BF     		sev
 3382              	@ 0 "" 2
1059:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3383              		.loc 3 1059 5
 3384              	@ 1059 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3385 0032 20BF     		wfe
 3386              	@ 0 "" 2
1060:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __WFE();
 3387              		.loc 3 1060 5
 3388              	@ 1060 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3389 0034 20BF     		wfe
 3390              	@ 0 "" 2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 130


 3391              		.thumb
 3392              		.syntax unified
 3393              	.L213:
1061:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
1062:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1063:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1064:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3394              		.loc 3 1064 3
 3395 0036 064B     		ldr	r3, .L214+4
 3396 0038 1B69     		ldr	r3, [r3, #16]
 3397 003a 054A     		ldr	r2, .L214+4
 3398 003c 23F00403 		bic	r3, r3, #4
 3399 0040 1361     		str	r3, [r2, #16]
1065:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3400              		.loc 3 1065 1
 3401 0042 00BF     		nop
 3402 0044 0C37     		adds	r7, r7, #12
 3403              	.LCFI283:
 3404              		.cfi_def_cfa_offset 4
 3405 0046 BD46     		mov	sp, r7
 3406              	.LCFI284:
 3407              		.cfi_def_cfa_register 13
 3408              		@ sp needed
 3409 0048 80BC     		pop	{r7}
 3410              	.LCFI285:
 3411              		.cfi_restore 7
 3412              		.cfi_def_cfa_offset 0
 3413 004a 7047     		bx	lr
 3414              	.L215:
 3415              		.align	2
 3416              	.L214:
 3417 004c 00040058 		.word	1476396032
 3418 0050 00ED00E0 		.word	-536810240
 3419              		.cfi_endproc
 3420              	.LFE881:
 3422              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 3423              		.align	1
 3424              		.global	HAL_PWREx_EnterSHUTDOWNMode
 3425              		.syntax unified
 3426              		.thumb
 3427              		.thumb_func
 3429              	HAL_PWREx_EnterSHUTDOWNMode:
 3430              	.LFB882:
1066:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
1068:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
1069:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
1070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
1071:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
1072:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        The BOR is not available.
1073:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1074:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note  According to system power policy, system entering in Shutdown mode
1075:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   *        is depending on other CPU power mode.
1076:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
1077:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
1078:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1079:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 131


 3431              		.loc 3 1079 1
 3432              		.cfi_startproc
 3433              		@ args = 0, pretend = 0, frame = 0
 3434              		@ frame_needed = 1, uses_anonymous_args = 0
 3435              		@ link register save eliminated.
 3436 0000 80B4     		push	{r7}
 3437              	.LCFI286:
 3438              		.cfi_def_cfa_offset 4
 3439              		.cfi_offset 7, -4
 3440 0002 00AF     		add	r7, sp, #0
 3441              	.LCFI287:
 3442              		.cfi_def_cfa_register 7
1080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #ifdef CORE_CM0PLUS
1081:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1082:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->C2CR1, PWR_C2CR1_LPMS, PWR_LOWPOWERMODE_SHUTDOWN);
1083:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #else
1084:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_LOWPOWERMODE_SHUTDOWN);
 3443              		.loc 3 1085 3
 3444 0004 084B     		ldr	r3, .L217
 3445 0006 1B68     		ldr	r3, [r3]
 3446 0008 074A     		ldr	r2, .L217
 3447 000a 43F00703 		orr	r3, r3, #7
 3448 000e 1360     		str	r3, [r2]
1086:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
1087:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1088:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 3449              		.loc 3 1089 3
 3450 0010 064B     		ldr	r3, .L217+4
 3451 0012 1B69     		ldr	r3, [r3, #16]
 3452 0014 054A     		ldr	r2, .L217+4
 3453 0016 43F00403 		orr	r3, r3, #4
 3454 001a 1361     		str	r3, [r2, #16]
1090:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1091:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* This option is used to ensure that store operations are completed */
1092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1093:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   __force_stores();
1094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** #endif
1095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1096:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   __WFI();
 3455              		.loc 3 1097 3
 3456              		.syntax unified
 3457              	@ 1097 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c" 1
 3458 001c 30BF     		wfi
 3459              	@ 0 "" 2
1098:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Note: After this request to enter in Shutdown mode, at wake-up, program
1100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****            execution depends on system low-power mode:
1101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****            - If system was in Shutdown mode (other CPU in Shutdown),
1102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****              then at wake-up program restarts at reset state
1103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****            - If system was in Run or Stop mode (other CPU in Run, Sleep, Stop),
1104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****              then at wake-up program continues from this point
1105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
1106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3460              		.loc 3 1106 1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 132


 3461              		.thumb
 3462              		.syntax unified
 3463 001e 00BF     		nop
 3464 0020 BD46     		mov	sp, r7
 3465              	.LCFI288:
 3466              		.cfi_def_cfa_register 13
 3467              		@ sp needed
 3468 0022 80BC     		pop	{r7}
 3469              	.LCFI289:
 3470              		.cfi_restore 7
 3471              		.cfi_def_cfa_offset 0
 3472 0024 7047     		bx	lr
 3473              	.L218:
 3474 0026 00BF     		.align	2
 3475              	.L217:
 3476 0028 00040058 		.word	1476396032
 3477 002c 00ED00E0 		.word	-536810240
 3478              		.cfi_endproc
 3479              	.LFE882:
 3481              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 3482              		.align	1
 3483              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 3484              		.syntax unified
 3485              		.thumb
 3486              		.thumb_func
 3488              	HAL_PWREx_PVD_PVM_IRQHandler:
 3489              	.LFB883:
1107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
1109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
1112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
1113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3490              		.loc 3 1114 1
 3491              		.cfi_startproc
 3492              		@ args = 0, pretend = 0, frame = 0
 3493              		@ frame_needed = 1, uses_anonymous_args = 0
 3494 0000 80B5     		push	{r7, lr}
 3495              	.LCFI290:
 3496              		.cfi_def_cfa_offset 8
 3497              		.cfi_offset 7, -8
 3498              		.cfi_offset 14, -4
 3499 0002 00AF     		add	r7, sp, #0
 3500              	.LCFI291:
 3501              		.cfi_def_cfa_register 7
1115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (__HAL_PWR_PVD_EXTI_GET_FLAG() != 0UL)
 3502              		.loc 3 1116 7
 3503 0004 4FF48030 		mov	r0, #65536
 3504 0008 FFF7FEFF 		bl	LL_EXTI_ReadFlag_0_31
 3505 000c 0346     		mov	r3, r0
 3506              		.loc 3 1116 6
 3507 000e 002B     		cmp	r3, #0
 3508 0010 05D0     		beq	.L220
1117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 133


1118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 3509              		.loc 3 1119 5
 3510 0012 4FF48030 		mov	r0, #65536
 3511 0016 FFF7FEFF 		bl	LL_EXTI_ClearFlag_0_31
1120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 3512              		.loc 3 1122 5
 3513 001a FFF7FEFF 		bl	HAL_PWR_PVDCallback
 3514              	.L220:
1123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
1124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   if (__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0UL)
 3515              		.loc 3 1125 7
 3516 001e 0420     		movs	r0, #4
 3517 0020 FFF7FEFF 		bl	LL_EXTI_ReadFlag_32_63
 3518 0024 0346     		mov	r3, r0
 3519              		.loc 3 1125 6
 3520 0026 002B     		cmp	r3, #0
 3521 0028 04D0     		beq	.L222
1126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   {
1127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
 3522              		.loc 3 1128 5
 3523 002a 0420     		movs	r0, #4
 3524 002c FFF7FEFF 		bl	LL_EXTI_ClearFlag_32_63
1129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
 3525              		.loc 3 1131 5
 3526 0030 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
 3527              	.L222:
1132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   }
1133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3528              		.loc 3 1133 1
 3529 0034 00BF     		nop
 3530 0036 80BD     		pop	{r7, pc}
 3531              		.cfi_endproc
 3532              	.LFE883:
 3534              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 3535              		.align	1
 3536              		.weak	HAL_PWREx_PVM3Callback
 3537              		.syntax unified
 3538              		.thumb
 3539              		.thumb_func
 3541              	HAL_PWREx_PVM3Callback:
 3542              	.LFB884:
1134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** 
1135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** /**
1136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   * @retval None
1138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   */
1139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** {
 3543              		.loc 3 1140 1
 3544              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 134


 3545              		@ args = 0, pretend = 0, frame = 0
 3546              		@ frame_needed = 1, uses_anonymous_args = 0
 3547              		@ link register save eliminated.
 3548 0000 80B4     		push	{r7}
 3549              	.LCFI292:
 3550              		.cfi_def_cfa_offset 4
 3551              		.cfi_offset 7, -4
 3552 0002 00AF     		add	r7, sp, #0
 3553              	.LCFI293:
 3554              		.cfi_def_cfa_register 7
1141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c ****    */
1144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_pwr_ex.c **** }
 3555              		.loc 3 1144 1
 3556 0004 00BF     		nop
 3557 0006 BD46     		mov	sp, r7
 3558              	.LCFI294:
 3559              		.cfi_def_cfa_register 13
 3560              		@ sp needed
 3561 0008 80BC     		pop	{r7}
 3562              	.LCFI295:
 3563              		.cfi_restore 7
 3564              		.cfi_def_cfa_offset 0
 3565 000a 7047     		bx	lr
 3566              		.cfi_endproc
 3567              	.LFE884:
 3569              		.text
 3570              	.Letext0:
 3571              		.file 4 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 3572              		.file 5 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 3573              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 3574              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wl55xx.h"
 3575              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 3576              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_pwr_ex.h"
 3577              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 3578              		.file 11 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/system_stm32wlxx.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 135


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_pwr_ex.c
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:18     .rodata.CHANNEL_OFFSET_TAB:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:21     .rodata.CHANNEL_OFFSET_TAB:00000000 CHANNEL_OFFSET_TAB
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:24     .text.LL_PWR_EnableSRAM2Retention:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:29     .text.LL_PWR_EnableSRAM2Retention:00000000 LL_PWR_EnableSRAM2Retention
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:64     .text.LL_PWR_EnableSRAM2Retention:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:69     .text.LL_PWR_DisableSRAM2Retention:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:74     .text.LL_PWR_DisableSRAM2Retention:00000000 LL_PWR_DisableSRAM2Retention
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:108    .text.LL_PWR_DisableSRAM2Retention:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:113    .text.LL_PWR_EnableWPVD:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:118    .text.LL_PWR_EnableWPVD:00000000 LL_PWR_EnableWPVD
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:152    .text.LL_PWR_EnableWPVD:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:157    .text.LL_PWR_DisableWPVD:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:162    .text.LL_PWR_DisableWPVD:00000000 LL_PWR_DisableWPVD
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:196    .text.LL_PWR_DisableWPVD:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:201    .text.LL_PWR_SetRadioBusyPolarity:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:206    .text.LL_PWR_SetRadioBusyPolarity:00000000 LL_PWR_SetRadioBusyPolarity
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:249    .text.LL_PWR_SetRadioBusyPolarity:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:254    .text.LL_PWR_SetRadioBusyTrigger:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:259    .text.LL_PWR_SetRadioBusyTrigger:00000000 LL_PWR_SetRadioBusyTrigger
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:302    .text.LL_PWR_SetRadioBusyTrigger:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:307    .text.LL_PWR_SetRadioIRQTrigger:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:312    .text.LL_PWR_SetRadioIRQTrigger:00000000 LL_PWR_SetRadioIRQTrigger
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:355    .text.LL_PWR_SetRadioIRQTrigger:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:360    .text.LL_PWR_EnableBootC2:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:365    .text.LL_PWR_EnableBootC2:00000000 LL_PWR_EnableBootC2
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:399    .text.LL_PWR_EnableBootC2:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:404    .text.LL_PWR_DisableBootC2:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:409    .text.LL_PWR_DisableBootC2:00000000 LL_PWR_DisableBootC2
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:443    .text.LL_PWR_DisableBootC2:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:448    .text.LL_EXTI_EnableIT_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:453    .text.LL_EXTI_EnableIT_32_63:00000000 LL_EXTI_EnableIT_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:496    .text.LL_EXTI_EnableIT_32_63:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:501    .text.LL_EXTI_DisableIT_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:506    .text.LL_EXTI_DisableIT_32_63:00000000 LL_EXTI_DisableIT_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:549    .text.LL_EXTI_DisableIT_32_63:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:554    .text.LL_EXTI_DisableEvent_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:559    .text.LL_EXTI_DisableEvent_32_63:00000000 LL_EXTI_DisableEvent_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:602    .text.LL_EXTI_DisableEvent_32_63:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:607    .text.LL_EXTI_EnableRisingTrig_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:612    .text.LL_EXTI_EnableRisingTrig_32_63:00000000 LL_EXTI_EnableRisingTrig_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:654    .text.LL_EXTI_EnableRisingTrig_32_63:00000020 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:659    .text.LL_EXTI_DisableRisingTrig_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:664    .text.LL_EXTI_DisableRisingTrig_32_63:00000000 LL_EXTI_DisableRisingTrig_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:707    .text.LL_EXTI_DisableRisingTrig_32_63:00000020 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:712    .text.LL_EXTI_EnableFallingTrig_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:717    .text.LL_EXTI_EnableFallingTrig_32_63:00000000 LL_EXTI_EnableFallingTrig_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:759    .text.LL_EXTI_EnableFallingTrig_32_63:00000020 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:764    .text.LL_EXTI_DisableFallingTrig_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:769    .text.LL_EXTI_DisableFallingTrig_32_63:00000000 LL_EXTI_DisableFallingTrig_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:812    .text.LL_EXTI_DisableFallingTrig_32_63:00000020 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:817    .text.LL_EXTI_ReadFlag_0_31:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:822    .text.LL_EXTI_ReadFlag_0_31:00000000 LL_EXTI_ReadFlag_0_31
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:863    .text.LL_EXTI_ReadFlag_0_31:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:868    .text.LL_EXTI_ReadFlag_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:873    .text.LL_EXTI_ReadFlag_32_63:00000000 LL_EXTI_ReadFlag_32_63
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 136


C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:914    .text.LL_EXTI_ReadFlag_32_63:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:919    .text.LL_EXTI_ClearFlag_0_31:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:924    .text.LL_EXTI_ClearFlag_0_31:00000000 LL_EXTI_ClearFlag_0_31
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:963    .text.LL_EXTI_ClearFlag_0_31:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:968    .text.LL_EXTI_ClearFlag_32_63:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:973    .text.LL_EXTI_ClearFlag_32_63:00000000 LL_EXTI_ClearFlag_32_63
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1012   .text.LL_EXTI_ClearFlag_32_63:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1017   .text.HAL_PWREx_GetVoltageRange:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1023   .text.HAL_PWREx_GetVoltageRange:00000000 HAL_PWREx_GetVoltageRange
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1057   .text.HAL_PWREx_GetVoltageRange:00000014 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1062   .text.HAL_PWREx_ControlVoltageScaling:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1068   .text.HAL_PWREx_ControlVoltageScaling:00000000 HAL_PWREx_ControlVoltageScaling
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1180   .text.HAL_PWREx_ControlVoltageScaling:0000009c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1187   .text.HAL_PWREx_EnableBatteryCharging:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1193   .text.HAL_PWREx_EnableBatteryCharging:00000000 HAL_PWREx_EnableBatteryCharging
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1242   .text.HAL_PWREx_EnableBatteryCharging:00000030 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1247   .text.HAL_PWREx_DisableBatteryCharging:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1253   .text.HAL_PWREx_DisableBatteryCharging:00000000 HAL_PWREx_DisableBatteryCharging
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1287   .text.HAL_PWREx_DisableBatteryCharging:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1292   .text.HAL_PWREx_EnableInternalWakeUpLine:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1298   .text.HAL_PWREx_EnableInternalWakeUpLine:00000000 HAL_PWREx_EnableInternalWakeUpLine
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1332   .text.HAL_PWREx_EnableInternalWakeUpLine:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1337   .text.HAL_PWREx_DisableInternalWakeUpLine:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1343   .text.HAL_PWREx_DisableInternalWakeUpLine:00000000 HAL_PWREx_DisableInternalWakeUpLine
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1377   .text.HAL_PWREx_DisableInternalWakeUpLine:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1382   .text.HAL_PWREx_SetRadioBusyPolarity:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1388   .text.HAL_PWREx_SetRadioBusyPolarity:00000000 HAL_PWREx_SetRadioBusyPolarity
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1423   .text.HAL_PWREx_SetRadioBusyTrigger:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1429   .text.HAL_PWREx_SetRadioBusyTrigger:00000000 HAL_PWREx_SetRadioBusyTrigger
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1464   .text.HAL_PWREx_SetRadioIRQTrigger:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1470   .text.HAL_PWREx_SetRadioIRQTrigger:00000000 HAL_PWREx_SetRadioIRQTrigger
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1505   .text.HAL_PWREx_EnableHOLDC2IT:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1511   .text.HAL_PWREx_EnableHOLDC2IT:00000000 HAL_PWREx_EnableHOLDC2IT
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1545   .text.HAL_PWREx_EnableHOLDC2IT:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1550   .text.HAL_PWREx_DisableHOLDC2IT:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1556   .text.HAL_PWREx_DisableHOLDC2IT:00000000 HAL_PWREx_DisableHOLDC2IT
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1590   .text.HAL_PWREx_DisableHOLDC2IT:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1595   .text.HAL_PWREx_EnableGPIOPullUp:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1601   .text.HAL_PWREx_EnableGPIOPullUp:00000000 HAL_PWREx_EnableGPIOPullUp
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1631   .text.HAL_PWREx_EnableGPIOPullUp:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1639   .text.HAL_PWREx_EnableGPIOPullUp:0000003c $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1744   .text.HAL_PWREx_EnableGPIOPullUp:000000d4 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1749   .text.HAL_PWREx_DisableGPIOPullUp:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1755   .text.HAL_PWREx_DisableGPIOPullUp:00000000 HAL_PWREx_DisableGPIOPullUp
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1785   .text.HAL_PWREx_DisableGPIOPullUp:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1793   .text.HAL_PWREx_DisableGPIOPullUp:0000003c $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1867   .text.HAL_PWREx_DisableGPIOPullUp:00000098 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1872   .text.HAL_PWREx_EnableGPIOPullDown:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1878   .text.HAL_PWREx_EnableGPIOPullDown:00000000 HAL_PWREx_EnableGPIOPullDown
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1908   .text.HAL_PWREx_EnableGPIOPullDown:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:1916   .text.HAL_PWREx_EnableGPIOPullDown:0000003c $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2021   .text.HAL_PWREx_EnableGPIOPullDown:000000d4 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2026   .text.HAL_PWREx_DisableGPIOPullDown:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2032   .text.HAL_PWREx_DisableGPIOPullDown:00000000 HAL_PWREx_DisableGPIOPullDown
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2062   .text.HAL_PWREx_DisableGPIOPullDown:0000001c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2070   .text.HAL_PWREx_DisableGPIOPullDown:0000003c $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2144   .text.HAL_PWREx_DisableGPIOPullDown:00000098 $d
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 137


C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2149   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2155   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000000 HAL_PWREx_EnablePullUpPullDownConfig
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2189   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2194   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2200   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000000 HAL_PWREx_DisablePullUpPullDownConfig
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2234   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2239   .text.HAL_PWREx_HoldCore:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2245   .text.HAL_PWREx_HoldCore:00000000 HAL_PWREx_HoldCore
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2279   .text.HAL_PWREx_ReleaseCore:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2285   .text.HAL_PWREx_ReleaseCore:00000000 HAL_PWREx_ReleaseCore
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2319   .text.HAL_PWREx_EnableSRAMRetention:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2325   .text.HAL_PWREx_EnableSRAMRetention:00000000 HAL_PWREx_EnableSRAMRetention
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2348   .text.HAL_PWREx_DisableSRAMRetention:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2354   .text.HAL_PWREx_DisableSRAMRetention:00000000 HAL_PWREx_DisableSRAMRetention
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2377   .text.HAL_PWREx_EnableFlashPowerDown:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2383   .text.HAL_PWREx_EnableFlashPowerDown:00000000 HAL_PWREx_EnableFlashPowerDown
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2436   .text.HAL_PWREx_EnableFlashPowerDown:00000030 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2441   .text.HAL_PWREx_DisableFlashPowerDown:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2447   .text.HAL_PWREx_DisableFlashPowerDown:00000000 HAL_PWREx_DisableFlashPowerDown
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2490   .text.HAL_PWREx_DisableFlashPowerDown:00000020 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2495   .text.HAL_PWREx_EnableWPVD:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2501   .text.HAL_PWREx_EnableWPVD:00000000 HAL_PWREx_EnableWPVD
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2524   .text.HAL_PWREx_DisableWPVD:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2530   .text.HAL_PWREx_DisableWPVD:00000000 HAL_PWREx_DisableWPVD
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2553   .text.HAL_PWREx_EnableBORPVD_ULP:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2559   .text.HAL_PWREx_EnableBORPVD_ULP:00000000 HAL_PWREx_EnableBORPVD_ULP
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2593   .text.HAL_PWREx_EnableBORPVD_ULP:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2598   .text.HAL_PWREx_DisableBORPVD_ULP:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2604   .text.HAL_PWREx_DisableBORPVD_ULP:00000000 HAL_PWREx_DisableBORPVD_ULP
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2638   .text.HAL_PWREx_DisableBORPVD_ULP:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2643   .text.HAL_PWREx_EnablePVM3:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2649   .text.HAL_PWREx_EnablePVM3:00000000 HAL_PWREx_EnablePVM3
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2683   .text.HAL_PWREx_EnablePVM3:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2688   .text.HAL_PWREx_DisablePVM3:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2694   .text.HAL_PWREx_DisablePVM3:00000000 HAL_PWREx_DisablePVM3
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2728   .text.HAL_PWREx_DisablePVM3:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2733   .text.HAL_PWREx_ConfigPVM:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2739   .text.HAL_PWREx_ConfigPVM:00000000 HAL_PWREx_ConfigPVM
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2841   .text.HAL_PWREx_SetRadioEOL:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2847   .text.HAL_PWREx_SetRadioEOL:00000000 HAL_PWREx_SetRadioEOL
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2890   .text.HAL_PWREx_SetRadioEOL:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2895   .text.HAL_PWREx_SMPS_SetMode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2901   .text.HAL_PWREx_SMPS_SetMode:00000000 HAL_PWREx_SMPS_SetMode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2944   .text.HAL_PWREx_SMPS_SetMode:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2949   .text.HAL_PWREx_SMPS_GetEffectiveMode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2955   .text.HAL_PWREx_SMPS_GetEffectiveMode:00000000 HAL_PWREx_SMPS_GetEffectiveMode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2989   .text.HAL_PWREx_SMPS_GetEffectiveMode:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:2994   .text.HAL_PWREx_EnableLowPowerRunMode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3000   .text.HAL_PWREx_EnableLowPowerRunMode:00000000 HAL_PWREx_EnableLowPowerRunMode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3034   .text.HAL_PWREx_EnableLowPowerRunMode:00000018 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3039   .text.HAL_PWREx_DisableLowPowerRunMode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3045   .text.HAL_PWREx_DisableLowPowerRunMode:00000000 HAL_PWREx_DisableLowPowerRunMode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3129   .text.HAL_PWREx_DisableLowPowerRunMode:00000060 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3136   .text.HAL_PWREx_EnterSTOP0Mode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3142   .text.HAL_PWREx_EnterSTOP0Mode:00000000 HAL_PWREx_EnterSTOP0Mode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3225   .text.HAL_PWREx_EnterSTOP0Mode:00000048 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3231   .text.HAL_PWREx_EnterSTOP1Mode:00000000 $t
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s 			page 138


C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3237   .text.HAL_PWREx_EnterSTOP1Mode:00000000 HAL_PWREx_EnterSTOP1Mode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3321   .text.HAL_PWREx_EnterSTOP1Mode:0000004c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3327   .text.HAL_PWREx_EnterSTOP2Mode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3333   .text.HAL_PWREx_EnterSTOP2Mode:00000000 HAL_PWREx_EnterSTOP2Mode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3417   .text.HAL_PWREx_EnterSTOP2Mode:0000004c $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3423   .text.HAL_PWREx_EnterSHUTDOWNMode:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3429   .text.HAL_PWREx_EnterSHUTDOWNMode:00000000 HAL_PWREx_EnterSHUTDOWNMode
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3476   .text.HAL_PWREx_EnterSHUTDOWNMode:00000028 $d
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3482   .text.HAL_PWREx_PVD_PVM_IRQHandler:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3488   .text.HAL_PWREx_PVD_PVM_IRQHandler:00000000 HAL_PWREx_PVD_PVM_IRQHandler
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3541   .text.HAL_PWREx_PVM3Callback:00000000 HAL_PWREx_PVM3Callback
C:\Users\Lenovo\AppData\Local\Temp\ccLMdYCa.s:3535   .text.HAL_PWREx_PVM3Callback:00000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
