ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"heap_4.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.ucHeap,"aw",%nobits
  18              		.align	2
  21              	ucHeap:
  22 0000 00000000 		.space	3072
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.rodata.xHeapStructSize,"a"
  24              		.align	2
  27              	xHeapStructSize:
  28 0000 08000000 		.word	8
  29              		.section	.bss.xStart,"aw",%nobits
  30              		.align	2
  33              	xStart:
  34 0000 00000000 		.space	8
  34      00000000 
  35              		.section	.bss.pxEnd,"aw",%nobits
  36              		.align	2
  39              	pxEnd:
  40 0000 00000000 		.space	4
  41              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
  42              		.align	2
  45              	xFreeBytesRemaining:
  46 0000 00000000 		.space	4
  47              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
  48              		.align	2
  51              	xMinimumEverFreeBytesRemaining:
  52 0000 00000000 		.space	4
  53              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
  54              		.align	2
  57              	xBlockAllocatedBit:
  58 0000 00000000 		.space	4
  59              		.section	.text.pvPortMalloc,"ax",%progbits
  60              		.align	1
  61              		.global	pvPortMalloc
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	pvPortMalloc:
  67              	.LFB4:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 2


  68              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that combines
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * (coalescences) adjacent memory blocks as they are freed, and in so doing
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * limits memory fragmentation.
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  *
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * See heap_1.c, heap_2.c and heap_3.c for alternative implementations, and the
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include <stdlib.h>
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** all the API functions to use the MPU wrappers.  That should only be done when
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** task.h is included from an application file. */
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "FreeRTOS.h"
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #include "task.h"
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Block sizes must not get too small. */
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Assumes 8bit bytes! */
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 3


  57:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Allocate the memory for the heap. */
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* The application writer has already defined the array used for the RTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	heap - probably so it can be placed in a special segment or address. */
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Define the linked list structure.  This is used to link free blocks in order
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** of their memory address. */
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** typedef struct A_BLOCK_LINK
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** } BlockLink_t;
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Inserts a block of memory that is being freed into the correct position in
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the list of free memory blocks.  The block being freed will be merged with
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * the block in front it and/or the block behind it if the memory blocks are
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * adjacent to each other.
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * Called automatically to setup the required heap structures the first time
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  * pvPortMalloc() is called.
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c ****  */
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void );
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* The size of the structure placed at the beginning of each allocated memory
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** block must by correctly byte aligned. */
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Create a couple of list links to mark the start and end of the list. */
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static BlockLink_t xStart, *pxEnd = NULL;
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** fragmentation. */
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xFreeBytesRemaining = 0U;
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** member of an BlockLink_t structure is set then the block belongs to the
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** application.  When the bit is free the block is still part of the free heap
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** space. */
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static size_t xBlockAllocatedBit = 0;
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvPortMalloc( size_t xWantedSize )
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 4


 114:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
  69              		.loc 1 114 1
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 40
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 8AB0     		sub	sp, sp, #40
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 48
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI2:
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void *pvReturn = NULL;
  85              		.loc 1 116 7
  86 0008 0023     		movs	r3, #0
  87 000a FB61     		str	r3, [r7, #28]
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	vTaskSuspendAll();
  88              		.loc 1 118 2
  89 000c FFF7FEFF 		bl	vTaskSuspendAll
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* If this is the first call to malloc then the heap will require
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		initialisation to setup the list of free blocks. */
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxEnd == NULL )
  90              		.loc 1 122 13
  91 0010 584B     		ldr	r3, .L16
  92 0012 1B68     		ldr	r3, [r3]
  93              		.loc 1 122 5
  94 0014 002B     		cmp	r3, #0
  95 0016 01D1     		bne	.L2
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			prvHeapInit();
  96              		.loc 1 124 4
  97 0018 FFF7FEFF 		bl	prvHeapInit
  98              	.L2:
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the requested block size is not so large that the top bit is
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		is used to determine who owns the block - the application or the
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		kernel, so it must be free. */
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
  99              		.loc 1 135 21
 100 001c 564B     		ldr	r3, .L16+4
 101 001e 1A68     		ldr	r2, [r3]
 102 0020 7B68     		ldr	r3, [r7, #4]
 103 0022 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 5


 104              		.loc 1 135 5
 105 0024 002B     		cmp	r3, #0
 106 0026 40F08E80 		bne	.L3
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			structure in addition to the requested amount of bytes. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( xWantedSize > 0 )
 107              		.loc 1 139 6
 108 002a 7B68     		ldr	r3, [r7, #4]
 109 002c 002B     		cmp	r3, #0
 110 002e 1DD0     		beq	.L4
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				xWantedSize += xHeapStructSize;
 111              		.loc 1 141 17
 112 0030 0822     		movs	r2, #8
 113 0032 7B68     		ldr	r3, [r7, #4]
 114 0034 1344     		add	r3, r3, r2
 115 0036 7B60     		str	r3, [r7, #4]
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Ensure that blocks are always aligned to the required number
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				of bytes. */
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 116              		.loc 1 145 23
 117 0038 7B68     		ldr	r3, [r7, #4]
 118 003a 03F00703 		and	r3, r3, #7
 119              		.loc 1 145 7
 120 003e 002B     		cmp	r3, #0
 121 0040 14D0     		beq	.L4
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Byte alignment required. */
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 122              		.loc 1 148 18
 123 0042 7B68     		ldr	r3, [r7, #4]
 124 0044 23F00703 		bic	r3, r3, #7
 125 0048 0833     		adds	r3, r3, #8
 126 004a 7B60     		str	r3, [r7, #4]
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 127              		.loc 1 149 6
 128 004c 7B68     		ldr	r3, [r7, #4]
 129 004e 03F00703 		and	r3, r3, #7
 130 0052 002B     		cmp	r3, #0
 131 0054 0AD0     		beq	.L4
 132              	.LBB12:
 133              	.LBB13:
 134              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 6


  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 7


  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 8


 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 9


 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 135              		.loc 2 195 2
 136              		.syntax unified
 137              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 138 0056 4FF05003 			mov r3, #80												
 139 005a 83F31188 		msr basepri, r3											
 140 005e BFF36F8F 		isb														
 141 0062 BFF34F8F 		dsb														
 142              	
 143              	@ 0 "" 2
 144              		.thumb
 145              		.syntax unified
 146 0066 7B61     		str	r3, [r7, #20]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 147              		.loc 2 203 1
 148 0068 00BF     		nop
 149              	.L5:
 150              	.LBE13:
 151              	.LBE12:
 152              		.loc 1 149 6 discriminator 1
 153 006a FEE7     		b	.L5
 154              	.L4:
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 155              		.loc 1 161 6
 156 006c 7B68     		ldr	r3, [r7, #4]
 157 006e 002B     		cmp	r3, #0
 158 0070 69D0     		beq	.L3
 159              		.loc 1 161 45 discriminator 1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 10


 160 0072 424B     		ldr	r3, .L16+8
 161 0074 1B68     		ldr	r3, [r3]
 162              		.loc 1 161 28 discriminator 1
 163 0076 7A68     		ldr	r2, [r7, #4]
 164 0078 9A42     		cmp	r2, r3
 165 007a 64D8     		bhi	.L3
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* Traverse the list from the start	(lowest address) block until
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				one	of adequate size is found. */
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxPreviousBlock = &xStart;
 166              		.loc 1 165 21
 167 007c 404B     		ldr	r3, .L16+12
 168 007e 3B62     		str	r3, [r7, #32]
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxBlock = xStart.pxNextFreeBlock;
 169              		.loc 1 166 13
 170 0080 3F4B     		ldr	r3, .L16+12
 171 0082 1B68     		ldr	r3, [r3]
 172 0084 7B62     		str	r3, [r7, #36]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 173              		.loc 1 167 10
 174 0086 04E0     		b	.L6
 175              	.L8:
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock = pxBlock;
 176              		.loc 1 169 22
 177 0088 7B6A     		ldr	r3, [r7, #36]
 178 008a 3B62     		str	r3, [r7, #32]
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 179              		.loc 1 170 14
 180 008c 7B6A     		ldr	r3, [r7, #36]
 181 008e 1B68     		ldr	r3, [r3]
 182 0090 7B62     		str	r3, [r7, #36]
 183              	.L6:
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 184              		.loc 1 167 21
 185 0092 7B6A     		ldr	r3, [r7, #36]
 186 0094 5B68     		ldr	r3, [r3, #4]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 187              		.loc 1 167 10
 188 0096 7A68     		ldr	r2, [r7, #4]
 189 0098 9A42     		cmp	r2, r3
 190 009a 03D9     		bls	.L7
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 191              		.loc 1 167 62 discriminator 1
 192 009c 7B6A     		ldr	r3, [r7, #36]
 193 009e 1B68     		ldr	r3, [r3]
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 194              		.loc 1 167 50 discriminator 1
 195 00a0 002B     		cmp	r3, #0
 196 00a2 F1D1     		bne	.L8
 197              	.L7:
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* If the end marker was reached then a block of adequate size
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				was	not found. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				if( pxBlock != pxEnd )
 198              		.loc 1 175 17
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 11


 199 00a4 334B     		ldr	r3, .L16
 200 00a6 1B68     		ldr	r3, [r3]
 201              		.loc 1 175 7
 202 00a8 7A6A     		ldr	r2, [r7, #36]
 203 00aa 9A42     		cmp	r2, r3
 204 00ac 4BD0     		beq	.L3
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Return the memory space pointed to - jumping over the
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					BlockLink_t structure at its start. */
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 205              		.loc 1 179 61
 206 00ae 3B6A     		ldr	r3, [r7, #32]
 207 00b0 1B68     		ldr	r3, [r3]
 208              		.loc 1 179 17
 209 00b2 0822     		movs	r2, #8
 210              		.loc 1 179 15
 211 00b4 1344     		add	r3, r3, r2
 212 00b6 FB61     		str	r3, [r7, #28]
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* This block is being returned for use so must be taken out
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					of the list of free blocks. */
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 213              		.loc 1 183 48
 214 00b8 7B6A     		ldr	r3, [r7, #36]
 215 00ba 1A68     		ldr	r2, [r3]
 216              		.loc 1 183 39
 217 00bc 3B6A     		ldr	r3, [r7, #32]
 218 00be 1A60     		str	r2, [r3]
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* If the block is larger than required it can be split into
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					two. */
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 219              		.loc 1 187 19
 220 00c0 7B6A     		ldr	r3, [r7, #36]
 221 00c2 5A68     		ldr	r2, [r3, #4]
 222              		.loc 1 187 32
 223 00c4 7B68     		ldr	r3, [r7, #4]
 224 00c6 D21A     		subs	r2, r2, r3
 225              		.loc 1 187 50
 226 00c8 0823     		movs	r3, #8
 227 00ca 5B00     		lsls	r3, r3, #1
 228              		.loc 1 187 8
 229 00cc 9A42     		cmp	r2, r3
 230 00ce 1FD9     		bls	.L9
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* This block is to be split into two.  Create a new
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						block following the number of bytes requested. The void
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						cast is used to prevent byte alignment warnings from the
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						compiler. */
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 231              		.loc 1 193 22
 232 00d0 7A6A     		ldr	r2, [r7, #36]
 233 00d2 7B68     		ldr	r3, [r7, #4]
 234 00d4 1344     		add	r3, r3, r2
 235 00d6 BB61     		str	r3, [r7, #24]
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 236              		.loc 1 194 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 12


 237 00d8 BB69     		ldr	r3, [r7, #24]
 238 00da 03F00703 		and	r3, r3, #7
 239 00de 002B     		cmp	r3, #0
 240 00e0 0AD0     		beq	.L10
 241              	.LBB14:
 242              	.LBB15:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 243              		.loc 2 195 2
 244              		.syntax unified
 245              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 246 00e2 4FF05003 			mov r3, #80												
 247 00e6 83F31188 		msr basepri, r3											
 248 00ea BFF36F8F 		isb														
 249 00ee BFF34F8F 		dsb														
 250              	
 251              	@ 0 "" 2
 252              		.thumb
 253              		.syntax unified
 254 00f2 3B61     		str	r3, [r7, #16]
 255              		.loc 2 203 1
 256 00f4 00BF     		nop
 257              	.L11:
 258              	.LBE15:
 259              	.LBE14:
 260              		.loc 1 194 7 discriminator 3
 261 00f6 FEE7     		b	.L11
 262              	.L10:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Calculate the sizes of two blocks split from the
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						single block. */
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 263              		.loc 1 198 43
 264 00f8 7B6A     		ldr	r3, [r7, #36]
 265 00fa 5A68     		ldr	r2, [r3, #4]
 266              		.loc 1 198 56
 267 00fc 7B68     		ldr	r3, [r7, #4]
 268 00fe D21A     		subs	r2, r2, r3
 269              		.loc 1 198 34
 270 0100 BB69     		ldr	r3, [r7, #24]
 271 0102 5A60     		str	r2, [r3, #4]
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						pxBlock->xBlockSize = xWantedSize;
 272              		.loc 1 199 27
 273 0104 7B6A     		ldr	r3, [r7, #36]
 274 0106 7A68     		ldr	r2, [r7, #4]
 275 0108 5A60     		str	r2, [r3, #4]
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						/* Insert the new block into the list of free blocks. */
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 276              		.loc 1 202 7
 277 010a B869     		ldr	r0, [r7, #24]
 278 010c FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 279              	.L9:
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 13


 208:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 280              		.loc 1 209 26
 281 0110 1A4B     		ldr	r3, .L16+8
 282 0112 1A68     		ldr	r2, [r3]
 283              		.loc 1 209 36
 284 0114 7B6A     		ldr	r3, [r7, #36]
 285 0116 5B68     		ldr	r3, [r3, #4]
 286              		.loc 1 209 26
 287 0118 D31A     		subs	r3, r2, r3
 288 011a 184A     		ldr	r2, .L16+8
 289 011c 1360     		str	r3, [r2]
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 290              		.loc 1 211 30
 291 011e 174B     		ldr	r3, .L16+8
 292 0120 1A68     		ldr	r2, [r3]
 293 0122 184B     		ldr	r3, .L16+16
 294 0124 1B68     		ldr	r3, [r3]
 295              		.loc 1 211 8
 296 0126 9A42     		cmp	r2, r3
 297 0128 03D2     		bcs	.L12
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 298              		.loc 1 213 38
 299 012a 144B     		ldr	r3, .L16+8
 300 012c 1B68     		ldr	r3, [r3]
 301 012e 154A     		ldr	r2, .L16+16
 302 0130 1360     		str	r3, [r2]
 303              	.L12:
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					else
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					{
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 						mtCOVERAGE_TEST_MARKER();
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					}
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* The block is being returned - it is allocated and owned
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					by the application and has no "next" block. */
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 304              		.loc 1 222 26
 305 0132 7B6A     		ldr	r3, [r7, #36]
 306 0134 5A68     		ldr	r2, [r3, #4]
 307 0136 104B     		ldr	r3, .L16+4
 308 0138 1B68     		ldr	r3, [r3]
 309 013a 1A43     		orrs	r2, r2, r3
 310 013c 7B6A     		ldr	r3, [r7, #36]
 311 013e 5A60     		str	r2, [r3, #4]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					pxBlock->pxNextFreeBlock = NULL;
 312              		.loc 1 223 31
 313 0140 7B6A     		ldr	r3, [r7, #36]
 314 0142 0022     		movs	r2, #0
 315 0144 1A60     		str	r2, [r3]
 316              	.L3:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				else
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 14


 228:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 234:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 235:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 236:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 238:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 239:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 240:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		traceMALLOC( pvReturn, xWantedSize );
 241:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 242:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	( void ) xTaskResumeAll();
 317              		.loc 1 242 11
 318 0146 FFF7FEFF 		bl	xTaskResumeAll
 243:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 244:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 245:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 246:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pvReturn == NULL )
 247:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 248:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			extern void vApplicationMallocFailedHook( void );
 249:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			vApplicationMallocFailedHook();
 250:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 251:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 252:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 253:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 254:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 256:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	#endif
 257:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 258:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 319              		.loc 1 258 2
 320 014a FB69     		ldr	r3, [r7, #28]
 321 014c 03F00703 		and	r3, r3, #7
 322 0150 002B     		cmp	r3, #0
 323 0152 0AD0     		beq	.L13
 324              	.LBB16:
 325              	.LBB17:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 326              		.loc 2 195 2
 327              		.syntax unified
 328              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 329 0154 4FF05003 			mov r3, #80												
 330 0158 83F31188 		msr basepri, r3											
 331 015c BFF36F8F 		isb														
 332 0160 BFF34F8F 		dsb														
 333              	
 334              	@ 0 "" 2
 335              		.thumb
 336              		.syntax unified
 337 0164 FB60     		str	r3, [r7, #12]
 338              		.loc 2 203 1
 339 0166 00BF     		nop
 340              	.L14:
 341              	.LBE17:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 15


 342              	.LBE16:
 343              		.loc 1 258 2 discriminator 5
 344 0168 FEE7     		b	.L14
 345              	.L13:
 259:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return pvReturn;
 346              		.loc 1 259 9
 347 016a FB69     		ldr	r3, [r7, #28]
 260:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 348              		.loc 1 260 1
 349 016c 1846     		mov	r0, r3
 350 016e 2837     		adds	r7, r7, #40
 351              	.LCFI3:
 352              		.cfi_def_cfa_offset 8
 353 0170 BD46     		mov	sp, r7
 354              	.LCFI4:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 0172 80BD     		pop	{r7, pc}
 358              	.L17:
 359              		.align	2
 360              	.L16:
 361 0174 00000000 		.word	pxEnd
 362 0178 00000000 		.word	xBlockAllocatedBit
 363 017c 00000000 		.word	xFreeBytesRemaining
 364 0180 00000000 		.word	xStart
 365 0184 00000000 		.word	xMinimumEverFreeBytesRemaining
 366              		.cfi_endproc
 367              	.LFE4:
 369              		.section	.text.vPortFree,"ax",%progbits
 370              		.align	1
 371              		.global	vPortFree
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	vPortFree:
 377              	.LFB5:
 261:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 262:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 263:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortFree( void *pv )
 264:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 378              		.loc 1 264 1
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 24
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 80B5     		push	{r7, lr}
 383              	.LCFI5:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 86B0     		sub	sp, sp, #24
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 32
 390 0004 00AF     		add	r7, sp, #0
 391              	.LCFI7:
 392              		.cfi_def_cfa_register 7
 393 0006 7860     		str	r0, [r7, #4]
 265:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc = ( uint8_t * ) pv;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 16


 394              		.loc 1 265 10
 395 0008 7B68     		ldr	r3, [r7, #4]
 396 000a 7B61     		str	r3, [r7, #20]
 266:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxLink;
 267:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 268:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pv != NULL )
 397              		.loc 1 268 4
 398 000c 7B68     		ldr	r3, [r7, #4]
 399 000e 002B     		cmp	r3, #0
 400 0010 48D0     		beq	.L24
 269:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 270:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 271:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		before it. */
 272:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		puc -= xHeapStructSize;
 401              		.loc 1 272 7
 402 0012 0823     		movs	r3, #8
 403 0014 5B42     		rsbs	r3, r3, #0
 404 0016 7A69     		ldr	r2, [r7, #20]
 405 0018 1344     		add	r3, r3, r2
 406 001a 7B61     		str	r3, [r7, #20]
 273:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 275:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxLink = ( void * ) puc;
 407              		.loc 1 275 10
 408 001c 7B69     		ldr	r3, [r7, #20]
 409 001e 3B61     		str	r3, [r7, #16]
 276:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Check the block is actually allocated. */
 278:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 410              		.loc 1 278 3
 411 0020 3B69     		ldr	r3, [r7, #16]
 412 0022 5A68     		ldr	r2, [r3, #4]
 413 0024 214B     		ldr	r3, .L25
 414 0026 1B68     		ldr	r3, [r3]
 415 0028 1340     		ands	r3, r3, r2
 416 002a 002B     		cmp	r3, #0
 417 002c 0AD1     		bne	.L20
 418              	.LBB18:
 419              	.LBB19:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 420              		.loc 2 195 2
 421              		.syntax unified
 422              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 423 002e 4FF05003 			mov r3, #80												
 424 0032 83F31188 		msr basepri, r3											
 425 0036 BFF36F8F 		isb														
 426 003a BFF34F8F 		dsb														
 427              	
 428              	@ 0 "" 2
 429              		.thumb
 430              		.syntax unified
 431 003e FB60     		str	r3, [r7, #12]
 432              		.loc 2 203 1
 433 0040 00BF     		nop
 434              	.L21:
 435              	.LBE19:
 436              	.LBE18:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 17


 437              		.loc 1 278 3 discriminator 1
 438 0042 FEE7     		b	.L21
 439              	.L20:
 279:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 440              		.loc 1 279 3
 441 0044 3B69     		ldr	r3, [r7, #16]
 442 0046 1B68     		ldr	r3, [r3]
 443 0048 002B     		cmp	r3, #0
 444 004a 0AD0     		beq	.L22
 445              	.LBB20:
 446              	.LBB21:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 447              		.loc 2 195 2
 448              		.syntax unified
 449              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 450 004c 4FF05003 			mov r3, #80												
 451 0050 83F31188 		msr basepri, r3											
 452 0054 BFF36F8F 		isb														
 453 0058 BFF34F8F 		dsb														
 454              	
 455              	@ 0 "" 2
 456              		.thumb
 457              		.syntax unified
 458 005c BB60     		str	r3, [r7, #8]
 459              		.loc 2 203 1
 460 005e 00BF     		nop
 461              	.L23:
 462              	.LBE21:
 463              	.LBE20:
 464              		.loc 1 279 3 discriminator 2
 465 0060 FEE7     		b	.L23
 466              	.L22:
 280:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 281:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 467              		.loc 1 281 15
 468 0062 3B69     		ldr	r3, [r7, #16]
 469 0064 5A68     		ldr	r2, [r3, #4]
 470              		.loc 1 281 28
 471 0066 114B     		ldr	r3, .L25
 472 0068 1B68     		ldr	r3, [r3]
 473 006a 1340     		ands	r3, r3, r2
 474              		.loc 1 281 5
 475 006c 002B     		cmp	r3, #0
 476 006e 19D0     		beq	.L24
 282:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 283:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 477              		.loc 1 283 14
 478 0070 3B69     		ldr	r3, [r7, #16]
 479 0072 1B68     		ldr	r3, [r3]
 480              		.loc 1 283 6
 481 0074 002B     		cmp	r3, #0
 482 0076 15D1     		bne	.L24
 284:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 285:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				/* The block is being returned to the heap - it is no longer
 286:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				allocated. */
 287:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 483              		.loc 1 287 24
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 18


 484 0078 3B69     		ldr	r3, [r7, #16]
 485 007a 5A68     		ldr	r2, [r3, #4]
 486              		.loc 1 287 27
 487 007c 0B4B     		ldr	r3, .L25
 488 007e 1B68     		ldr	r3, [r3]
 489 0080 DB43     		mvns	r3, r3
 490              		.loc 1 287 24
 491 0082 1A40     		ands	r2, r2, r3
 492 0084 3B69     		ldr	r3, [r7, #16]
 493 0086 5A60     		str	r2, [r3, #4]
 288:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 289:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				vTaskSuspendAll();
 494              		.loc 1 289 5
 495 0088 FFF7FEFF 		bl	vTaskSuspendAll
 290:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				{
 291:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					/* Add this block to the list of free blocks. */
 292:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 496              		.loc 1 292 35
 497 008c 3B69     		ldr	r3, [r7, #16]
 498 008e 5A68     		ldr	r2, [r3, #4]
 499              		.loc 1 292 26
 500 0090 074B     		ldr	r3, .L25+4
 501 0092 1B68     		ldr	r3, [r3]
 502 0094 1344     		add	r3, r3, r2
 503 0096 064A     		ldr	r2, .L25+4
 504 0098 1360     		str	r3, [r2]
 293:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					traceFREE( pv, pxLink->xBlockSize );
 294:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 505              		.loc 1 294 6
 506 009a 3869     		ldr	r0, [r7, #16]
 507 009c FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 295:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				}
 296:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				( void ) xTaskResumeAll();
 508              		.loc 1 296 14
 509 00a0 FFF7FEFF 		bl	xTaskResumeAll
 510              	.L24:
 297:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 298:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			else
 299:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			{
 300:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 				mtCOVERAGE_TEST_MARKER();
 301:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			}
 302:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 303:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 304:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 305:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			mtCOVERAGE_TEST_MARKER();
 306:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 307:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 308:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 511              		.loc 1 308 1
 512 00a4 00BF     		nop
 513 00a6 1837     		adds	r7, r7, #24
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 8
 516 00a8 BD46     		mov	sp, r7
 517              	.LCFI9:
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 19


 520 00aa 80BD     		pop	{r7, pc}
 521              	.L26:
 522              		.align	2
 523              	.L25:
 524 00ac 00000000 		.word	xBlockAllocatedBit
 525 00b0 00000000 		.word	xFreeBytesRemaining
 526              		.cfi_endproc
 527              	.LFE5:
 529              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 530              		.align	1
 531              		.global	xPortGetFreeHeapSize
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	xPortGetFreeHeapSize:
 537              	.LFB6:
 309:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 310:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetFreeHeapSize( void )
 312:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 538              		.loc 1 312 1
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              	.LCFI10:
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 00AF     		add	r7, sp, #0
 548              	.LCFI11:
 549              		.cfi_def_cfa_register 7
 313:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xFreeBytesRemaining;
 550              		.loc 1 313 9
 551 0004 024B     		ldr	r3, .L29
 552 0006 1B68     		ldr	r3, [r3]
 314:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 553              		.loc 1 314 1
 554 0008 1846     		mov	r0, r3
 555 000a BD46     		mov	sp, r7
 556              	.LCFI12:
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 000c 80BC     		pop	{r7}
 560              	.LCFI13:
 561              		.cfi_restore 7
 562              		.cfi_def_cfa_offset 0
 563 000e 7047     		bx	lr
 564              	.L30:
 565              		.align	2
 566              	.L29:
 567 0010 00000000 		.word	xFreeBytesRemaining
 568              		.cfi_endproc
 569              	.LFE6:
 571              		.section	.text.xPortGetMinimumEverFreeHeapSize,"ax",%progbits
 572              		.align	1
 573              		.global	xPortGetMinimumEverFreeHeapSize
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 20


 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	xPortGetMinimumEverFreeHeapSize:
 579              	.LFB7:
 315:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 316:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xPortGetMinimumEverFreeHeapSize( void )
 318:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 580              		.loc 1 318 1
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585 0000 80B4     		push	{r7}
 586              	.LCFI14:
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 00AF     		add	r7, sp, #0
 590              	.LCFI15:
 591              		.cfi_def_cfa_register 7
 319:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	return xMinimumEverFreeBytesRemaining;
 592              		.loc 1 319 9
 593 0004 024B     		ldr	r3, .L33
 594 0006 1B68     		ldr	r3, [r3]
 320:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 595              		.loc 1 320 1
 596 0008 1846     		mov	r0, r3
 597 000a BD46     		mov	sp, r7
 598              	.LCFI16:
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 000c 80BC     		pop	{r7}
 602              	.LCFI17:
 603              		.cfi_restore 7
 604              		.cfi_def_cfa_offset 0
 605 000e 7047     		bx	lr
 606              	.L34:
 607              		.align	2
 608              	.L33:
 609 0010 00000000 		.word	xMinimumEverFreeBytesRemaining
 610              		.cfi_endproc
 611              	.LFE7:
 613              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 614              		.align	1
 615              		.global	vPortInitialiseBlocks
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 620              	vPortInitialiseBlocks:
 621              	.LFB8:
 321:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 322:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 323:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** void vPortInitialiseBlocks( void )
 324:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 622              		.loc 1 324 1
 623              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 21


 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI18:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 00AF     		add	r7, sp, #0
 632              	.LCFI19:
 633              		.cfi_def_cfa_register 7
 325:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* This just exists to keep the linker quiet. */
 326:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 634              		.loc 1 326 1
 635 0004 00BF     		nop
 636 0006 BD46     		mov	sp, r7
 637              	.LCFI20:
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0008 80BC     		pop	{r7}
 641              	.LCFI21:
 642              		.cfi_restore 7
 643              		.cfi_def_cfa_offset 0
 644 000a 7047     		bx	lr
 645              		.cfi_endproc
 646              	.LFE8:
 648              		.section	.text.prvHeapInit,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	prvHeapInit:
 655              	.LFB9:
 327:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 328:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvHeapInit( void )
 330:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 656              		.loc 1 330 1
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 16
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661 0000 80B4     		push	{r7}
 662              	.LCFI22:
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 85B0     		sub	sp, sp, #20
 666              	.LCFI23:
 667              		.cfi_def_cfa_offset 24
 668 0004 00AF     		add	r7, sp, #0
 669              	.LCFI24:
 670              		.cfi_def_cfa_register 7
 331:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxFirstFreeBlock;
 332:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *pucAlignedHeap;
 333:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t uxAddress;
 334:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 671              		.loc 1 334 8
 672 0006 4FF44063 		mov	r3, #3072
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 22


 673 000a BB60     		str	r3, [r7, #8]
 335:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 337:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( size_t ) ucHeap;
 674              		.loc 1 337 12
 675 000c 274B     		ldr	r3, .L38
 676 000e FB60     		str	r3, [r7, #12]
 338:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 677              		.loc 1 339 18
 678 0010 FB68     		ldr	r3, [r7, #12]
 679 0012 03F00703 		and	r3, r3, #7
 680              		.loc 1 339 4
 681 0016 002B     		cmp	r3, #0
 682 0018 0CD0     		beq	.L37
 340:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 341:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 683              		.loc 1 341 13
 684 001a FB68     		ldr	r3, [r7, #12]
 685 001c 0733     		adds	r3, r3, #7
 686 001e FB60     		str	r3, [r7, #12]
 342:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 687              		.loc 1 342 13
 688 0020 FB68     		ldr	r3, [r7, #12]
 689 0022 23F00703 		bic	r3, r3, #7
 690 0026 FB60     		str	r3, [r7, #12]
 343:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 691              		.loc 1 343 18
 692 0028 BA68     		ldr	r2, [r7, #8]
 693 002a FB68     		ldr	r3, [r7, #12]
 694 002c D31A     		subs	r3, r2, r3
 695              		.loc 1 343 33
 696 002e 1F4A     		ldr	r2, .L38
 697              		.loc 1 343 18
 698 0030 1344     		add	r3, r3, r2
 699 0032 BB60     		str	r3, [r7, #8]
 700              	.L37:
 344:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
 701              		.loc 1 346 17
 702 0034 FB68     		ldr	r3, [r7, #12]
 703 0036 7B60     		str	r3, [r7, #4]
 347:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 349:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 350:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 704              		.loc 1 350 25
 705 0038 1D4A     		ldr	r2, .L38+4
 706 003a 7B68     		ldr	r3, [r7, #4]
 707 003c 1360     		str	r3, [r2]
 351:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xStart.xBlockSize = ( size_t ) 0;
 708              		.loc 1 351 20
 709 003e 1C4B     		ldr	r3, .L38+4
 710 0040 0022     		movs	r2, #0
 711 0042 5A60     		str	r2, [r3, #4]
 352:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 23


 353:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 354:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	at the end of the heap space. */
 355:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 712              		.loc 1 355 16
 713 0044 7B68     		ldr	r3, [r7, #4]
 714              		.loc 1 355 12
 715 0046 BA68     		ldr	r2, [r7, #8]
 716 0048 1344     		add	r3, r3, r2
 717 004a FB60     		str	r3, [r7, #12]
 356:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress -= xHeapStructSize;
 718              		.loc 1 356 12
 719 004c 0822     		movs	r2, #8
 720 004e FB68     		ldr	r3, [r7, #12]
 721 0050 9B1A     		subs	r3, r3, r2
 722 0052 FB60     		str	r3, [r7, #12]
 357:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 723              		.loc 1 357 12
 724 0054 FB68     		ldr	r3, [r7, #12]
 725 0056 23F00703 		bic	r3, r3, #7
 726 005a FB60     		str	r3, [r7, #12]
 358:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd = ( void * ) uxAddress;
 727              		.loc 1 358 10
 728 005c FB68     		ldr	r3, [r7, #12]
 729              		.loc 1 358 8
 730 005e 154A     		ldr	r2, .L38+8
 731 0060 1360     		str	r3, [r2]
 359:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->xBlockSize = 0;
 732              		.loc 1 359 7
 733 0062 144B     		ldr	r3, .L38+8
 734 0064 1B68     		ldr	r3, [r3]
 735              		.loc 1 359 20
 736 0066 0022     		movs	r2, #0
 737 0068 5A60     		str	r2, [r3, #4]
 360:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxEnd->pxNextFreeBlock = NULL;
 738              		.loc 1 360 7
 739 006a 124B     		ldr	r3, .L38+8
 740 006c 1B68     		ldr	r3, [r3]
 741              		.loc 1 360 25
 742 006e 0022     		movs	r2, #0
 743 0070 1A60     		str	r2, [r3]
 361:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* To start with there is a single free block that is sized to take up the
 363:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	entire heap space, minus the space taken by pxEnd. */
 364:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 744              		.loc 1 364 19
 745 0072 7B68     		ldr	r3, [r7, #4]
 746 0074 3B60     		str	r3, [r7]
 365:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 747              		.loc 1 365 45
 748 0076 3B68     		ldr	r3, [r7]
 749              		.loc 1 365 43
 750 0078 FA68     		ldr	r2, [r7, #12]
 751 007a D21A     		subs	r2, r2, r3
 752              		.loc 1 365 31
 753 007c 3B68     		ldr	r3, [r7]
 754 007e 5A60     		str	r2, [r3, #4]
 366:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 24


 755              		.loc 1 366 36
 756 0080 0C4B     		ldr	r3, .L38+8
 757 0082 1A68     		ldr	r2, [r3]
 758 0084 3B68     		ldr	r3, [r7]
 759 0086 1A60     		str	r2, [r3]
 367:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 369:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 760              		.loc 1 369 51
 761 0088 3B68     		ldr	r3, [r7]
 762 008a 5B68     		ldr	r3, [r3, #4]
 763              		.loc 1 369 33
 764 008c 0A4A     		ldr	r2, .L38+12
 765 008e 1360     		str	r3, [r2]
 370:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 766              		.loc 1 370 40
 767 0090 3B68     		ldr	r3, [r7]
 768 0092 5B68     		ldr	r3, [r3, #4]
 769              		.loc 1 370 22
 770 0094 094A     		ldr	r2, .L38+16
 771 0096 1360     		str	r3, [r2]
 371:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Work out the position of the top bit in a size_t variable. */
 373:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 772              		.loc 1 373 21
 773 0098 094B     		ldr	r3, .L38+20
 774 009a 4FF00042 		mov	r2, #-2147483648
 775 009e 1A60     		str	r2, [r3]
 374:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 776              		.loc 1 374 1
 777 00a0 00BF     		nop
 778 00a2 1437     		adds	r7, r7, #20
 779              	.LCFI25:
 780              		.cfi_def_cfa_offset 4
 781 00a4 BD46     		mov	sp, r7
 782              	.LCFI26:
 783              		.cfi_def_cfa_register 13
 784              		@ sp needed
 785 00a6 80BC     		pop	{r7}
 786              	.LCFI27:
 787              		.cfi_restore 7
 788              		.cfi_def_cfa_offset 0
 789 00a8 7047     		bx	lr
 790              	.L39:
 791 00aa 00BF     		.align	2
 792              	.L38:
 793 00ac 00000000 		.word	ucHeap
 794 00b0 00000000 		.word	xStart
 795 00b4 00000000 		.word	pxEnd
 796 00b8 00000000 		.word	xMinimumEverFreeBytesRemaining
 797 00bc 00000000 		.word	xFreeBytesRemaining
 798 00c0 00000000 		.word	xBlockAllocatedBit
 799              		.cfi_endproc
 800              	.LFE9:
 802              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 803              		.align	1
 804              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 25


 805              		.thumb
 806              		.thumb_func
 808              	prvInsertBlockIntoFreeList:
 809              	.LFB10:
 375:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** /*-----------------------------------------------------------*/
 376:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 377:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 378:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** {
 810              		.loc 1 378 1
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              	.LCFI28:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 85B0     		sub	sp, sp, #20
 820              	.LCFI29:
 821              		.cfi_def_cfa_offset 24
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI30:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 379:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** BlockLink_t *pxIterator;
 380:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** uint8_t *puc;
 381:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Iterate through the list until a block is found that has a higher address
 383:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	than the block being inserted. */
 384:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 826              		.loc 1 384 18
 827 0008 274B     		ldr	r3, .L49
 828 000a FB60     		str	r3, [r7, #12]
 829              		.loc 1 384 2
 830 000c 02E0     		b	.L41
 831              	.L42:
 832              		.loc 1 384 87 discriminator 3
 833 000e FB68     		ldr	r3, [r7, #12]
 834 0010 1B68     		ldr	r3, [r3]
 835 0012 FB60     		str	r3, [r7, #12]
 836              	.L41:
 837              		.loc 1 384 39 discriminator 1
 838 0014 FB68     		ldr	r3, [r7, #12]
 839 0016 1B68     		ldr	r3, [r3]
 840              		.loc 1 384 2 discriminator 1
 841 0018 7A68     		ldr	r2, [r7, #4]
 842 001a 9A42     		cmp	r2, r3
 843 001c F7D8     		bhi	.L42
 385:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 386:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		/* Nothing to do here, just iterate to the right position. */
 387:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 388:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted after
 390:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 391:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxIterator;
 844              		.loc 1 391 6
 845 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 26


 846 0020 BB60     		str	r3, [r7, #8]
 392:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 847              		.loc 1 392 24
 848 0022 FB68     		ldr	r3, [r7, #12]
 849 0024 5B68     		ldr	r3, [r3, #4]
 850              		.loc 1 392 12
 851 0026 BA68     		ldr	r2, [r7, #8]
 852 0028 1344     		add	r3, r3, r2
 853              		.loc 1 392 4
 854 002a 7A68     		ldr	r2, [r7, #4]
 855 002c 9A42     		cmp	r2, r3
 856 002e 08D1     		bne	.L43
 393:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 394:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 857              		.loc 1 394 26
 858 0030 FB68     		ldr	r3, [r7, #12]
 859 0032 5A68     		ldr	r2, [r3, #4]
 860              		.loc 1 394 44
 861 0034 7B68     		ldr	r3, [r7, #4]
 862 0036 5B68     		ldr	r3, [r3, #4]
 863              		.loc 1 394 26
 864 0038 1A44     		add	r2, r2, r3
 865 003a FB68     		ldr	r3, [r7, #12]
 866 003c 5A60     		str	r2, [r3, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert = pxIterator;
 867              		.loc 1 395 19
 868 003e FB68     		ldr	r3, [r7, #12]
 869 0040 7B60     		str	r3, [r7, #4]
 870              	.L43:
 396:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 397:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 398:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 399:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 400:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 401:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* Do the block being inserted, and the block it is being inserted before
 403:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	make a contiguous block of memory? */
 404:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 871              		.loc 1 404 6
 872 0042 7B68     		ldr	r3, [r7, #4]
 873 0044 BB60     		str	r3, [r7, #8]
 405:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 874              		.loc 1 405 29
 875 0046 7B68     		ldr	r3, [r7, #4]
 876 0048 5B68     		ldr	r3, [r3, #4]
 877              		.loc 1 405 12
 878 004a BA68     		ldr	r2, [r7, #8]
 879 004c 1A44     		add	r2, r2, r3
 880              		.loc 1 405 71
 881 004e FB68     		ldr	r3, [r7, #12]
 882 0050 1B68     		ldr	r3, [r3]
 883              		.loc 1 405 4
 884 0052 9A42     		cmp	r2, r3
 885 0054 18D1     		bne	.L44
 406:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 407:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 886              		.loc 1 407 17
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 27


 887 0056 FB68     		ldr	r3, [r7, #12]
 888 0058 1A68     		ldr	r2, [r3]
 889              		.loc 1 407 35
 890 005a 144B     		ldr	r3, .L49+4
 891 005c 1B68     		ldr	r3, [r3]
 892              		.loc 1 407 5
 893 005e 9A42     		cmp	r2, r3
 894 0060 0DD0     		beq	.L45
 408:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 409:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			/* Form one big block from the two blocks. */
 410:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 895              		.loc 1 410 32
 896 0062 7B68     		ldr	r3, [r7, #4]
 897 0064 5A68     		ldr	r2, [r3, #4]
 898              		.loc 1 410 45
 899 0066 FB68     		ldr	r3, [r7, #12]
 900 0068 1B68     		ldr	r3, [r3]
 901              		.loc 1 410 62
 902 006a 5B68     		ldr	r3, [r3, #4]
 903              		.loc 1 410 32
 904 006c 1A44     		add	r2, r2, r3
 905 006e 7B68     		ldr	r3, [r7, #4]
 906 0070 5A60     		str	r2, [r3, #4]
 411:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 907              		.loc 1 411 49
 908 0072 FB68     		ldr	r3, [r7, #12]
 909 0074 1B68     		ldr	r3, [r3]
 910              		.loc 1 411 66
 911 0076 1A68     		ldr	r2, [r3]
 912              		.loc 1 411 37
 913 0078 7B68     		ldr	r3, [r7, #4]
 914 007a 1A60     		str	r2, [r3]
 915 007c 08E0     		b	.L46
 916              	.L45:
 412:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 413:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		else
 414:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		{
 415:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 917              		.loc 1 415 37
 918 007e 0B4B     		ldr	r3, .L49+4
 919 0080 1A68     		ldr	r2, [r3]
 920 0082 7B68     		ldr	r3, [r7, #4]
 921 0084 1A60     		str	r2, [r3]
 922 0086 03E0     		b	.L46
 923              	.L44:
 416:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 418:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 419:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 420:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 924              		.loc 1 420 48
 925 0088 FB68     		ldr	r3, [r7, #12]
 926 008a 1A68     		ldr	r2, [r3]
 927              		.loc 1 420 36
 928 008c 7B68     		ldr	r3, [r7, #4]
 929 008e 1A60     		str	r2, [r3]
 930              	.L46:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 28


 421:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 424:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 425:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	already been set, and should not be set here as that would make it point
 426:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	to itself. */
 427:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	if( pxIterator != pxBlockToInsert )
 931              		.loc 1 427 4
 932 0090 FA68     		ldr	r2, [r7, #12]
 933 0092 7B68     		ldr	r3, [r7, #4]
 934 0094 9A42     		cmp	r2, r3
 935 0096 02D0     		beq	.L48
 428:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 429:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 936              		.loc 1 429 31
 937 0098 FB68     		ldr	r3, [r7, #12]
 938 009a 7A68     		ldr	r2, [r7, #4]
 939 009c 1A60     		str	r2, [r3]
 940              	.L48:
 430:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 431:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	else
 432:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	{
 433:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 		mtCOVERAGE_TEST_MARKER();
 434:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** 	}
 435:Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c **** }
 941              		.loc 1 435 1
 942 009e 00BF     		nop
 943 00a0 1437     		adds	r7, r7, #20
 944              	.LCFI31:
 945              		.cfi_def_cfa_offset 4
 946 00a2 BD46     		mov	sp, r7
 947              	.LCFI32:
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 00a4 80BC     		pop	{r7}
 951              	.LCFI33:
 952              		.cfi_restore 7
 953              		.cfi_def_cfa_offset 0
 954 00a6 7047     		bx	lr
 955              	.L50:
 956              		.align	2
 957              	.L49:
 958 00a8 00000000 		.word	xStart
 959 00ac 00000000 		.word	pxEnd
 960              		.cfi_endproc
 961              	.LFE10:
 963              		.text
 964              	.Letext0:
 965              		.file 3 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 966              		.file 4 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 967              		.file 5 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 heap_4.c
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:18     .bss.ucHeap:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:21     .bss.ucHeap:00000000 ucHeap
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:24     .rodata.xHeapStructSize:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:27     .rodata.xHeapStructSize:00000000 xHeapStructSize
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:30     .bss.xStart:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:33     .bss.xStart:00000000 xStart
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:36     .bss.pxEnd:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:39     .bss.pxEnd:00000000 pxEnd
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:42     .bss.xFreeBytesRemaining:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:45     .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:48     .bss.xMinimumEverFreeBytesRemaining:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:51     .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:54     .bss.xBlockAllocatedBit:00000000 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:57     .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:60     .text.pvPortMalloc:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:66     .text.pvPortMalloc:00000000 pvPortMalloc
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:654    .text.prvHeapInit:00000000 prvHeapInit
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:808    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:361    .text.pvPortMalloc:00000174 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:370    .text.vPortFree:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:376    .text.vPortFree:00000000 vPortFree
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:524    .text.vPortFree:000000ac $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:530    .text.xPortGetFreeHeapSize:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:536    .text.xPortGetFreeHeapSize:00000000 xPortGetFreeHeapSize
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:567    .text.xPortGetFreeHeapSize:00000010 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:572    .text.xPortGetMinimumEverFreeHeapSize:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:578    .text.xPortGetMinimumEverFreeHeapSize:00000000 xPortGetMinimumEverFreeHeapSize
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:609    .text.xPortGetMinimumEverFreeHeapSize:00000010 $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:614    .text.vPortInitialiseBlocks:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:620    .text.vPortInitialiseBlocks:00000000 vPortInitialiseBlocks
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:649    .text.prvHeapInit:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:793    .text.prvHeapInit:000000ac $d
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:803    .text.prvInsertBlockIntoFreeList:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccRyCR1q.s:958    .text.prvInsertBlockIntoFreeList:000000a8 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
