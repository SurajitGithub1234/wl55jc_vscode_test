ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"event_groups.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  18              		.align	1
  19              		.global	xEventGroupCreateStatic
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	xEventGroupCreateStatic:
  25              	.LFB4:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* FreeRTOS includes. */
  37:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "FreeRTOS.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "task.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #include "event_groups.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  42:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  43:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** for the header files above, but not in this file, in order to generate the
  45:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** correct privileged Vs unprivileged linkage and placement. */
  46:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  47:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  48:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** item value.  It is important they don't clash with the
  50:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #else
  57:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
  62:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** typedef struct EventGroupDef_t
  64:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
  65:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventBits_t uxEventBits;
  66:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  68:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  71:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
  75:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** } EventGroup_t;
  76:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  77:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
  78:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*
  80:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  * in uxCurrentEventBits.
  86:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c ****  */
  87:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  93:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
  27              		.loc 1 94 2
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  95:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
  96:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  43              		.loc 1 98 3
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 0AD1     		bne	.L2
  47              	.LBB36:
  48              	.LBB37:
  49              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 4


  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 5


  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 6


 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  50              		.loc 2 195 2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 7


  51              		.syntax unified
  52              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  53 000e 4FF05003 			mov r3, #80												
  54 0012 83F31188 		msr basepri, r3											
  55 0016 BFF36F8F 		isb														
  56 001a BFF34F8F 		dsb														
  57              	
  58              	@ 0 "" 2
  59              		.thumb
  60              		.syntax unified
  61 001e 3B61     		str	r3, [r7, #16]
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  62              		.loc 2 203 1
  63 0020 00BF     		nop
  64              	.L3:
  65              	.LBE37:
  66              	.LBE36:
  67              		.loc 1 98 3 discriminator 1
  68 0022 FEE7     		b	.L3
  69              	.L2:
  70              	.LBB38:
  99:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 102:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			event group structure. */
 105:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
  71              		.loc 1 105 20
  72 0024 2023     		movs	r3, #32
  73 0026 BB60     		str	r3, [r7, #8]
 106:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
  74              		.loc 1 106 4
  75 0028 BB68     		ldr	r3, [r7, #8]
  76 002a 202B     		cmp	r3, #32
  77 002c 0AD0     		beq	.L4
  78              	.LBB39:
  79              	.LBB40:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
  80              		.loc 2 195 2
  81              		.syntax unified
  82              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  83 002e 4FF05003 			mov r3, #80												
  84 0032 83F31188 		msr basepri, r3											
  85 0036 BFF36F8F 		isb														
  86 003a BFF34F8F 		dsb														
  87              	
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 8


  91 003e FB60     		str	r3, [r7, #12]
  92              		.loc 2 203 1
  93 0040 00BF     		nop
  94              	.L5:
  95              	.LBE40:
  96              	.LBE39:
  97              		.loc 1 106 4 discriminator 2
  98 0042 FEE7     		b	.L5
  99              	.L4:
 100              	.LBE38:
 107:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		} /*lint !e529 xSize is referenced if configASSERT() is defined. */
 108:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and StaticE
 101              		.loc 1 111 15
 102 0044 7B68     		ldr	r3, [r7, #4]
 103 0046 7B61     		str	r3, [r7, #20]
 112:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 113:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 104              		.loc 1 113 5
 105 0048 7B69     		ldr	r3, [r7, #20]
 106 004a 002B     		cmp	r3, #0
 107 004c 0AD0     		beq	.L6
 114:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 115:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 108              		.loc 1 115 29
 109 004e 7B69     		ldr	r3, [r7, #20]
 110 0050 0022     		movs	r2, #0
 111 0052 1A60     		str	r2, [r3]
 116:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 112              		.loc 1 116 4
 113 0054 7B69     		ldr	r3, [r7, #20]
 114 0056 0433     		adds	r3, r3, #4
 115 0058 1846     		mov	r0, r3
 116 005a FFF7FEFF 		bl	vListInitialise
 117:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 120:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				this event group was created statically in case the event group
 122:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				is later deleted. */
 123:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 117              		.loc 1 123 40
 118 005e 7B69     		ldr	r3, [r7, #20]
 119 0060 0122     		movs	r2, #1
 120 0062 1A77     		strb	r2, [r3, #28]
 121              	.L6:
 124:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 125:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 129:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 130:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 131:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* xEventGroupCreateStatic should only ever be called with
 132:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventGroupBuffer pointing to a pre-allocated (compile time
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 9


 133:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			allocated) StaticEventGroup_t variable. */
 134:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 135:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 136:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return pxEventBits;
 122              		.loc 1 137 10
 123 0064 7B69     		ldr	r3, [r7, #20]
 138:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 124              		.loc 1 138 2
 125 0066 1846     		mov	r0, r3
 126 0068 1837     		adds	r7, r7, #24
 127              	.LCFI3:
 128              		.cfi_def_cfa_offset 8
 129 006a BD46     		mov	sp, r7
 130              	.LCFI4:
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 006c 80BD     		pop	{r7, pc}
 134              		.cfi_endproc
 135              	.LFE4:
 137              		.section	.text.xEventGroupCreate,"ax",%progbits
 138              		.align	1
 139              		.global	xEventGroupCreate
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	xEventGroupCreate:
 145              	.LFB5:
 139:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 141:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 142:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 144:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 146:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 146              		.loc 1 146 2
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 82B0     		sub	sp, sp, #8
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              	.LCFI7:
 160              		.cfi_def_cfa_register 7
 147:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 148:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Allocate the event group.  Justification for MISRA deviation as
 150:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		follows:  pvPortMalloc() always ensures returned memory blocks are
 151:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		aligned per the requirements of the MCU stack.  In this case
 152:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 10


 153:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		alignment requirements of the EventGroup_t structure - which (if you
 154:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		follow it through) is the alignment requirements of the TickType_t type
 155:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		(EventBits_t being of TickType_t itself).  Therefore, whenever the
 156:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		stack alignment requirements are greater than or equal to the
 157:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		TickType_t alignment requirements the cast is safe.  In other cases,
 158:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		where the natural word size of the architecture is less than
 159:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		sizeof( TickType_t ), the TickType_t variables will be accessed in two
 160:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		or more reads operations, and the alignment requirements is only that
 161:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		of each individual read. */
 162:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see
 161              		.loc 1 162 36
 162 0006 2020     		movs	r0, #32
 163 0008 FFF7FEFF 		bl	pvPortMalloc
 164 000c 7860     		str	r0, [r7, #4]
 163:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( pxEventBits != NULL )
 165              		.loc 1 164 5
 166 000e 7B68     		ldr	r3, [r7, #4]
 167 0010 002B     		cmp	r3, #0
 168 0012 0AD0     		beq	.L9
 165:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 166:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 169              		.loc 1 166 29
 170 0014 7B68     		ldr	r3, [r7, #4]
 171 0016 0022     		movs	r2, #0
 172 0018 1A60     		str	r2, [r3]
 167:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 173              		.loc 1 167 4
 174 001a 7B68     		ldr	r3, [r7, #4]
 175 001c 0433     		adds	r3, r3, #4
 176 001e 1846     		mov	r0, r3
 177 0020 FFF7FEFF 		bl	vListInitialise
 168:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 170:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 171:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 172:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				event group was allocated statically in case the event group is
 173:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				later deleted. */
 174:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 178              		.loc 1 174 40
 179 0024 7B68     		ldr	r3, [r7, #4]
 180 0026 0022     		movs	r2, #0
 181 0028 1A77     		strb	r2, [r3, #28]
 182              	.L9:
 175:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 176:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 177:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 178:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 179:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 180:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 181:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 182:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and doe
 183:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 184:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return pxEventBits;
 183              		.loc 1 185 10
 184 002a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 11


 186:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 185              		.loc 1 186 2
 186 002c 1846     		mov	r0, r3
 187 002e 0837     		adds	r7, r7, #8
 188              	.LCFI8:
 189              		.cfi_def_cfa_offset 8
 190 0030 BD46     		mov	sp, r7
 191              	.LCFI9:
 192              		.cfi_def_cfa_register 13
 193              		@ sp needed
 194 0032 80BD     		pop	{r7, pc}
 195              		.cfi_endproc
 196              	.LFE5:
 198              		.section	.text.xEventGroupSync,"ax",%progbits
 199              		.align	1
 200              		.global	xEventGroupSync
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	xEventGroupSync:
 206              	.LFB6:
 187:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 189:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 192:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 207              		.loc 1 192 1
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 48
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              	.LCFI10:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 8CB0     		sub	sp, sp, #48
 217              	.LCFI11:
 218              		.cfi_def_cfa_offset 56
 219 0004 00AF     		add	r7, sp, #0
 220              	.LCFI12:
 221              		.cfi_def_cfa_register 7
 222 0006 F860     		str	r0, [r7, #12]
 223 0008 B960     		str	r1, [r7, #8]
 224 000a 7A60     		str	r2, [r7, #4]
 225 000c 3B60     		str	r3, [r7]
 193:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 194:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 226              		.loc 1 194 15
 227 000e FB68     		ldr	r3, [r7, #12]
 228 0010 BB62     		str	r3, [r7, #40]
 195:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xAlreadyYielded;
 196:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 229              		.loc 1 196 12
 230 0012 0023     		movs	r3, #0
 231 0014 7B62     		str	r3, [r7, #36]
 197:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 12


 198:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 232              		.loc 1 198 2
 233 0016 7B68     		ldr	r3, [r7, #4]
 234 0018 03F07F43 		and	r3, r3, #-16777216
 235 001c 002B     		cmp	r3, #0
 236 001e 0AD0     		beq	.L12
 237              	.LBB41:
 238              	.LBB42:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 239              		.loc 2 195 2
 240              		.syntax unified
 241              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 242 0020 4FF05003 			mov r3, #80												
 243 0024 83F31188 		msr basepri, r3											
 244 0028 BFF36F8F 		isb														
 245 002c BFF34F8F 		dsb														
 246              	
 247              	@ 0 "" 2
 248              		.thumb
 249              		.syntax unified
 250 0030 BB61     		str	r3, [r7, #24]
 251              		.loc 2 203 1
 252 0032 00BF     		nop
 253              	.L13:
 254              	.LBE42:
 255              	.LBE41:
 256              		.loc 1 198 2 discriminator 1
 257 0034 FEE7     		b	.L13
 258              	.L12:
 199:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 259              		.loc 1 199 2
 260 0036 7B68     		ldr	r3, [r7, #4]
 261 0038 002B     		cmp	r3, #0
 262 003a 0AD1     		bne	.L14
 263              	.LBB43:
 264              	.LBB44:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 265              		.loc 2 195 2
 266              		.syntax unified
 267              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 268 003c 4FF05003 			mov r3, #80												
 269 0040 83F31188 		msr basepri, r3											
 270 0044 BFF36F8F 		isb														
 271 0048 BFF34F8F 		dsb														
 272              	
 273              	@ 0 "" 2
 274              		.thumb
 275              		.syntax unified
 276 004c 7B61     		str	r3, [r7, #20]
 277              		.loc 2 203 1
 278 004e 00BF     		nop
 279              	.L15:
 280              	.LBE44:
 281              	.LBE43:
 282              		.loc 1 199 2 discriminator 2
 283 0050 FEE7     		b	.L15
 284              	.L14:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 13


 200:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 201:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 202:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 285              		.loc 1 202 3
 286 0052 FFF7FEFF 		bl	xTaskGetSchedulerState
 287 0056 0346     		mov	r3, r0
 288 0058 002B     		cmp	r3, #0
 289 005a 02D1     		bne	.L16
 290              		.loc 1 202 3 is_stmt 0 discriminator 2
 291 005c 3B68     		ldr	r3, [r7]
 292 005e 002B     		cmp	r3, #0
 293 0060 01D1     		bne	.L17
 294              	.L16:
 295              		.loc 1 202 3 discriminator 3
 296 0062 0123     		movs	r3, #1
 297 0064 00E0     		b	.L18
 298              	.L17:
 299              		.loc 1 202 3 discriminator 4
 300 0066 0023     		movs	r3, #0
 301              	.L18:
 302              		.loc 1 202 3 discriminator 6
 303 0068 002B     		cmp	r3, #0
 304 006a 0AD1     		bne	.L19
 305              	.LBB45:
 306              	.LBB46:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 307              		.loc 2 195 2 is_stmt 1
 308              		.syntax unified
 309              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 310 006c 4FF05003 			mov r3, #80												
 311 0070 83F31188 		msr basepri, r3											
 312 0074 BFF36F8F 		isb														
 313 0078 BFF34F8F 		dsb														
 314              	
 315              	@ 0 "" 2
 316              		.thumb
 317              		.syntax unified
 318 007c 3B61     		str	r3, [r7, #16]
 319              		.loc 2 203 1
 320 007e 00BF     		nop
 321              	.L20:
 322              	.LBE46:
 323              	.LBE45:
 324              		.loc 1 202 3 discriminator 3
 325 0080 FEE7     		b	.L20
 326              	.L19:
 203:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 204:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 205:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 206:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 327              		.loc 1 206 2
 328 0082 FFF7FEFF 		bl	vTaskSuspendAll
 207:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 208:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 329              		.loc 1 208 22
 330 0086 BB6A     		ldr	r3, [r7, #40]
 331 0088 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 14


 332 008a 3B62     		str	r3, [r7, #32]
 209:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 333              		.loc 1 210 12
 334 008c B968     		ldr	r1, [r7, #8]
 335 008e F868     		ldr	r0, [r7, #12]
 336 0090 FFF7FEFF 		bl	xEventGroupSetBits
 211:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 337              		.loc 1 212 30
 338 0094 3A6A     		ldr	r2, [r7, #32]
 339 0096 BB68     		ldr	r3, [r7, #8]
 340 0098 1A43     		orrs	r2, r2, r3
 341              		.loc 1 212 46
 342 009a 7B68     		ldr	r3, [r7, #4]
 343 009c 1340     		ands	r3, r3, r2
 344              		.loc 1 212 5
 345 009e 7A68     		ldr	r2, [r7, #4]
 346 00a0 9A42     		cmp	r2, r3
 347 00a2 0DD1     		bne	.L21
 213:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 214:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 215:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 348              		.loc 1 215 13
 349 00a4 3A6A     		ldr	r2, [r7, #32]
 350 00a6 BB68     		ldr	r3, [r7, #8]
 351 00a8 1343     		orrs	r3, r3, r2
 352 00aa FB62     		str	r3, [r7, #44]
 216:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 217:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 218:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 219:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 353              		.loc 1 219 29
 354 00ac BB6A     		ldr	r3, [r7, #40]
 355 00ae 1A68     		ldr	r2, [r3]
 356              		.loc 1 219 32
 357 00b0 7B68     		ldr	r3, [r7, #4]
 358 00b2 DB43     		mvns	r3, r3
 359              		.loc 1 219 29
 360 00b4 1A40     		ands	r2, r2, r3
 361 00b6 BB6A     		ldr	r3, [r7, #40]
 362 00b8 1A60     		str	r2, [r3]
 220:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = 0;
 363              		.loc 1 221 17
 364 00ba 0023     		movs	r3, #0
 365 00bc 3B60     		str	r3, [r7]
 366 00be 13E0     		b	.L22
 367              	.L21:
 222:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 223:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 224:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 225:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 368              		.loc 1 225 6
 369 00c0 3B68     		ldr	r3, [r7]
 370 00c2 002B     		cmp	r3, #0
 371 00c4 0BD0     		beq	.L23
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 15


 226:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 227:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 228:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 230:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 231:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				found.  Then enter the blocked state. */
 232:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 372              		.loc 1 232 5
 373 00c6 BB6A     		ldr	r3, [r7, #40]
 374 00c8 181D     		adds	r0, r3, #4
 375 00ca 7B68     		ldr	r3, [r7, #4]
 376 00cc 43F0A063 		orr	r3, r3, #83886080
 377 00d0 3A68     		ldr	r2, [r7]
 378 00d2 1946     		mov	r1, r3
 379 00d4 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 233:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 234:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 235:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 236:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 237:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				assignment is omitted. */
 238:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = 0;
 380              		.loc 1 238 14
 381 00d8 0023     		movs	r3, #0
 382 00da FB62     		str	r3, [r7, #44]
 383 00dc 04E0     		b	.L22
 384              	.L23:
 239:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 240:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 241:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 242:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 243:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				specified - just return the current event bit value. */
 244:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 385              		.loc 1 244 14
 386 00de BB6A     		ldr	r3, [r7, #40]
 387 00e0 1B68     		ldr	r3, [r3]
 388 00e2 FB62     		str	r3, [r7, #44]
 245:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 389              		.loc 1 245 22
 390 00e4 0123     		movs	r3, #1
 391 00e6 7B62     		str	r3, [r7, #36]
 392              	.L22:
 246:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 247:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 248:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 249:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 393              		.loc 1 249 20
 394 00e8 FFF7FEFF 		bl	xTaskResumeAll
 395 00ec F861     		str	r0, [r7, #28]
 250:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 396              		.loc 1 251 4
 397 00ee 3B68     		ldr	r3, [r7]
 398 00f0 002B     		cmp	r3, #0
 399 00f2 2CD0     		beq	.L24
 252:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 253:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 400              		.loc 1 253 5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 16


 401 00f4 FB69     		ldr	r3, [r7, #28]
 402 00f6 002B     		cmp	r3, #0
 403 00f8 07D1     		bne	.L25
 254:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 255:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 404              		.loc 1 255 4
 405 00fa 174B     		ldr	r3, .L29
 406 00fc 4FF08052 		mov	r2, #268435456
 407 0100 1A60     		str	r2, [r3]
 408              		.syntax unified
 409              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 410 0102 BFF34F8F 		dsb
 411              	@ 0 "" 2
 412              	@ 255 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 413 0106 BFF36F8F 		isb
 414              	@ 0 "" 2
 415              		.thumb
 416              		.syntax unified
 417              	.L25:
 256:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 257:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 258:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 259:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 260:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 261:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 263:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 264:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 265:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 266:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 418              		.loc 1 266 14
 419 010a FFF7FEFF 		bl	uxTaskResetEventItemValue
 420 010e F862     		str	r0, [r7, #44]
 267:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 268:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 421              		.loc 1 268 18
 422 0110 FB6A     		ldr	r3, [r7, #44]
 423 0112 03F00073 		and	r3, r3, #33554432
 424              		.loc 1 268 5
 425 0116 002B     		cmp	r3, #0
 426 0118 15D1     		bne	.L26
 269:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 270:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 271:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 427              		.loc 1 271 4
 428 011a FFF7FEFF 		bl	vPortEnterCritical
 272:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 273:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 429              		.loc 1 273 14
 430 011e BB6A     		ldr	r3, [r7, #40]
 431 0120 1B68     		ldr	r3, [r3]
 432 0122 FB62     		str	r3, [r7, #44]
 274:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 276:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 277:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 278:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 17


 279:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 433              		.loc 1 279 20
 434 0124 FA6A     		ldr	r2, [r7, #44]
 435 0126 7B68     		ldr	r3, [r7, #4]
 436 0128 1340     		ands	r3, r3, r2
 437              		.loc 1 279 7
 438 012a 7A68     		ldr	r2, [r7, #4]
 439 012c 9A42     		cmp	r2, r3
 440 012e 06D1     		bne	.L27
 280:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 441              		.loc 1 281 31
 442 0130 BB6A     		ldr	r3, [r7, #40]
 443 0132 1A68     		ldr	r2, [r3]
 444              		.loc 1 281 34
 445 0134 7B68     		ldr	r3, [r7, #4]
 446 0136 DB43     		mvns	r3, r3
 447              		.loc 1 281 31
 448 0138 1A40     		ands	r2, r2, r3
 449 013a BB6A     		ldr	r3, [r7, #40]
 450 013c 1A60     		str	r2, [r3]
 451              	.L27:
 282:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 452              		.loc 1 288 4
 453 013e FFF7FEFF 		bl	vPortExitCritical
 289:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 454              		.loc 1 290 21
 455 0142 0123     		movs	r3, #1
 456 0144 7B62     		str	r3, [r7, #36]
 457              	.L26:
 291:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 292:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 293:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 295:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 296:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 297:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 298:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		returned. */
 299:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 458              		.loc 1 299 12
 459 0146 FB6A     		ldr	r3, [r7, #44]
 460 0148 23F07F43 		bic	r3, r3, #-16777216
 461 014c FB62     		str	r3, [r7, #44]
 462              	.L24:
 300:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 301:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 303:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 305:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 18


 306:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 463              		.loc 1 307 9
 464 014e FB6A     		ldr	r3, [r7, #44]
 308:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 465              		.loc 1 308 1
 466 0150 1846     		mov	r0, r3
 467 0152 3037     		adds	r7, r7, #48
 468              	.LCFI13:
 469              		.cfi_def_cfa_offset 8
 470 0154 BD46     		mov	sp, r7
 471              	.LCFI14:
 472              		.cfi_def_cfa_register 13
 473              		@ sp needed
 474 0156 80BD     		pop	{r7, pc}
 475              	.L30:
 476              		.align	2
 477              	.L29:
 478 0158 04ED00E0 		.word	-536810236
 479              		.cfi_endproc
 480              	.LFE6:
 482              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 483              		.align	1
 484              		.global	xEventGroupWaitBits
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	xEventGroupWaitBits:
 490              	.LFB7:
 309:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 310:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 312:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 491              		.loc 1 312 1
 492              		.cfi_startproc
 493              		@ args = 4, pretend = 0, frame = 64
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              	.LCFI15:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 90B0     		sub	sp, sp, #64
 501              	.LCFI16:
 502              		.cfi_def_cfa_offset 72
 503 0004 00AF     		add	r7, sp, #0
 504              	.LCFI17:
 505              		.cfi_def_cfa_register 7
 506 0006 F860     		str	r0, [r7, #12]
 507 0008 B960     		str	r1, [r7, #8]
 508 000a 7A60     		str	r2, [r7, #4]
 509 000c 3B60     		str	r3, [r7]
 313:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 510              		.loc 1 313 15
 511 000e FB68     		ldr	r3, [r7, #12]
 512 0010 7B63     		str	r3, [r7, #52]
 314:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 19


 513              		.loc 1 314 23
 514 0012 0023     		movs	r3, #0
 515 0014 BB63     		str	r3, [r7, #56]
 315:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 316:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 516              		.loc 1 316 12
 517 0016 0023     		movs	r3, #0
 518 0018 3B63     		str	r3, [r7, #48]
 317:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 318:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 319:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 320:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 519              		.loc 1 320 2
 520 001a FB68     		ldr	r3, [r7, #12]
 521 001c 002B     		cmp	r3, #0
 522 001e 0AD1     		bne	.L32
 523              	.LBB47:
 524              	.LBB48:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 525              		.loc 2 195 2
 526              		.syntax unified
 527              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 528 0020 4FF05003 			mov r3, #80												
 529 0024 83F31188 		msr basepri, r3											
 530 0028 BFF36F8F 		isb														
 531 002c BFF34F8F 		dsb														
 532              	
 533              	@ 0 "" 2
 534              		.thumb
 535              		.syntax unified
 536 0030 3B62     		str	r3, [r7, #32]
 537              		.loc 2 203 1
 538 0032 00BF     		nop
 539              	.L33:
 540              	.LBE48:
 541              	.LBE47:
 542              		.loc 1 320 2 discriminator 1
 543 0034 FEE7     		b	.L33
 544              	.L32:
 321:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 545              		.loc 1 321 2
 546 0036 BB68     		ldr	r3, [r7, #8]
 547 0038 03F07F43 		and	r3, r3, #-16777216
 548 003c 002B     		cmp	r3, #0
 549 003e 0AD0     		beq	.L34
 550              	.LBB49:
 551              	.LBB50:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 552              		.loc 2 195 2
 553              		.syntax unified
 554              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 555 0040 4FF05003 			mov r3, #80												
 556 0044 83F31188 		msr basepri, r3											
 557 0048 BFF36F8F 		isb														
 558 004c BFF34F8F 		dsb														
 559              	
 560              	@ 0 "" 2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 20


 561              		.thumb
 562              		.syntax unified
 563 0050 FB61     		str	r3, [r7, #28]
 564              		.loc 2 203 1
 565 0052 00BF     		nop
 566              	.L35:
 567              	.LBE50:
 568              	.LBE49:
 569              		.loc 1 321 2 discriminator 2
 570 0054 FEE7     		b	.L35
 571              	.L34:
 322:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 572              		.loc 1 322 2
 573 0056 BB68     		ldr	r3, [r7, #8]
 574 0058 002B     		cmp	r3, #0
 575 005a 0AD1     		bne	.L36
 576              	.LBB51:
 577              	.LBB52:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 578              		.loc 2 195 2
 579              		.syntax unified
 580              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 581 005c 4FF05003 			mov r3, #80												
 582 0060 83F31188 		msr basepri, r3											
 583 0064 BFF36F8F 		isb														
 584 0068 BFF34F8F 		dsb														
 585              	
 586              	@ 0 "" 2
 587              		.thumb
 588              		.syntax unified
 589 006c BB61     		str	r3, [r7, #24]
 590              		.loc 2 203 1
 591 006e 00BF     		nop
 592              	.L37:
 593              	.LBE52:
 594              	.LBE51:
 595              		.loc 1 322 2 discriminator 3
 596 0070 FEE7     		b	.L37
 597              	.L36:
 323:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 324:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 325:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 598              		.loc 1 325 3
 599 0072 FFF7FEFF 		bl	xTaskGetSchedulerState
 600 0076 0346     		mov	r3, r0
 601 0078 002B     		cmp	r3, #0
 602 007a 02D1     		bne	.L38
 603              		.loc 1 325 3 is_stmt 0 discriminator 2
 604 007c BB6C     		ldr	r3, [r7, #72]
 605 007e 002B     		cmp	r3, #0
 606 0080 01D1     		bne	.L39
 607              	.L38:
 608              		.loc 1 325 3 discriminator 3
 609 0082 0123     		movs	r3, #1
 610 0084 00E0     		b	.L40
 611              	.L39:
 612              		.loc 1 325 3 discriminator 4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 21


 613 0086 0023     		movs	r3, #0
 614              	.L40:
 615              		.loc 1 325 3 discriminator 6
 616 0088 002B     		cmp	r3, #0
 617 008a 0AD1     		bne	.L41
 618              	.LBB53:
 619              	.LBB54:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 620              		.loc 2 195 2 is_stmt 1
 621              		.syntax unified
 622              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 623 008c 4FF05003 			mov r3, #80												
 624 0090 83F31188 		msr basepri, r3											
 625 0094 BFF36F8F 		isb														
 626 0098 BFF34F8F 		dsb														
 627              	
 628              	@ 0 "" 2
 629              		.thumb
 630              		.syntax unified
 631 009c 7B61     		str	r3, [r7, #20]
 632              		.loc 2 203 1
 633 009e 00BF     		nop
 634              	.L42:
 635              	.LBE54:
 636              	.LBE53:
 637              		.loc 1 325 3 discriminator 4
 638 00a0 FEE7     		b	.L42
 639              	.L41:
 326:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 327:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 640              		.loc 1 329 2
 641 00a2 FFF7FEFF 		bl	vTaskSuspendAll
 642              	.LBB55:
 330:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 331:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 643              		.loc 1 331 21
 644 00a6 7B6B     		ldr	r3, [r7, #52]
 645 00a8 1B68     		ldr	r3, [r3]
 646 00aa FB62     		str	r3, [r7, #44]
 332:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 334:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 647              		.loc 1 334 23
 648 00ac 3A68     		ldr	r2, [r7]
 649 00ae B968     		ldr	r1, [r7, #8]
 650 00b0 F86A     		ldr	r0, [r7, #44]
 651 00b2 FFF7FEFF 		bl	prvTestWaitCondition
 652 00b6 B862     		str	r0, [r7, #40]
 335:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 653              		.loc 1 336 5
 654 00b8 BB6A     		ldr	r3, [r7, #40]
 655 00ba 002B     		cmp	r3, #0
 656 00bc 0ED0     		beq	.L43
 337:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 22


 338:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 339:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			block. */
 340:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 657              		.loc 1 340 13
 658 00be FB6A     		ldr	r3, [r7, #44]
 659 00c0 FB63     		str	r3, [r7, #60]
 341:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 660              		.loc 1 341 17
 661 00c2 0023     		movs	r3, #0
 662 00c4 BB64     		str	r3, [r7, #72]
 342:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 344:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 663              		.loc 1 344 6
 664 00c6 7B68     		ldr	r3, [r7, #4]
 665 00c8 002B     		cmp	r3, #0
 666 00ca 28D0     		beq	.L44
 345:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 346:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 667              		.loc 1 346 30
 668 00cc 7B6B     		ldr	r3, [r7, #52]
 669 00ce 1A68     		ldr	r2, [r3]
 670              		.loc 1 346 33
 671 00d0 BB68     		ldr	r3, [r7, #8]
 672 00d2 DB43     		mvns	r3, r3
 673              		.loc 1 346 30
 674 00d4 1A40     		ands	r2, r2, r3
 675 00d6 7B6B     		ldr	r3, [r7, #52]
 676 00d8 1A60     		str	r2, [r3]
 677 00da 20E0     		b	.L44
 678              	.L43:
 347:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 348:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 349:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 350:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 351:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 352:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 353:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 679              		.loc 1 353 10
 680 00dc BB6C     		ldr	r3, [r7, #72]
 681 00de 002B     		cmp	r3, #0
 682 00e0 04D1     		bne	.L45
 354:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 355:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 356:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			specified, so just return the current value. */
 357:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 683              		.loc 1 357 13
 684 00e2 FB6A     		ldr	r3, [r7, #44]
 685 00e4 FB63     		str	r3, [r7, #60]
 358:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 686              		.loc 1 358 21
 687 00e6 0123     		movs	r3, #1
 688 00e8 3B63     		str	r3, [r7, #48]
 689 00ea 18E0     		b	.L44
 690              	.L45:
 359:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 360:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 23


 361:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 362:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 363:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 364:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 365:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			unblock the task. */
 366:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 691              		.loc 1 366 6
 692 00ec 7B68     		ldr	r3, [r7, #4]
 693 00ee 002B     		cmp	r3, #0
 694 00f0 03D0     		beq	.L46
 367:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 368:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 695              		.loc 1 368 19
 696 00f2 BB6B     		ldr	r3, [r7, #56]
 697 00f4 43F08073 		orr	r3, r3, #16777216
 698 00f8 BB63     		str	r3, [r7, #56]
 699              	.L46:
 369:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 370:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 371:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 372:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 373:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 374:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 375:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 700              		.loc 1 375 6
 701 00fa 3B68     		ldr	r3, [r7]
 702 00fc 002B     		cmp	r3, #0
 703 00fe 03D0     		beq	.L47
 376:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 377:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 704              		.loc 1 377 19
 705 0100 BB6B     		ldr	r3, [r7, #56]
 706 0102 43F08063 		orr	r3, r3, #67108864
 707 0106 BB63     		str	r3, [r7, #56]
 708              	.L47:
 378:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 379:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 380:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 381:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 382:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 383:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 385:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 386:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			found.  Then enter the blocked state. */
 387:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 709              		.loc 1 387 4
 710 0108 7B6B     		ldr	r3, [r7, #52]
 711 010a 181D     		adds	r0, r3, #4
 712 010c BA68     		ldr	r2, [r7, #8]
 713 010e BB6B     		ldr	r3, [r7, #56]
 714 0110 1343     		orrs	r3, r3, r2
 715 0112 BA6C     		ldr	r2, [r7, #72]
 716 0114 1946     		mov	r1, r3
 717 0116 FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 388:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 390:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 24


 391:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			being returned without being set if it is not done. */
 392:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxReturn = 0;
 718              		.loc 1 392 13
 719 011a 0023     		movs	r3, #0
 720 011c FB63     		str	r3, [r7, #60]
 721              	.L44:
 722              	.LBE55:
 393:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 394:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 395:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 396:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 397:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 723              		.loc 1 397 20
 724 011e FFF7FEFF 		bl	xTaskResumeAll
 725 0122 7862     		str	r0, [r7, #36]
 398:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 726              		.loc 1 399 4
 727 0124 BB6C     		ldr	r3, [r7, #72]
 728 0126 002B     		cmp	r3, #0
 729 0128 31D0     		beq	.L48
 400:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 401:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 730              		.loc 1 401 5
 731 012a 7B6A     		ldr	r3, [r7, #36]
 732 012c 002B     		cmp	r3, #0
 733 012e 07D1     		bne	.L49
 402:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 403:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			portYIELD_WITHIN_API();
 734              		.loc 1 403 4
 735 0130 194B     		ldr	r3, .L53
 736 0132 4FF08052 		mov	r2, #268435456
 737 0136 1A60     		str	r2, [r3]
 738              		.syntax unified
 739              	@ 403 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 740 0138 BFF34F8F 		dsb
 741              	@ 0 "" 2
 742              	@ 403 "Middlewares/Third_Party/FreeRTOS/Source/event_groups.c" 1
 743 013c BFF36F8F 		isb
 744              	@ 0 "" 2
 745              		.thumb
 746              		.syntax unified
 747              	.L49:
 404:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 405:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 406:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 407:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 408:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 409:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 410:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 411:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 412:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 413:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 414:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 748              		.loc 1 414 14
 749 0140 FFF7FEFF 		bl	uxTaskResetEventItemValue
 750 0144 F863     		str	r0, [r7, #60]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 25


 415:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 751              		.loc 1 416 18
 752 0146 FB6B     		ldr	r3, [r7, #60]
 753 0148 03F00073 		and	r3, r3, #33554432
 754              		.loc 1 416 5
 755 014c 002B     		cmp	r3, #0
 756 014e 1AD1     		bne	.L50
 417:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 418:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskENTER_CRITICAL();
 757              		.loc 1 418 4
 758 0150 FFF7FEFF 		bl	vPortEnterCritical
 419:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 420:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 421:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 759              		.loc 1 421 14
 760 0154 7B6B     		ldr	r3, [r7, #52]
 761 0156 1B68     		ldr	r3, [r3]
 762 0158 FB63     		str	r3, [r7, #60]
 422:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 424:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 425:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 763              		.loc 1 425 9
 764 015a 3A68     		ldr	r2, [r7]
 765 015c B968     		ldr	r1, [r7, #8]
 766 015e F86B     		ldr	r0, [r7, #60]
 767 0160 FFF7FEFF 		bl	prvTestWaitCondition
 768 0164 0346     		mov	r3, r0
 769              		.loc 1 425 7
 770 0166 002B     		cmp	r3, #0
 771 0168 09D0     		beq	.L51
 426:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 427:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 772              		.loc 1 427 8
 773 016a 7B68     		ldr	r3, [r7, #4]
 774 016c 002B     		cmp	r3, #0
 775 016e 06D0     		beq	.L51
 428:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 429:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 776              		.loc 1 429 32
 777 0170 7B6B     		ldr	r3, [r7, #52]
 778 0172 1A68     		ldr	r2, [r3]
 779              		.loc 1 429 35
 780 0174 BB68     		ldr	r3, [r7, #8]
 781 0176 DB43     		mvns	r3, r3
 782              		.loc 1 429 32
 783 0178 1A40     		ands	r2, r2, r3
 784 017a 7B6B     		ldr	r3, [r7, #52]
 785 017c 1A60     		str	r2, [r3]
 786              	.L51:
 430:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 431:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					else
 432:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					{
 433:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 434:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					}
 435:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 26


 436:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 437:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 438:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 439:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 440:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 787              		.loc 1 440 22
 788 017e 0123     		movs	r3, #1
 789 0180 3B63     		str	r3, [r7, #48]
 441:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 442:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			taskEXIT_CRITICAL();
 790              		.loc 1 442 4
 791 0182 FFF7FEFF 		bl	vPortExitCritical
 792              	.L50:
 443:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 444:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 445:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 446:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 447:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 448:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 450:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 793              		.loc 1 450 12
 794 0186 FB6B     		ldr	r3, [r7, #60]
 795 0188 23F07F43 		bic	r3, r3, #-16777216
 796 018c FB63     		str	r3, [r7, #60]
 797              	.L48:
 451:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 452:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 453:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 454:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 455:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTimeoutOccurred;
 456:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 798              		.loc 1 457 9
 799 018e FB6B     		ldr	r3, [r7, #60]
 458:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 800              		.loc 1 458 1
 801 0190 1846     		mov	r0, r3
 802 0192 4037     		adds	r7, r7, #64
 803              	.LCFI18:
 804              		.cfi_def_cfa_offset 8
 805 0194 BD46     		mov	sp, r7
 806              	.LCFI19:
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0196 80BD     		pop	{r7, pc}
 810              	.L54:
 811              		.align	2
 812              	.L53:
 813 0198 04ED00E0 		.word	-536810236
 814              		.cfi_endproc
 815              	.LFE7:
 817              		.section	.text.xEventGroupClearBits,"ax",%progbits
 818              		.align	1
 819              		.global	xEventGroupClearBits
 820              		.syntax unified
 821              		.thumb
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 27


 822              		.thumb_func
 824              	xEventGroupClearBits:
 825              	.LFB8:
 459:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 460:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 462:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 826              		.loc 1 462 1
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 24
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830 0000 80B5     		push	{r7, lr}
 831              	.LCFI20:
 832              		.cfi_def_cfa_offset 8
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 86B0     		sub	sp, sp, #24
 836              	.LCFI21:
 837              		.cfi_def_cfa_offset 32
 838 0004 00AF     		add	r7, sp, #0
 839              	.LCFI22:
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 842 0008 3960     		str	r1, [r7]
 463:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 843              		.loc 1 463 15
 844 000a 7B68     		ldr	r3, [r7, #4]
 845 000c 7B61     		str	r3, [r7, #20]
 464:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 465:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 467:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 468:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 846              		.loc 1 468 2
 847 000e 7B68     		ldr	r3, [r7, #4]
 848 0010 002B     		cmp	r3, #0
 849 0012 0AD1     		bne	.L56
 850              	.LBB56:
 851              	.LBB57:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 852              		.loc 2 195 2
 853              		.syntax unified
 854              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 855 0014 4FF05003 			mov r3, #80												
 856 0018 83F31188 		msr basepri, r3											
 857 001c BFF36F8F 		isb														
 858 0020 BFF34F8F 		dsb														
 859              	
 860              	@ 0 "" 2
 861              		.thumb
 862              		.syntax unified
 863 0024 FB60     		str	r3, [r7, #12]
 864              		.loc 2 203 1
 865 0026 00BF     		nop
 866              	.L57:
 867              	.LBE57:
 868              	.LBE56:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 28


 869              		.loc 1 468 2 discriminator 1
 870 0028 FEE7     		b	.L57
 871              	.L56:
 469:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 872              		.loc 1 469 2
 873 002a 3B68     		ldr	r3, [r7]
 874 002c 03F07F43 		and	r3, r3, #-16777216
 875 0030 002B     		cmp	r3, #0
 876 0032 0AD0     		beq	.L58
 877              	.LBB58:
 878              	.LBB59:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 879              		.loc 2 195 2
 880              		.syntax unified
 881              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 882 0034 4FF05003 			mov r3, #80												
 883 0038 83F31188 		msr basepri, r3											
 884 003c BFF36F8F 		isb														
 885 0040 BFF34F8F 		dsb														
 886              	
 887              	@ 0 "" 2
 888              		.thumb
 889              		.syntax unified
 890 0044 BB60     		str	r3, [r7, #8]
 891              		.loc 2 203 1
 892 0046 00BF     		nop
 893              	.L59:
 894              	.LBE59:
 895              	.LBE58:
 896              		.loc 1 469 2 discriminator 2
 897 0048 FEE7     		b	.L59
 898              	.L58:
 470:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskENTER_CRITICAL();
 899              		.loc 1 471 2
 900 004a FFF7FEFF 		bl	vPortEnterCritical
 472:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 473:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 474:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 476:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		cleared. */
 477:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 901              		.loc 1 477 12
 902 004e 7B69     		ldr	r3, [r7, #20]
 903 0050 1B68     		ldr	r3, [r3]
 904 0052 3B61     		str	r3, [r7, #16]
 478:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 479:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear the bits. */
 480:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 905              		.loc 1 480 28
 906 0054 7B69     		ldr	r3, [r7, #20]
 907 0056 1A68     		ldr	r2, [r3]
 908              		.loc 1 480 31
 909 0058 3B68     		ldr	r3, [r7]
 910 005a DB43     		mvns	r3, r3
 911              		.loc 1 480 28
 912 005c 1A40     		ands	r2, r2, r3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 29


 913 005e 7B69     		ldr	r3, [r7, #20]
 914 0060 1A60     		str	r2, [r3]
 481:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 482:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	taskEXIT_CRITICAL();
 915              		.loc 1 482 2
 916 0062 FFF7FEFF 		bl	vPortExitCritical
 483:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 917              		.loc 1 484 9
 918 0066 3B69     		ldr	r3, [r7, #16]
 485:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 919              		.loc 1 485 1
 920 0068 1846     		mov	r0, r3
 921 006a 1837     		adds	r7, r7, #24
 922              	.LCFI23:
 923              		.cfi_def_cfa_offset 8
 924 006c BD46     		mov	sp, r7
 925              	.LCFI24:
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 006e 80BD     		pop	{r7, pc}
 929              		.cfi_endproc
 930              	.LFE8:
 932              		.section	.text.xEventGroupClearBitsFromISR,"ax",%progbits
 933              		.align	1
 934              		.global	xEventGroupClearBitsFromISR
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 939              	xEventGroupClearBitsFromISR:
 940              	.LFB9:
 486:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 487:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 488:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 489:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 491:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 941              		.loc 1 491 2
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 16
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0000 80B5     		push	{r7, lr}
 946              	.LCFI25:
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 84B0     		sub	sp, sp, #16
 951              	.LCFI26:
 952              		.cfi_def_cfa_offset 24
 953 0004 00AF     		add	r7, sp, #0
 954              	.LCFI27:
 955              		.cfi_def_cfa_register 7
 956 0006 7860     		str	r0, [r7, #4]
 957 0008 3960     		str	r1, [r7]
 492:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		BaseType_t xReturn;
 493:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 494:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 30


 495:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 958              		.loc 1 495 13
 959 000a 0023     		movs	r3, #0
 960 000c 3A68     		ldr	r2, [r7]
 961 000e 7968     		ldr	r1, [r7, #4]
 962 0010 0448     		ldr	r0, .L63
 963 0012 FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 964 0016 F860     		str	r0, [r7, #12]
 496:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 965              		.loc 1 497 10
 966 0018 FB68     		ldr	r3, [r7, #12]
 498:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 967              		.loc 1 498 2
 968 001a 1846     		mov	r0, r3
 969 001c 1037     		adds	r7, r7, #16
 970              	.LCFI28:
 971              		.cfi_def_cfa_offset 8
 972 001e BD46     		mov	sp, r7
 973              	.LCFI29:
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 0020 80BD     		pop	{r7, pc}
 977              	.L64:
 978 0022 00BF     		.align	2
 979              	.L63:
 980 0024 00000000 		.word	vEventGroupClearBitsCallback
 981              		.cfi_endproc
 982              	.LFE9:
 984              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 985              		.align	1
 986              		.global	xEventGroupGetBitsFromISR
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	xEventGroupGetBitsFromISR:
 992              	.LFB10:
 499:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 500:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 501:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 502:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 504:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 993              		.loc 1 504 1
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 32
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              	.LCFI30:
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 0002 89B0     		sub	sp, sp, #36
 1003              	.LCFI31:
 1004              		.cfi_def_cfa_offset 40
 1005 0004 00AF     		add	r7, sp, #0
 1006              	.LCFI32:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 31


 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
 505:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 506:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t const * const pxEventBits = xEventGroup;
 1009              		.loc 1 506 28
 1010 0008 7B68     		ldr	r3, [r7, #4]
 1011 000a FB61     		str	r3, [r7, #28]
 1012              	.LBB60:
 1013              	.LBB61:
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1014              		.loc 2 211 2
 1015              		.syntax unified
 1016              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1017 000c EFF31182 			mrs r2, basepri											
 1018 0010 4FF05003 		mov r3, #80												
 1019 0014 83F31188 		msr basepri, r3											
 1020 0018 BFF36F8F 		isb														
 1021 001c BFF34F8F 		dsb														
 1022              	
 1023              	@ 0 "" 2
 1024              		.thumb
 1025              		.syntax unified
 1026 0020 FA60     		str	r2, [r7, #12]
 1027 0022 BB60     		str	r3, [r7, #8]
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1028              		.loc 2 223 9
 1029 0024 FB68     		ldr	r3, [r7, #12]
 1030              	.LBE61:
 1031              	.LBE60:
 507:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxReturn;
 508:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1032              		.loc 1 509 27
 1033 0026 BB61     		str	r3, [r7, #24]
 510:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 511:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 1034              		.loc 1 511 12
 1035 0028 FB69     		ldr	r3, [r7, #28]
 1036 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 32


 1037 002c 7B61     		str	r3, [r7, #20]
 1038 002e BB69     		ldr	r3, [r7, #24]
 1039 0030 3B61     		str	r3, [r7, #16]
 1040              	.LBB62:
 1041              	.LBB63:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1042              		.loc 2 229 2
 1043 0032 3B69     		ldr	r3, [r7, #16]
 1044              		.syntax unified
 1045              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1046 0034 83F31188 			msr basepri, r3	
 1047              	@ 0 "" 2
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1048              		.loc 2 233 1
 1049              		.thumb
 1050              		.syntax unified
 1051 0038 00BF     		nop
 1052              	.LBE63:
 1053              	.LBE62:
 512:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 513:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 514:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 515:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return uxReturn;
 1054              		.loc 1 515 9
 1055 003a 7B69     		ldr	r3, [r7, #20]
 516:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 1056              		.loc 1 516 1
 1057 003c 1846     		mov	r0, r3
 1058 003e 2437     		adds	r7, r7, #36
 1059              	.LCFI33:
 1060              		.cfi_def_cfa_offset 4
 1061 0040 BD46     		mov	sp, r7
 1062              	.LCFI34:
 1063              		.cfi_def_cfa_register 13
 1064              		@ sp needed
 1065 0042 80BC     		pop	{r7}
 1066              	.LCFI35:
 1067              		.cfi_restore 7
 1068              		.cfi_def_cfa_offset 0
 1069 0044 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE10:
 1073              		.section	.text.xEventGroupSetBits,"ax",%progbits
 1074              		.align	1
 1075              		.global	xEventGroupSetBits
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1080              	xEventGroupSetBits:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 33


 1081              	.LFB11:
 517:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 518:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 520:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1082              		.loc 1 520 1
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 56
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              	.LCFI36:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 8EB0     		sub	sp, sp, #56
 1092              	.LCFI37:
 1093              		.cfi_def_cfa_offset 64
 1094 0004 00AF     		add	r7, sp, #0
 1095              	.LCFI38:
 1096              		.cfi_def_cfa_register 7
 1097 0006 7860     		str	r0, [r7, #4]
 1098 0008 3960     		str	r1, [r7]
 521:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 522:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** ListItem_t const *pxListEnd;
 523:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** List_t const * pxList;
 524:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 1099              		.loc 1 524 13
 1100 000a 0023     		movs	r3, #0
 1101 000c 3B63     		str	r3, [r7, #48]
 525:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1102              		.loc 1 525 15
 1103 000e 7B68     		ldr	r3, [r7, #4]
 1104 0010 BB62     		str	r3, [r7, #40]
 526:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 1105              		.loc 1 526 12
 1106 0012 0023     		movs	r3, #0
 1107 0014 FB62     		str	r3, [r7, #44]
 527:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 529:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	itself. */
 530:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( xEventGroup );
 1108              		.loc 1 530 2
 1109 0016 7B68     		ldr	r3, [r7, #4]
 1110 0018 002B     		cmp	r3, #0
 1111 001a 0AD1     		bne	.L69
 1112              	.LBB64:
 1113              	.LBB65:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1114              		.loc 2 195 2
 1115              		.syntax unified
 1116              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1117 001c 4FF05003 			mov r3, #80												
 1118 0020 83F31188 		msr basepri, r3											
 1119 0024 BFF36F8F 		isb														
 1120 0028 BFF34F8F 		dsb														
 1121              	
 1122              	@ 0 "" 2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 34


 1123              		.thumb
 1124              		.syntax unified
 1125 002c 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1126              		.loc 2 203 1
 1127 002e 00BF     		nop
 1128              	.L70:
 1129              	.LBE65:
 1130              	.LBE64:
 1131              		.loc 1 530 2 discriminator 1
 1132 0030 FEE7     		b	.L70
 1133              	.L69:
 531:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 1134              		.loc 1 531 2
 1135 0032 3B68     		ldr	r3, [r7]
 1136 0034 03F07F43 		and	r3, r3, #-16777216
 1137 0038 002B     		cmp	r3, #0
 1138 003a 0AD0     		beq	.L71
 1139              	.LBB66:
 1140              	.LBB67:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1141              		.loc 2 195 2
 1142              		.syntax unified
 1143              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1144 003c 4FF05003 			mov r3, #80												
 1145 0040 83F31188 		msr basepri, r3											
 1146 0044 BFF36F8F 		isb														
 1147 0048 BFF34F8F 		dsb														
 1148              	
 1149              	@ 0 "" 2
 1150              		.thumb
 1151              		.syntax unified
 1152 004c FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1153              		.loc 2 203 1
 1154 004e 00BF     		nop
 1155              	.L72:
 1156              	.LBE67:
 1157              	.LBE66:
 1158              		.loc 1 531 2 discriminator 2
 1159 0050 FEE7     		b	.L72
 1160              	.L71:
 532:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 1161              		.loc 1 533 9
 1162 0052 BB6A     		ldr	r3, [r7, #40]
 1163 0054 0433     		adds	r3, r3, #4
 1164 0056 7B62     		str	r3, [r7, #36]
 534:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is use
 1165              		.loc 1 534 12
 1166 0058 7B6A     		ldr	r3, [r7, #36]
 1167 005a 0833     		adds	r3, r3, #8
 1168 005c 3B62     		str	r3, [r7, #32]
 535:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1169              		.loc 1 535 2
 1170 005e FFF7FEFF 		bl	vTaskSuspendAll
 536:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 35


 537:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 538:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 1171              		.loc 1 539 14
 1172 0062 7B6A     		ldr	r3, [r7, #36]
 1173 0064 DB68     		ldr	r3, [r3, #12]
 1174 0066 7B63     		str	r3, [r7, #52]
 540:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Set the bits. */
 542:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 1175              		.loc 1 542 28
 1176 0068 BB6A     		ldr	r3, [r7, #40]
 1177 006a 1A68     		ldr	r2, [r3]
 1178 006c 3B68     		ldr	r3, [r7]
 1179 006e 1A43     		orrs	r2, r2, r3
 1180 0070 BB6A     		ldr	r3, [r7, #40]
 1181 0072 1A60     		str	r2, [r3]
 543:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 544:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 545:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 1182              		.loc 1 545 8
 1183 0074 3CE0     		b	.L73
 1184              	.L78:
 546:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 547:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 1185              		.loc 1 547 11
 1186 0076 7B6B     		ldr	r3, [r7, #52]
 1187 0078 5B68     		ldr	r3, [r3, #4]
 1188 007a FB61     		str	r3, [r7, #28]
 548:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 1189              		.loc 1 548 20
 1190 007c 7B6B     		ldr	r3, [r7, #52]
 1191 007e 1B68     		ldr	r3, [r3]
 1192 0080 BB61     		str	r3, [r7, #24]
 549:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xMatchFound = pdFALSE;
 1193              		.loc 1 549 16
 1194 0082 0023     		movs	r3, #0
 1195 0084 FB62     		str	r3, [r7, #44]
 550:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 551:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 552:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 1196              		.loc 1 552 18
 1197 0086 BB69     		ldr	r3, [r7, #24]
 1198 0088 03F07F43 		and	r3, r3, #-16777216
 1199 008c 7B61     		str	r3, [r7, #20]
 553:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 1200              		.loc 1 553 20
 1201 008e BB69     		ldr	r3, [r7, #24]
 1202 0090 23F07F43 		bic	r3, r3, #-16777216
 1203 0094 BB61     		str	r3, [r7, #24]
 554:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 1204              		.loc 1 555 24
 1205 0096 7B69     		ldr	r3, [r7, #20]
 1206 0098 03F08063 		and	r3, r3, #67108864
 1207              		.loc 1 555 6
 1208 009c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 36


 1209 009e 08D1     		bne	.L74
 556:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 557:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Just looking for single bit being set. */
 558:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 1210              		.loc 1 558 40
 1211 00a0 BB6A     		ldr	r3, [r7, #40]
 1212 00a2 1A68     		ldr	r2, [r3]
 1213              		.loc 1 558 27
 1214 00a4 BB69     		ldr	r3, [r7, #24]
 1215 00a6 1340     		ands	r3, r3, r2
 1216              		.loc 1 558 7
 1217 00a8 002B     		cmp	r3, #0
 1218 00aa 0BD0     		beq	.L75
 559:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 560:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					xMatchFound = pdTRUE;
 1219              		.loc 1 560 18
 1220 00ac 0123     		movs	r3, #1
 1221 00ae FB62     		str	r3, [r7, #44]
 1222 00b0 08E0     		b	.L75
 1223              	.L74:
 561:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 562:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 563:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 564:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 565:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 566:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 567:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 1224              		.loc 1 567 44
 1225 00b2 BB6A     		ldr	r3, [r7, #40]
 1226 00b4 1A68     		ldr	r2, [r3]
 1227              		.loc 1 567 31
 1228 00b6 BB69     		ldr	r3, [r7, #24]
 1229 00b8 1340     		ands	r3, r3, r2
 1230              		.loc 1 567 11
 1231 00ba BA69     		ldr	r2, [r7, #24]
 1232 00bc 9A42     		cmp	r2, r3
 1233 00be 01D1     		bne	.L75
 568:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 569:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* All bits are set. */
 570:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				xMatchFound = pdTRUE;
 1234              		.loc 1 570 17
 1235 00c0 0123     		movs	r3, #1
 1236 00c2 FB62     		str	r3, [r7, #44]
 1237              	.L75:
 571:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 572:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 573:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 574:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 575:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 576:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 1238              		.loc 1 577 6
 1239 00c4 FB6A     		ldr	r3, [r7, #44]
 1240 00c6 002B     		cmp	r3, #0
 1241 00c8 10D0     		beq	.L76
 578:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 579:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 37


 580:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 1242              		.loc 1 580 25
 1243 00ca 7B69     		ldr	r3, [r7, #20]
 1244 00cc 03F08073 		and	r3, r3, #16777216
 1245              		.loc 1 580 7
 1246 00d0 002B     		cmp	r3, #0
 1247 00d2 03D0     		beq	.L77
 581:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 582:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 1248              		.loc 1 582 20
 1249 00d4 3A6B     		ldr	r2, [r7, #48]
 1250 00d6 BB69     		ldr	r3, [r7, #24]
 1251 00d8 1343     		orrs	r3, r3, r2
 1252 00da 3B63     		str	r3, [r7, #48]
 1253              	.L77:
 583:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 590:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				item before removing the task from the event list.  The
 591:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 592:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 593:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				than because it timed out. */
 594:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 1254              		.loc 1 594 63
 1255 00dc BB6A     		ldr	r3, [r7, #40]
 1256 00de 1B68     		ldr	r3, [r3]
 1257              		.loc 1 594 5
 1258 00e0 43F00073 		orr	r3, r3, #33554432
 1259 00e4 1946     		mov	r1, r3
 1260 00e6 786B     		ldr	r0, [r7, #52]
 1261 00e8 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1262              	.L76:
 595:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 596:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 598:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 599:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 600:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			pxListItem = pxNext;
 1263              		.loc 1 600 15
 1264 00ec FB69     		ldr	r3, [r7, #28]
 1265 00ee 7B63     		str	r3, [r7, #52]
 1266              	.L73:
 545:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1267              		.loc 1 545 8
 1268 00f0 7A6B     		ldr	r2, [r7, #52]
 1269 00f2 3B6A     		ldr	r3, [r7, #32]
 1270 00f4 9A42     		cmp	r2, r3
 1271 00f6 BED1     		bne	.L78
 601:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 602:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 603:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 604:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		bit was set in the control word. */
 605:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 38


 1272              		.loc 1 605 28
 1273 00f8 BB6A     		ldr	r3, [r7, #40]
 1274 00fa 1A68     		ldr	r2, [r3]
 1275              		.loc 1 605 31
 1276 00fc 3B6B     		ldr	r3, [r7, #48]
 1277 00fe DB43     		mvns	r3, r3
 1278              		.loc 1 605 28
 1279 0100 1A40     		ands	r2, r2, r3
 1280 0102 BB6A     		ldr	r3, [r7, #40]
 1281 0104 1A60     		str	r2, [r3]
 606:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 607:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 1282              		.loc 1 607 11
 1283 0106 FFF7FEFF 		bl	xTaskResumeAll
 608:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 609:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 1284              		.loc 1 609 20
 1285 010a BB6A     		ldr	r3, [r7, #40]
 1286 010c 1B68     		ldr	r3, [r3]
 610:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1287              		.loc 1 610 1
 1288 010e 1846     		mov	r0, r3
 1289 0110 3837     		adds	r7, r7, #56
 1290              	.LCFI39:
 1291              		.cfi_def_cfa_offset 8
 1292 0112 BD46     		mov	sp, r7
 1293              	.LCFI40:
 1294              		.cfi_def_cfa_register 13
 1295              		@ sp needed
 1296 0114 80BD     		pop	{r7, pc}
 1297              		.cfi_endproc
 1298              	.LFE11:
 1300              		.section	.text.vEventGroupDelete,"ax",%progbits
 1301              		.align	1
 1302              		.global	vEventGroupDelete
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1307              	vEventGroupDelete:
 1308              	.LFB12:
 611:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 612:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 614:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1309              		.loc 1 614 1
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 24
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313 0000 80B5     		push	{r7, lr}
 1314              	.LCFI41:
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 86B0     		sub	sp, sp, #24
 1319              	.LCFI42:
 1320              		.cfi_def_cfa_offset 32
 1321 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 39


 1322              	.LCFI43:
 1323              		.cfi_def_cfa_register 7
 1324 0006 7860     		str	r0, [r7, #4]
 615:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 1325              		.loc 1 615 15
 1326 0008 7B68     		ldr	r3, [r7, #4]
 1327 000a 7B61     		str	r3, [r7, #20]
 616:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 1328              		.loc 1 616 15
 1329 000c 7B69     		ldr	r3, [r7, #20]
 1330 000e 0433     		adds	r3, r3, #4
 1331 0010 3B61     		str	r3, [r7, #16]
 617:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	vTaskSuspendAll();
 1332              		.loc 1 618 2
 1333 0012 FFF7FEFF 		bl	vTaskSuspendAll
 619:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 620:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 621:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 1334              		.loc 1 622 8
 1335 0016 17E0     		b	.L81
 1336              	.L84:
 623:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 624:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 625:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			and cannot therefore have any bits set. */
 626:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 1337              		.loc 1 626 4
 1338 0018 3B69     		ldr	r3, [r7, #16]
 1339 001a DA68     		ldr	r2, [r3, #12]
 1340 001c 3B69     		ldr	r3, [r7, #16]
 1341 001e 0833     		adds	r3, r3, #8
 1342 0020 9A42     		cmp	r2, r3
 1343 0022 0AD1     		bne	.L82
 1344              	.LBB68:
 1345              	.LBB69:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1346              		.loc 2 195 2
 1347              		.syntax unified
 1348              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1349 0024 4FF05003 			mov r3, #80												
 1350 0028 83F31188 		msr basepri, r3											
 1351 002c BFF36F8F 		isb														
 1352 0030 BFF34F8F 		dsb														
 1353              	
 1354              	@ 0 "" 2
 1355              		.thumb
 1356              		.syntax unified
 1357 0034 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1358              		.loc 2 203 1
 1359 0036 00BF     		nop
 1360              	.L83:
 1361              	.LBE69:
 1362              	.LBE68:
 1363              		.loc 1 626 4 discriminator 1
 1364 0038 FEE7     		b	.L83
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 40


 1365              	.L82:
 627:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 1366              		.loc 1 627 70
 1367 003a 3B69     		ldr	r3, [r7, #16]
 1368 003c DB68     		ldr	r3, [r3, #12]
 1369              		.loc 1 627 4
 1370 003e 4FF00071 		mov	r1, #33554432
 1371 0042 1846     		mov	r0, r3
 1372 0044 FFF7FEFF 		bl	vTaskRemoveFromUnorderedEventList
 1373              	.L81:
 622:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1374              		.loc 1 622 10
 1375 0048 3B69     		ldr	r3, [r7, #16]
 1376 004a 1B68     		ldr	r3, [r3]
 622:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 1377              		.loc 1 622 8
 1378 004c 002B     		cmp	r3, #0
 1379 004e E3D1     		bne	.L84
 628:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 631:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 632:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 633:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			it again. */
 634:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			vPortFree( pxEventBits );
 635:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 636:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 638:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			/* The event group could have been allocated statically or
 639:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 640:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 1380              		.loc 1 640 19
 1381 0050 7B69     		ldr	r3, [r7, #20]
 1382 0052 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1383              		.loc 1 640 6
 1384 0054 002B     		cmp	r3, #0
 1385 0056 02D1     		bne	.L85
 641:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 642:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				vPortFree( pxEventBits );
 1386              		.loc 1 642 5
 1387 0058 7869     		ldr	r0, [r7, #20]
 1388 005a FFF7FEFF 		bl	vPortFree
 1389              	.L85:
 643:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 644:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			else
 645:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			{
 646:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 647:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			}
 648:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 649:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 650:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 651:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xTaskResumeAll();
 1390              		.loc 1 651 11
 1391 005e FFF7FEFF 		bl	xTaskResumeAll
 652:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1392              		.loc 1 652 1
 1393 0062 00BF     		nop
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 41


 1394 0064 1837     		adds	r7, r7, #24
 1395              	.LCFI44:
 1396              		.cfi_def_cfa_offset 8
 1397 0066 BD46     		mov	sp, r7
 1398              	.LCFI45:
 1399              		.cfi_def_cfa_register 13
 1400              		@ sp needed
 1401 0068 80BD     		pop	{r7, pc}
 1402              		.cfi_endproc
 1403              	.LFE12:
 1405              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1406              		.align	1
 1407              		.global	vEventGroupSetBitsCallback
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1412              	vEventGroupSetBitsCallback:
 1413              	.LFB13:
 653:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 654:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 655:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 656:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 657:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 658:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1414              		.loc 1 658 1
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 8
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418 0000 80B5     		push	{r7, lr}
 1419              	.LCFI46:
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 7, -8
 1422              		.cfi_offset 14, -4
 1423 0002 82B0     		sub	sp, sp, #8
 1424              	.LCFI47:
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              	.LCFI48:
 1428              		.cfi_def_cfa_register 7
 1429 0006 7860     		str	r0, [r7, #4]
 1430 0008 3960     		str	r1, [r7]
 659:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 1431              		.loc 1 659 11
 1432 000a 3968     		ldr	r1, [r7]
 1433 000c 7868     		ldr	r0, [r7, #4]
 1434 000e FFF7FEFF 		bl	xEventGroupSetBits
 660:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1435              		.loc 1 660 1
 1436 0012 00BF     		nop
 1437 0014 0837     		adds	r7, r7, #8
 1438              	.LCFI49:
 1439              		.cfi_def_cfa_offset 8
 1440 0016 BD46     		mov	sp, r7
 1441              	.LCFI50:
 1442              		.cfi_def_cfa_register 13
 1443              		@ sp needed
 1444 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 42


 1445              		.cfi_endproc
 1446              	.LFE13:
 1448              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 1449              		.align	1
 1450              		.global	vEventGroupClearBitsCallback
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1455              	vEventGroupClearBitsCallback:
 1456              	.LFB14:
 661:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 662:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 664:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** an interrupt. */
 665:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 666:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1457              		.loc 1 666 1
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 8
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461 0000 80B5     		push	{r7, lr}
 1462              	.LCFI51:
 1463              		.cfi_def_cfa_offset 8
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 82B0     		sub	sp, sp, #8
 1467              	.LCFI52:
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              	.LCFI53:
 1471              		.cfi_def_cfa_register 7
 1472 0006 7860     		str	r0, [r7, #4]
 1473 0008 3960     		str	r1, [r7]
 667:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 1474              		.loc 1 667 11
 1475 000a 3968     		ldr	r1, [r7]
 1476 000c 7868     		ldr	r0, [r7, #4]
 1477 000e FFF7FEFF 		bl	xEventGroupClearBits
 668:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1478              		.loc 1 668 1
 1479 0012 00BF     		nop
 1480 0014 0837     		adds	r7, r7, #8
 1481              	.LCFI54:
 1482              		.cfi_def_cfa_offset 8
 1483 0016 BD46     		mov	sp, r7
 1484              	.LCFI55:
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 0018 80BD     		pop	{r7, pc}
 1488              		.cfi_endproc
 1489              	.LFE14:
 1491              		.section	.text.prvTestWaitCondition,"ax",%progbits
 1492              		.align	1
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1497              	prvTestWaitCondition:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 43


 1498              	.LFB15:
 669:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 670:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 672:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** {
 1499              		.loc 1 672 1
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 24
 1502              		@ frame_needed = 1, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504 0000 80B4     		push	{r7}
 1505              	.LCFI56:
 1506              		.cfi_def_cfa_offset 4
 1507              		.cfi_offset 7, -4
 1508 0002 87B0     		sub	sp, sp, #28
 1509              	.LCFI57:
 1510              		.cfi_def_cfa_offset 32
 1511 0004 00AF     		add	r7, sp, #0
 1512              	.LCFI58:
 1513              		.cfi_def_cfa_register 7
 1514 0006 F860     		str	r0, [r7, #12]
 1515 0008 B960     		str	r1, [r7, #8]
 1516 000a 7A60     		str	r2, [r7, #4]
 673:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 1517              		.loc 1 673 12
 1518 000c 0023     		movs	r3, #0
 1519 000e 7B61     		str	r3, [r7, #20]
 674:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 1520              		.loc 1 675 4
 1521 0010 7B68     		ldr	r3, [r7, #4]
 1522 0012 002B     		cmp	r3, #0
 1523 0014 07D1     		bne	.L89
 676:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 677:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 678:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		set.  Is one already set? */
 679:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 1524              		.loc 1 679 28
 1525 0016 FA68     		ldr	r2, [r7, #12]
 1526 0018 BB68     		ldr	r3, [r7, #8]
 1527 001a 1340     		ands	r3, r3, r2
 1528              		.loc 1 679 5
 1529 001c 002B     		cmp	r3, #0
 1530 001e 0AD0     		beq	.L90
 680:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 681:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1531              		.loc 1 681 22
 1532 0020 0123     		movs	r3, #1
 1533 0022 7B61     		str	r3, [r7, #20]
 1534 0024 07E0     		b	.L90
 1535              	.L89:
 682:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 683:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 684:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 685:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 686:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 687:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 44


 688:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	else
 689:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 690:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 691:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		Are they set already? */
 692:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 1536              		.loc 1 692 28
 1537 0026 FA68     		ldr	r2, [r7, #12]
 1538 0028 BB68     		ldr	r3, [r7, #8]
 1539 002a 1340     		ands	r3, r3, r2
 1540              		.loc 1 692 5
 1541 002c BA68     		ldr	r2, [r7, #8]
 1542 002e 9A42     		cmp	r2, r3
 1543 0030 01D1     		bne	.L90
 693:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 694:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1544              		.loc 1 694 22
 1545 0032 0123     		movs	r3, #1
 1546 0034 7B61     		str	r3, [r7, #20]
 1547              	.L90:
 695:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 696:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 697:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 698:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 699:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 700:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 701:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 702:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	return xWaitConditionMet;
 1548              		.loc 1 702 9
 1549 0036 7B69     		ldr	r3, [r7, #20]
 703:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** }
 1550              		.loc 1 703 1
 1551 0038 1846     		mov	r0, r3
 1552 003a 1C37     		adds	r7, r7, #28
 1553              	.LCFI59:
 1554              		.cfi_def_cfa_offset 4
 1555 003c BD46     		mov	sp, r7
 1556              	.LCFI60:
 1557              		.cfi_def_cfa_register 13
 1558              		@ sp needed
 1559 003e 80BC     		pop	{r7}
 1560              	.LCFI61:
 1561              		.cfi_restore 7
 1562              		.cfi_def_cfa_offset 0
 1563 0040 7047     		bx	lr
 1564              		.cfi_endproc
 1565              	.LFE15:
 1567              		.section	.text.xEventGroupSetBitsFromISR,"ax",%progbits
 1568              		.align	1
 1569              		.global	xEventGroupSetBitsFromISR
 1570              		.syntax unified
 1571              		.thumb
 1572              		.thumb_func
 1574              	xEventGroupSetBitsFromISR:
 1575              	.LFB16:
 704:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 705:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 45


 707:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 709:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1576              		.loc 1 709 2
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 24
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580 0000 80B5     		push	{r7, lr}
 1581              	.LCFI62:
 1582              		.cfi_def_cfa_offset 8
 1583              		.cfi_offset 7, -8
 1584              		.cfi_offset 14, -4
 1585 0002 86B0     		sub	sp, sp, #24
 1586              	.LCFI63:
 1587              		.cfi_def_cfa_offset 32
 1588 0004 00AF     		add	r7, sp, #0
 1589              	.LCFI64:
 1590              		.cfi_def_cfa_register 7
 1591 0006 F860     		str	r0, [r7, #12]
 1592 0008 B960     		str	r1, [r7, #8]
 1593 000a 7A60     		str	r2, [r7, #4]
 710:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	BaseType_t xReturn;
 711:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 713:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 1594              		.loc 1 713 13
 1595 000c 7B68     		ldr	r3, [r7, #4]
 1596 000e BA68     		ldr	r2, [r7, #8]
 1597 0010 F968     		ldr	r1, [r7, #12]
 1598 0012 0448     		ldr	r0, .L94
 1599 0014 FFF7FEFF 		bl	xTimerPendFunctionCallFromISR
 1600 0018 7861     		str	r0, [r7, #20]
 714:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 715:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 1601              		.loc 1 715 10
 1602 001a 7B69     		ldr	r3, [r7, #20]
 716:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1603              		.loc 1 716 2
 1604 001c 1846     		mov	r0, r3
 1605 001e 1837     		adds	r7, r7, #24
 1606              	.LCFI65:
 1607              		.cfi_def_cfa_offset 8
 1608 0020 BD46     		mov	sp, r7
 1609              	.LCFI66:
 1610              		.cfi_def_cfa_register 13
 1611              		@ sp needed
 1612 0022 80BD     		pop	{r7, pc}
 1613              	.L95:
 1614              		.align	2
 1615              	.L94:
 1616 0024 00000000 		.word	vEventGroupSetBitsCallback
 1617              		.cfi_endproc
 1618              	.LFE16:
 1620              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 1621              		.align	1
 1622              		.global	uxEventGroupGetNumber
 1623              		.syntax unified
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 46


 1624              		.thumb
 1625              		.thumb_func
 1627              	uxEventGroupGetNumber:
 1628              	.LFB17:
 717:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif
 719:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 720:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 722:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 724:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1629              		.loc 1 724 2
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 16
 1632              		@ frame_needed = 1, uses_anonymous_args = 0
 1633              		@ link register save eliminated.
 1634 0000 80B4     		push	{r7}
 1635              	.LCFI67:
 1636              		.cfi_def_cfa_offset 4
 1637              		.cfi_offset 7, -4
 1638 0002 85B0     		sub	sp, sp, #20
 1639              	.LCFI68:
 1640              		.cfi_def_cfa_offset 24
 1641 0004 00AF     		add	r7, sp, #0
 1642              	.LCFI69:
 1643              		.cfi_def_cfa_register 7
 1644 0006 7860     		str	r0, [r7, #4]
 725:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	UBaseType_t xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	EventGroup_t const *pxEventBits = ( EventGroup_t * ) xEventGroup; /*lint !e9087 !e9079 EventGroupH
 1645              		.loc 1 726 22
 1646 0008 7B68     		ldr	r3, [r7, #4]
 1647 000a BB60     		str	r3, [r7, #8]
 727:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		if( xEventGroup == NULL )
 1648              		.loc 1 728 5
 1649 000c 7B68     		ldr	r3, [r7, #4]
 1650 000e 002B     		cmp	r3, #0
 1651 0010 02D1     		bne	.L97
 729:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 730:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = 0;
 1652              		.loc 1 730 12
 1653 0012 0023     		movs	r3, #0
 1654 0014 FB60     		str	r3, [r7, #12]
 1655 0016 02E0     		b	.L98
 1656              	.L97:
 731:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 732:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		else
 733:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		{
 734:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 1657              		.loc 1 734 12
 1658 0018 BB68     		ldr	r3, [r7, #8]
 1659 001a 9B69     		ldr	r3, [r3, #24]
 1660 001c FB60     		str	r3, [r7, #12]
 1661              	.L98:
 735:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		}
 736:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 47


 737:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		return xReturn;
 1662              		.loc 1 737 10
 1663 001e FB68     		ldr	r3, [r7, #12]
 738:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1664              		.loc 1 738 2
 1665 0020 1846     		mov	r0, r3
 1666 0022 1437     		adds	r7, r7, #20
 1667              	.LCFI70:
 1668              		.cfi_def_cfa_offset 4
 1669 0024 BD46     		mov	sp, r7
 1670              	.LCFI71:
 1671              		.cfi_def_cfa_register 13
 1672              		@ sp needed
 1673 0026 80BC     		pop	{r7}
 1674              	.LCFI72:
 1675              		.cfi_restore 7
 1676              		.cfi_def_cfa_offset 0
 1677 0028 7047     		bx	lr
 1678              		.cfi_endproc
 1679              	.LFE17:
 1681              		.section	.text.vEventGroupSetNumber,"ax",%progbits
 1682              		.align	1
 1683              		.global	vEventGroupSetNumber
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1688              	vEventGroupSetNumber:
 1689              	.LFB18:
 739:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 741:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** /*-----------------------------------------------------------*/
 742:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 744:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 
 745:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 746:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	{
 1690              		.loc 1 746 2
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 8
 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 1695 0000 80B4     		push	{r7}
 1696              	.LCFI73:
 1697              		.cfi_def_cfa_offset 4
 1698              		.cfi_offset 7, -4
 1699 0002 83B0     		sub	sp, sp, #12
 1700              	.LCFI74:
 1701              		.cfi_def_cfa_offset 16
 1702 0004 00AF     		add	r7, sp, #0
 1703              	.LCFI75:
 1704              		.cfi_def_cfa_register 7
 1705 0006 7860     		str	r0, [r7, #4]
 1706 0008 3960     		str	r1, [r7]
 747:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber; /*lint !e9087 !e9079
 1707              		.loc 1 747 58
 1708 000a 7B68     		ldr	r3, [r7, #4]
 1709 000c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 48


 1710 000e 9A61     		str	r2, [r3, #24]
 748:Middlewares/Third_Party/FreeRTOS/Source/event_groups.c **** 	}
 1711              		.loc 1 748 2
 1712 0010 00BF     		nop
 1713 0012 0C37     		adds	r7, r7, #12
 1714              	.LCFI76:
 1715              		.cfi_def_cfa_offset 4
 1716 0014 BD46     		mov	sp, r7
 1717              	.LCFI77:
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 0016 80BC     		pop	{r7}
 1721              	.LCFI78:
 1722              		.cfi_restore 7
 1723              		.cfi_def_cfa_offset 0
 1724 0018 7047     		bx	lr
 1725              		.cfi_endproc
 1726              	.LFE18:
 1728              		.text
 1729              	.Letext0:
 1730              		.file 3 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 1731              		.file 4 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 1732              		.file 5 "d:\\zodhya projects\\technical doccuments\\stm32_vscode_make\\tools\\gcc-arm-none-eabi-10
 1733              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1734              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1735              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/event_groups.h"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 event_groups.c
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:18     .text.xEventGroupCreateStatic:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:24     .text.xEventGroupCreateStatic:00000000 xEventGroupCreateStatic
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:138    .text.xEventGroupCreate:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:144    .text.xEventGroupCreate:00000000 xEventGroupCreate
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:199    .text.xEventGroupSync:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:205    .text.xEventGroupSync:00000000 xEventGroupSync
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1080   .text.xEventGroupSetBits:00000000 xEventGroupSetBits
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:478    .text.xEventGroupSync:00000158 $d
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:483    .text.xEventGroupWaitBits:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:489    .text.xEventGroupWaitBits:00000000 xEventGroupWaitBits
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1497   .text.prvTestWaitCondition:00000000 prvTestWaitCondition
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:813    .text.xEventGroupWaitBits:00000198 $d
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:818    .text.xEventGroupClearBits:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:824    .text.xEventGroupClearBits:00000000 xEventGroupClearBits
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:933    .text.xEventGroupClearBitsFromISR:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:939    .text.xEventGroupClearBitsFromISR:00000000 xEventGroupClearBitsFromISR
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:980    .text.xEventGroupClearBitsFromISR:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1455   .text.vEventGroupClearBitsCallback:00000000 vEventGroupClearBitsCallback
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:985    .text.xEventGroupGetBitsFromISR:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:991    .text.xEventGroupGetBitsFromISR:00000000 xEventGroupGetBitsFromISR
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1074   .text.xEventGroupSetBits:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1301   .text.vEventGroupDelete:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1307   .text.vEventGroupDelete:00000000 vEventGroupDelete
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1406   .text.vEventGroupSetBitsCallback:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1412   .text.vEventGroupSetBitsCallback:00000000 vEventGroupSetBitsCallback
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1449   .text.vEventGroupClearBitsCallback:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1492   .text.prvTestWaitCondition:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1568   .text.xEventGroupSetBitsFromISR:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1574   .text.xEventGroupSetBitsFromISR:00000000 xEventGroupSetBitsFromISR
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1616   .text.xEventGroupSetBitsFromISR:00000024 $d
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1621   .text.uxEventGroupGetNumber:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1627   .text.uxEventGroupGetNumber:00000000 uxEventGroupGetNumber
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1682   .text.vEventGroupSetNumber:00000000 $t
C:\Users\Lenovo\AppData\Local\Temp\ccK6QUXG.s:1688   .text.vEventGroupSetNumber:00000000 vEventGroupSetNumber

UNDEFINED SYMBOLS
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
vTaskPlaceOnUnorderedEventList
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
xTimerPendFunctionCallFromISR
vTaskRemoveFromUnorderedEventList
vPortFree
